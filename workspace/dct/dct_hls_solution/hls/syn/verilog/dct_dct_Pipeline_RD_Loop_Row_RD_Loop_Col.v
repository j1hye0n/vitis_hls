// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module dct_dct_Pipeline_RD_Loop_Row_RD_Loop_Col (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        buf_2d_in_address0,
        buf_2d_in_ce0,
        buf_2d_in_we0,
        buf_2d_in_d0,
        buf_2d_in_1_address0,
        buf_2d_in_1_ce0,
        buf_2d_in_1_we0,
        buf_2d_in_1_d0,
        buf_2d_in_2_address0,
        buf_2d_in_2_ce0,
        buf_2d_in_2_we0,
        buf_2d_in_2_d0,
        buf_2d_in_3_address0,
        buf_2d_in_3_ce0,
        buf_2d_in_3_we0,
        buf_2d_in_3_d0,
        buf_2d_in_4_address0,
        buf_2d_in_4_ce0,
        buf_2d_in_4_we0,
        buf_2d_in_4_d0,
        buf_2d_in_5_address0,
        buf_2d_in_5_ce0,
        buf_2d_in_5_we0,
        buf_2d_in_5_d0,
        buf_2d_in_6_address0,
        buf_2d_in_6_ce0,
        buf_2d_in_6_we0,
        buf_2d_in_6_d0,
        buf_2d_in_7_address0,
        buf_2d_in_7_ce0,
        buf_2d_in_7_we0,
        buf_2d_in_7_d0,
        input_r_address0,
        input_r_ce0,
        input_r_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] buf_2d_in_address0;
output   buf_2d_in_ce0;
output   buf_2d_in_we0;
output  [15:0] buf_2d_in_d0;
output  [2:0] buf_2d_in_1_address0;
output   buf_2d_in_1_ce0;
output   buf_2d_in_1_we0;
output  [15:0] buf_2d_in_1_d0;
output  [2:0] buf_2d_in_2_address0;
output   buf_2d_in_2_ce0;
output   buf_2d_in_2_we0;
output  [15:0] buf_2d_in_2_d0;
output  [2:0] buf_2d_in_3_address0;
output   buf_2d_in_3_ce0;
output   buf_2d_in_3_we0;
output  [15:0] buf_2d_in_3_d0;
output  [2:0] buf_2d_in_4_address0;
output   buf_2d_in_4_ce0;
output   buf_2d_in_4_we0;
output  [15:0] buf_2d_in_4_d0;
output  [2:0] buf_2d_in_5_address0;
output   buf_2d_in_5_ce0;
output   buf_2d_in_5_we0;
output  [15:0] buf_2d_in_5_d0;
output  [2:0] buf_2d_in_6_address0;
output   buf_2d_in_6_ce0;
output   buf_2d_in_6_we0;
output  [15:0] buf_2d_in_6_d0;
output  [2:0] buf_2d_in_7_address0;
output   buf_2d_in_7_ce0;
output   buf_2d_in_7_we0;
output  [15:0] buf_2d_in_7_d0;
output  [5:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln69_fu_233_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] select_ln69_fu_276_p3;
reg   [3:0] select_ln69_reg_366;
reg   [3:0] select_ln69_reg_366_pp0_iter2_reg;
wire   [2:0] trunc_ln71_fu_300_p1;
reg   [2:0] trunc_ln71_reg_371;
reg   [2:0] trunc_ln71_reg_371_pp0_iter2_reg;
wire   [5:0] add_ln73_fu_304_p2;
reg   [5:0] add_ln73_reg_375;
wire   [63:0] zext_ln73_fu_326_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln69_fu_330_p1;
reg   [3:0] c_fu_78;
wire   [3:0] add_ln71_fu_310_p2;
wire    ap_loop_init;
reg   [3:0] r_fu_82;
reg   [6:0] indvar_flatten_fu_86;
wire   [6:0] add_ln69_1_fu_239_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten_load;
reg    input_r_ce0_local;
reg    buf_2d_in_6_we0_local;
reg    buf_2d_in_6_ce0_local;
reg    buf_2d_in_5_we0_local;
reg    buf_2d_in_5_ce0_local;
reg    buf_2d_in_4_we0_local;
reg    buf_2d_in_4_ce0_local;
reg    buf_2d_in_3_we0_local;
reg    buf_2d_in_3_ce0_local;
reg    buf_2d_in_2_we0_local;
reg    buf_2d_in_2_ce0_local;
reg    buf_2d_in_1_we0_local;
reg    buf_2d_in_1_ce0_local;
reg    buf_2d_in_we0_local;
reg    buf_2d_in_ce0_local;
reg    buf_2d_in_7_we0_local;
reg    buf_2d_in_7_ce0_local;
wire   [0:0] icmp_ln71_fu_262_p2;
wire   [3:0] add_ln69_fu_256_p2;
wire   [2:0] empty_fu_284_p1;
wire   [3:0] select_ln66_fu_268_p3;
wire   [5:0] zext_ln71_fu_296_p1;
wire   [5:0] tmp_s_fu_288_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 c_fu_78 = 4'd0;
#0 r_fu_82 = 4'd0;
#0 indvar_flatten_fu_86 = 7'd0;
#0 ap_done_reg = 1'b0;
end

dct_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c_fu_78 <= 4'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            c_fu_78 <= add_ln71_fu_310_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln69_fu_233_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_86 <= add_ln69_1_fu_239_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_86 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            r_fu_82 <= 4'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            r_fu_82 <= select_ln69_fu_276_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln73_reg_375 <= add_ln73_fu_304_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        select_ln69_reg_366 <= select_ln69_fu_276_p3;
        trunc_ln71_reg_371 <= trunc_ln71_fu_300_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        select_ln69_reg_366_pp0_iter2_reg <= select_ln69_reg_366;
        trunc_ln71_reg_371_pp0_iter2_reg <= trunc_ln71_reg_371;
    end
end

always @ (*) begin
    if (((icmp_ln69_fu_233_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf_2d_in_1_ce0_local = 1'b1;
    end else begin
        buf_2d_in_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln71_reg_371_pp0_iter2_reg == 3'd1))) begin
        buf_2d_in_1_we0_local = 1'b1;
    end else begin
        buf_2d_in_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf_2d_in_2_ce0_local = 1'b1;
    end else begin
        buf_2d_in_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln71_reg_371_pp0_iter2_reg == 3'd2))) begin
        buf_2d_in_2_we0_local = 1'b1;
    end else begin
        buf_2d_in_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf_2d_in_3_ce0_local = 1'b1;
    end else begin
        buf_2d_in_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln71_reg_371_pp0_iter2_reg == 3'd3))) begin
        buf_2d_in_3_we0_local = 1'b1;
    end else begin
        buf_2d_in_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf_2d_in_4_ce0_local = 1'b1;
    end else begin
        buf_2d_in_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln71_reg_371_pp0_iter2_reg == 3'd4))) begin
        buf_2d_in_4_we0_local = 1'b1;
    end else begin
        buf_2d_in_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf_2d_in_5_ce0_local = 1'b1;
    end else begin
        buf_2d_in_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln71_reg_371_pp0_iter2_reg == 3'd5))) begin
        buf_2d_in_5_we0_local = 1'b1;
    end else begin
        buf_2d_in_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf_2d_in_6_ce0_local = 1'b1;
    end else begin
        buf_2d_in_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln71_reg_371_pp0_iter2_reg == 3'd6))) begin
        buf_2d_in_6_we0_local = 1'b1;
    end else begin
        buf_2d_in_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf_2d_in_7_ce0_local = 1'b1;
    end else begin
        buf_2d_in_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln71_reg_371_pp0_iter2_reg == 3'd7))) begin
        buf_2d_in_7_we0_local = 1'b1;
    end else begin
        buf_2d_in_7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf_2d_in_ce0_local = 1'b1;
    end else begin
        buf_2d_in_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln71_reg_371_pp0_iter2_reg == 3'd0))) begin
        buf_2d_in_we0_local = 1'b1;
    end else begin
        buf_2d_in_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        input_r_ce0_local = 1'b1;
    end else begin
        input_r_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln69_1_fu_239_p2 = (ap_sig_allocacmp_indvar_flatten_load + 7'd1);

assign add_ln69_fu_256_p2 = (r_fu_82 + 4'd1);

assign add_ln71_fu_310_p2 = (select_ln66_fu_268_p3 + 4'd1);

assign add_ln73_fu_304_p2 = (zext_ln71_fu_296_p1 + tmp_s_fu_288_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign buf_2d_in_1_address0 = zext_ln69_fu_330_p1;

assign buf_2d_in_1_ce0 = buf_2d_in_1_ce0_local;

assign buf_2d_in_1_d0 = input_r_q0;

assign buf_2d_in_1_we0 = buf_2d_in_1_we0_local;

assign buf_2d_in_2_address0 = zext_ln69_fu_330_p1;

assign buf_2d_in_2_ce0 = buf_2d_in_2_ce0_local;

assign buf_2d_in_2_d0 = input_r_q0;

assign buf_2d_in_2_we0 = buf_2d_in_2_we0_local;

assign buf_2d_in_3_address0 = zext_ln69_fu_330_p1;

assign buf_2d_in_3_ce0 = buf_2d_in_3_ce0_local;

assign buf_2d_in_3_d0 = input_r_q0;

assign buf_2d_in_3_we0 = buf_2d_in_3_we0_local;

assign buf_2d_in_4_address0 = zext_ln69_fu_330_p1;

assign buf_2d_in_4_ce0 = buf_2d_in_4_ce0_local;

assign buf_2d_in_4_d0 = input_r_q0;

assign buf_2d_in_4_we0 = buf_2d_in_4_we0_local;

assign buf_2d_in_5_address0 = zext_ln69_fu_330_p1;

assign buf_2d_in_5_ce0 = buf_2d_in_5_ce0_local;

assign buf_2d_in_5_d0 = input_r_q0;

assign buf_2d_in_5_we0 = buf_2d_in_5_we0_local;

assign buf_2d_in_6_address0 = zext_ln69_fu_330_p1;

assign buf_2d_in_6_ce0 = buf_2d_in_6_ce0_local;

assign buf_2d_in_6_d0 = input_r_q0;

assign buf_2d_in_6_we0 = buf_2d_in_6_we0_local;

assign buf_2d_in_7_address0 = zext_ln69_fu_330_p1;

assign buf_2d_in_7_ce0 = buf_2d_in_7_ce0_local;

assign buf_2d_in_7_d0 = input_r_q0;

assign buf_2d_in_7_we0 = buf_2d_in_7_we0_local;

assign buf_2d_in_address0 = zext_ln69_fu_330_p1;

assign buf_2d_in_ce0 = buf_2d_in_ce0_local;

assign buf_2d_in_d0 = input_r_q0;

assign buf_2d_in_we0 = buf_2d_in_we0_local;

assign empty_fu_284_p1 = select_ln69_fu_276_p3[2:0];

assign icmp_ln69_fu_233_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_262_p2 = ((c_fu_78 == 4'd8) ? 1'b1 : 1'b0);

assign input_r_address0 = zext_ln73_fu_326_p1;

assign input_r_ce0 = input_r_ce0_local;

assign select_ln66_fu_268_p3 = ((icmp_ln71_fu_262_p2[0:0] == 1'b1) ? 4'd0 : c_fu_78);

assign select_ln69_fu_276_p3 = ((icmp_ln71_fu_262_p2[0:0] == 1'b1) ? add_ln69_fu_256_p2 : r_fu_82);

assign tmp_s_fu_288_p3 = {{empty_fu_284_p1}, {3'd0}};

assign trunc_ln71_fu_300_p1 = select_ln66_fu_268_p3[2:0];

assign zext_ln69_fu_330_p1 = select_ln69_reg_366_pp0_iter2_reg;

assign zext_ln71_fu_296_p1 = select_ln66_fu_268_p3;

assign zext_ln73_fu_326_p1 = add_ln73_reg_375;

endmodule //dct_dct_Pipeline_RD_Loop_Row_RD_Loop_Col
