

================================================================
== Vitis HLS Report for 'dct_Pipeline_Col_DCT_Loop'
================================================================
* Date:           Wed Jul 23 16:03:59 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        dct_hls_solution
* Solution:       hls (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.157 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |       47|       47|  0.470 us|  0.470 us|   36|   36|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------+---------+---------+----------+-----------+-----------+------+----------+
        |                |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Col_DCT_Loop  |       45|       45|        18|          4|          1|     8|       yes|
        +----------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 18


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 18
* Pipeline : 1
  Pipeline-0 : II = 4, D = 18, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.91>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%i_1 = alloca i32 1" [dct.cpp:35->dct.cpp:103]   --->   Operation 21 'alloca' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (1.58ns)   --->   "%store_ln35 = store i4 0, i4 %i_1" [dct.cpp:35->dct.cpp:103]   --->   Operation 22 'store' 'store_ln35' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc33.i"   --->   Operation 23 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%i = load i4 %i_1" [dct.cpp:51->dct.cpp:103]   --->   Operation 24 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (1.73ns)   --->   "%icmp_ln51 = icmp_eq  i4 %i, i4 8" [dct.cpp:51->dct.cpp:103]   --->   Operation 25 'icmp' 'icmp_ln51' <Predicate = true> <Delay = 1.73> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (1.73ns)   --->   "%add_ln51 = add i4 %i, i4 1" [dct.cpp:51->dct.cpp:103]   --->   Operation 26 'add' 'add_ln51' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln51 = br i1 %icmp_ln51, void %for.inc33.i.split, void %for.inc50.i.preheader.exitStub" [dct.cpp:51->dct.cpp:103]   --->   Operation 27 'br' 'br_ln51' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%trunc_ln51 = trunc i4 %i" [dct.cpp:51->dct.cpp:103]   --->   Operation 28 'trunc' 'trunc_ln51' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (1.58ns)   --->   "%store_ln35 = store i4 %add_ln51, i4 %i_1" [dct.cpp:35->dct.cpp:103]   --->   Operation 29 'store' 'store_ln35' <Predicate = (!icmp_ln51)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 3.25>
ST_2 : Operation 30 [17/17] (3.25ns)   --->   "%call_ln53 = call void @dct_1d, i16 %col_inbuf, i3 %trunc_ln51, i16 %col_outbuf" [dct.cpp:53->dct.cpp:103]   --->   Operation 30 'call' 'call_ln53' <Predicate = (!icmp_ln51)> <Delay = 3.25> <CoreType = "Generic">   --->   Generic Core

State 3 <SV = 2> <Delay = 7.15>
ST_3 : Operation 31 [16/17] (7.15ns)   --->   "%call_ln53 = call void @dct_1d, i16 %col_inbuf, i3 %trunc_ln51, i16 %col_outbuf" [dct.cpp:53->dct.cpp:103]   --->   Operation 31 'call' 'call_ln53' <Predicate = (!icmp_ln51)> <Delay = 7.15> <CoreType = "Generic">   --->   Generic Core

State 4 <SV = 3> <Delay = 7.15>
ST_4 : Operation 32 [15/17] (7.15ns)   --->   "%call_ln53 = call void @dct_1d, i16 %col_inbuf, i3 %trunc_ln51, i16 %col_outbuf" [dct.cpp:53->dct.cpp:103]   --->   Operation 32 'call' 'call_ln53' <Predicate = (!icmp_ln51)> <Delay = 7.15> <CoreType = "Generic">   --->   Generic Core

State 5 <SV = 4> <Delay = 7.15>
ST_5 : Operation 33 [14/17] (7.15ns)   --->   "%call_ln53 = call void @dct_1d, i16 %col_inbuf, i3 %trunc_ln51, i16 %col_outbuf" [dct.cpp:53->dct.cpp:103]   --->   Operation 33 'call' 'call_ln53' <Predicate = (!icmp_ln51)> <Delay = 7.15> <CoreType = "Generic">   --->   Generic Core

State 6 <SV = 5> <Delay = 7.15>
ST_6 : Operation 34 [13/17] (7.15ns)   --->   "%call_ln53 = call void @dct_1d, i16 %col_inbuf, i3 %trunc_ln51, i16 %col_outbuf" [dct.cpp:53->dct.cpp:103]   --->   Operation 34 'call' 'call_ln53' <Predicate = true> <Delay = 7.15> <CoreType = "Generic">   --->   Generic Core

State 7 <SV = 6> <Delay = 7.15>
ST_7 : Operation 35 [12/17] (7.15ns)   --->   "%call_ln53 = call void @dct_1d, i16 %col_inbuf, i3 %trunc_ln51, i16 %col_outbuf" [dct.cpp:53->dct.cpp:103]   --->   Operation 35 'call' 'call_ln53' <Predicate = true> <Delay = 7.15> <CoreType = "Generic">   --->   Generic Core

State 8 <SV = 7> <Delay = 7.15>
ST_8 : Operation 36 [11/17] (7.15ns)   --->   "%call_ln53 = call void @dct_1d, i16 %col_inbuf, i3 %trunc_ln51, i16 %col_outbuf" [dct.cpp:53->dct.cpp:103]   --->   Operation 36 'call' 'call_ln53' <Predicate = true> <Delay = 7.15> <CoreType = "Generic">   --->   Generic Core

State 9 <SV = 8> <Delay = 7.15>
ST_9 : Operation 37 [10/17] (7.15ns)   --->   "%call_ln53 = call void @dct_1d, i16 %col_inbuf, i3 %trunc_ln51, i16 %col_outbuf" [dct.cpp:53->dct.cpp:103]   --->   Operation 37 'call' 'call_ln53' <Predicate = (!icmp_ln51)> <Delay = 7.15> <CoreType = "Generic">   --->   Generic Core

State 10 <SV = 9> <Delay = 7.15>
ST_10 : Operation 38 [9/17] (7.15ns)   --->   "%call_ln53 = call void @dct_1d, i16 %col_inbuf, i3 %trunc_ln51, i16 %col_outbuf" [dct.cpp:53->dct.cpp:103]   --->   Operation 38 'call' 'call_ln53' <Predicate = true> <Delay = 7.15> <CoreType = "Generic">   --->   Generic Core

State 11 <SV = 10> <Delay = 7.15>
ST_11 : Operation 39 [8/17] (7.15ns)   --->   "%call_ln53 = call void @dct_1d, i16 %col_inbuf, i3 %trunc_ln51, i16 %col_outbuf" [dct.cpp:53->dct.cpp:103]   --->   Operation 39 'call' 'call_ln53' <Predicate = true> <Delay = 7.15> <CoreType = "Generic">   --->   Generic Core

State 12 <SV = 11> <Delay = 7.15>
ST_12 : Operation 40 [7/17] (7.15ns)   --->   "%call_ln53 = call void @dct_1d, i16 %col_inbuf, i3 %trunc_ln51, i16 %col_outbuf" [dct.cpp:53->dct.cpp:103]   --->   Operation 40 'call' 'call_ln53' <Predicate = true> <Delay = 7.15> <CoreType = "Generic">   --->   Generic Core

State 13 <SV = 12> <Delay = 7.15>
ST_13 : Operation 41 [6/17] (7.15ns)   --->   "%call_ln53 = call void @dct_1d, i16 %col_inbuf, i3 %trunc_ln51, i16 %col_outbuf" [dct.cpp:53->dct.cpp:103]   --->   Operation 41 'call' 'call_ln53' <Predicate = (!icmp_ln51)> <Delay = 7.15> <CoreType = "Generic">   --->   Generic Core

State 14 <SV = 13> <Delay = 7.15>
ST_14 : Operation 42 [5/17] (7.15ns)   --->   "%call_ln53 = call void @dct_1d, i16 %col_inbuf, i3 %trunc_ln51, i16 %col_outbuf" [dct.cpp:53->dct.cpp:103]   --->   Operation 42 'call' 'call_ln53' <Predicate = true> <Delay = 7.15> <CoreType = "Generic">   --->   Generic Core
ST_14 : Operation 51 [1/1] (1.58ns)   --->   "%ret_ln0 = ret"   --->   Operation 51 'ret' 'ret_ln0' <Predicate = (icmp_ln51)> <Delay = 1.58>

State 15 <SV = 14> <Delay = 7.15>
ST_15 : Operation 43 [4/17] (7.15ns)   --->   "%call_ln53 = call void @dct_1d, i16 %col_inbuf, i3 %trunc_ln51, i16 %col_outbuf" [dct.cpp:53->dct.cpp:103]   --->   Operation 43 'call' 'call_ln53' <Predicate = true> <Delay = 7.15> <CoreType = "Generic">   --->   Generic Core

State 16 <SV = 15> <Delay = 7.15>
ST_16 : Operation 44 [3/17] (7.15ns)   --->   "%call_ln53 = call void @dct_1d, i16 %col_inbuf, i3 %trunc_ln51, i16 %col_outbuf" [dct.cpp:53->dct.cpp:103]   --->   Operation 44 'call' 'call_ln53' <Predicate = true> <Delay = 7.15> <CoreType = "Generic">   --->   Generic Core

State 17 <SV = 16> <Delay = 7.15>
ST_17 : Operation 45 [2/17] (7.15ns)   --->   "%call_ln53 = call void @dct_1d, i16 %col_inbuf, i3 %trunc_ln51, i16 %col_outbuf" [dct.cpp:53->dct.cpp:103]   --->   Operation 45 'call' 'call_ln53' <Predicate = (!icmp_ln51)> <Delay = 7.15> <CoreType = "Generic">   --->   Generic Core

State 18 <SV = 17> <Delay = 0.00>
ST_18 : Operation 46 [1/1] (0.00ns)   --->   "%specpipeline_ln52 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty" [dct.cpp:52->dct.cpp:103]   --->   Operation 46 'specpipeline' 'specpipeline_ln52' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 47 [1/1] (0.00ns)   --->   "%speclooptripcount_ln35 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 8, i64 8, i64 8" [dct.cpp:35->dct.cpp:103]   --->   Operation 47 'speclooptripcount' 'speclooptripcount_ln35' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 48 [1/1] (0.00ns)   --->   "%specloopname_ln51 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [dct.cpp:51->dct.cpp:103]   --->   Operation 48 'specloopname' 'specloopname_ln51' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 49 [1/17] (0.00ns)   --->   "%call_ln53 = call void @dct_1d, i16 %col_inbuf, i3 %trunc_ln51, i16 %col_outbuf" [dct.cpp:53->dct.cpp:103]   --->   Operation 49 'call' 'call_ln53' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Generic Core
ST_18 : Operation 50 [1/1] (0.00ns)   --->   "%br_ln51 = br void %for.inc33.i" [dct.cpp:51->dct.cpp:103]   --->   Operation 50 'br' 'br_ln51' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 4.911ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln35', dct.cpp:35->dct.cpp:103) of constant 0 on local variable 'i', dct.cpp:35->dct.cpp:103 [4]  (1.588 ns)
	'load' operation 4 bit ('i', dct.cpp:51->dct.cpp:103) on local variable 'i', dct.cpp:35->dct.cpp:103 [7]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln51', dct.cpp:51->dct.cpp:103) [8]  (1.735 ns)
	'store' operation 0 bit ('store_ln35', dct.cpp:35->dct.cpp:103) of variable 'add_ln51', dct.cpp:51->dct.cpp:103 on local variable 'i', dct.cpp:35->dct.cpp:103 [17]  (1.588 ns)

 <State 2>: 3.254ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln53', dct.cpp:53->dct.cpp:103) to 'dct_1d' [16]  (3.254 ns)

 <State 3>: 7.157ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln53', dct.cpp:53->dct.cpp:103) to 'dct_1d' [16]  (7.157 ns)

 <State 4>: 7.157ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln53', dct.cpp:53->dct.cpp:103) to 'dct_1d' [16]  (7.157 ns)

 <State 5>: 7.157ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln53', dct.cpp:53->dct.cpp:103) to 'dct_1d' [16]  (7.157 ns)

 <State 6>: 7.157ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln53', dct.cpp:53->dct.cpp:103) to 'dct_1d' [16]  (7.157 ns)

 <State 7>: 7.157ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln53', dct.cpp:53->dct.cpp:103) to 'dct_1d' [16]  (7.157 ns)

 <State 8>: 7.157ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln53', dct.cpp:53->dct.cpp:103) to 'dct_1d' [16]  (7.157 ns)

 <State 9>: 7.157ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln53', dct.cpp:53->dct.cpp:103) to 'dct_1d' [16]  (7.157 ns)

 <State 10>: 7.157ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln53', dct.cpp:53->dct.cpp:103) to 'dct_1d' [16]  (7.157 ns)

 <State 11>: 7.157ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln53', dct.cpp:53->dct.cpp:103) to 'dct_1d' [16]  (7.157 ns)

 <State 12>: 7.157ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln53', dct.cpp:53->dct.cpp:103) to 'dct_1d' [16]  (7.157 ns)

 <State 13>: 7.157ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln53', dct.cpp:53->dct.cpp:103) to 'dct_1d' [16]  (7.157 ns)

 <State 14>: 7.157ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln53', dct.cpp:53->dct.cpp:103) to 'dct_1d' [16]  (7.157 ns)

 <State 15>: 7.157ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln53', dct.cpp:53->dct.cpp:103) to 'dct_1d' [16]  (7.157 ns)

 <State 16>: 7.157ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln53', dct.cpp:53->dct.cpp:103) to 'dct_1d' [16]  (7.157 ns)

 <State 17>: 7.157ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln53', dct.cpp:53->dct.cpp:103) to 'dct_1d' [16]  (7.157 ns)

 <State 18>: 0.000ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
