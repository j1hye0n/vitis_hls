-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dct_dct_Pipeline_RD_Loop_Row_RD_Loop_Col is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    buf_2d_in_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buf_2d_in_ce0 : OUT STD_LOGIC;
    buf_2d_in_we0 : OUT STD_LOGIC;
    buf_2d_in_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    buf_2d_in_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buf_2d_in_1_ce0 : OUT STD_LOGIC;
    buf_2d_in_1_we0 : OUT STD_LOGIC;
    buf_2d_in_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    buf_2d_in_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buf_2d_in_2_ce0 : OUT STD_LOGIC;
    buf_2d_in_2_we0 : OUT STD_LOGIC;
    buf_2d_in_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    buf_2d_in_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buf_2d_in_3_ce0 : OUT STD_LOGIC;
    buf_2d_in_3_we0 : OUT STD_LOGIC;
    buf_2d_in_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    buf_2d_in_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buf_2d_in_4_ce0 : OUT STD_LOGIC;
    buf_2d_in_4_we0 : OUT STD_LOGIC;
    buf_2d_in_4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    buf_2d_in_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buf_2d_in_5_ce0 : OUT STD_LOGIC;
    buf_2d_in_5_we0 : OUT STD_LOGIC;
    buf_2d_in_5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    buf_2d_in_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buf_2d_in_6_ce0 : OUT STD_LOGIC;
    buf_2d_in_6_we0 : OUT STD_LOGIC;
    buf_2d_in_6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    buf_2d_in_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buf_2d_in_7_ce0 : OUT STD_LOGIC;
    buf_2d_in_7_we0 : OUT STD_LOGIC;
    buf_2d_in_7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of dct_dct_Pipeline_RD_Loop_Row_RD_Loop_Col is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln69_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln69_fu_276_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln69_reg_366 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln69_reg_366_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln71_fu_300_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln71_reg_371 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln71_reg_371_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln73_fu_304_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln73_reg_375 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln73_fu_326_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln69_fu_330_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal c_fu_78 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln71_fu_310_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal r_fu_82 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal indvar_flatten_fu_86 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln69_1_fu_239_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (6 downto 0);
    signal input_r_ce0_local : STD_LOGIC;
    signal buf_2d_in_6_we0_local : STD_LOGIC;
    signal buf_2d_in_6_ce0_local : STD_LOGIC;
    signal buf_2d_in_5_we0_local : STD_LOGIC;
    signal buf_2d_in_5_ce0_local : STD_LOGIC;
    signal buf_2d_in_4_we0_local : STD_LOGIC;
    signal buf_2d_in_4_ce0_local : STD_LOGIC;
    signal buf_2d_in_3_we0_local : STD_LOGIC;
    signal buf_2d_in_3_ce0_local : STD_LOGIC;
    signal buf_2d_in_2_we0_local : STD_LOGIC;
    signal buf_2d_in_2_ce0_local : STD_LOGIC;
    signal buf_2d_in_1_we0_local : STD_LOGIC;
    signal buf_2d_in_1_ce0_local : STD_LOGIC;
    signal buf_2d_in_we0_local : STD_LOGIC;
    signal buf_2d_in_ce0_local : STD_LOGIC;
    signal buf_2d_in_7_we0_local : STD_LOGIC;
    signal buf_2d_in_7_ce0_local : STD_LOGIC;
    signal icmp_ln71_fu_262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln69_fu_256_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_fu_284_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln66_fu_268_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln71_fu_296_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_288_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dct_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component dct_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    c_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    c_fu_78 <= ap_const_lv4_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    c_fu_78 <= add_ln71_fu_310_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln69_fu_233_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten_fu_86 <= add_ln69_1_fu_239_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_86 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;

    r_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    r_fu_82 <= ap_const_lv4_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    r_fu_82 <= select_ln69_fu_276_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln73_reg_375 <= add_ln73_fu_304_p2;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                select_ln69_reg_366 <= select_ln69_fu_276_p3;
                trunc_ln71_reg_371 <= trunc_ln71_fu_300_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                select_ln69_reg_366_pp0_iter2_reg <= select_ln69_reg_366;
                trunc_ln71_reg_371_pp0_iter2_reg <= trunc_ln71_reg_371;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln69_1_fu_239_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv7_1));
    add_ln69_fu_256_p2 <= std_logic_vector(unsigned(r_fu_82) + unsigned(ap_const_lv4_1));
    add_ln71_fu_310_p2 <= std_logic_vector(unsigned(select_ln66_fu_268_p3) + unsigned(ap_const_lv4_1));
    add_ln73_fu_304_p2 <= std_logic_vector(unsigned(zext_ln71_fu_296_p1) + unsigned(tmp_s_fu_288_p3));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln69_fu_233_p2)
    begin
        if (((icmp_ln69_fu_233_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_86)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_86;
        end if; 
    end process;

    buf_2d_in_1_address0 <= zext_ln69_fu_330_p1(3 - 1 downto 0);
    buf_2d_in_1_ce0 <= buf_2d_in_1_ce0_local;

    buf_2d_in_1_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            buf_2d_in_1_ce0_local <= ap_const_logic_1;
        else 
            buf_2d_in_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_1_d0 <= input_r_q0;
    buf_2d_in_1_we0 <= buf_2d_in_1_we0_local;

    buf_2d_in_1_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, trunc_ln71_reg_371_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln71_reg_371_pp0_iter2_reg = ap_const_lv3_1))) then 
            buf_2d_in_1_we0_local <= ap_const_logic_1;
        else 
            buf_2d_in_1_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_2_address0 <= zext_ln69_fu_330_p1(3 - 1 downto 0);
    buf_2d_in_2_ce0 <= buf_2d_in_2_ce0_local;

    buf_2d_in_2_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            buf_2d_in_2_ce0_local <= ap_const_logic_1;
        else 
            buf_2d_in_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_2_d0 <= input_r_q0;
    buf_2d_in_2_we0 <= buf_2d_in_2_we0_local;

    buf_2d_in_2_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, trunc_ln71_reg_371_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln71_reg_371_pp0_iter2_reg = ap_const_lv3_2))) then 
            buf_2d_in_2_we0_local <= ap_const_logic_1;
        else 
            buf_2d_in_2_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_3_address0 <= zext_ln69_fu_330_p1(3 - 1 downto 0);
    buf_2d_in_3_ce0 <= buf_2d_in_3_ce0_local;

    buf_2d_in_3_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            buf_2d_in_3_ce0_local <= ap_const_logic_1;
        else 
            buf_2d_in_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_3_d0 <= input_r_q0;
    buf_2d_in_3_we0 <= buf_2d_in_3_we0_local;

    buf_2d_in_3_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, trunc_ln71_reg_371_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln71_reg_371_pp0_iter2_reg = ap_const_lv3_3))) then 
            buf_2d_in_3_we0_local <= ap_const_logic_1;
        else 
            buf_2d_in_3_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_4_address0 <= zext_ln69_fu_330_p1(3 - 1 downto 0);
    buf_2d_in_4_ce0 <= buf_2d_in_4_ce0_local;

    buf_2d_in_4_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            buf_2d_in_4_ce0_local <= ap_const_logic_1;
        else 
            buf_2d_in_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_4_d0 <= input_r_q0;
    buf_2d_in_4_we0 <= buf_2d_in_4_we0_local;

    buf_2d_in_4_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, trunc_ln71_reg_371_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln71_reg_371_pp0_iter2_reg = ap_const_lv3_4))) then 
            buf_2d_in_4_we0_local <= ap_const_logic_1;
        else 
            buf_2d_in_4_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_5_address0 <= zext_ln69_fu_330_p1(3 - 1 downto 0);
    buf_2d_in_5_ce0 <= buf_2d_in_5_ce0_local;

    buf_2d_in_5_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            buf_2d_in_5_ce0_local <= ap_const_logic_1;
        else 
            buf_2d_in_5_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_5_d0 <= input_r_q0;
    buf_2d_in_5_we0 <= buf_2d_in_5_we0_local;

    buf_2d_in_5_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, trunc_ln71_reg_371_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln71_reg_371_pp0_iter2_reg = ap_const_lv3_5))) then 
            buf_2d_in_5_we0_local <= ap_const_logic_1;
        else 
            buf_2d_in_5_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_6_address0 <= zext_ln69_fu_330_p1(3 - 1 downto 0);
    buf_2d_in_6_ce0 <= buf_2d_in_6_ce0_local;

    buf_2d_in_6_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            buf_2d_in_6_ce0_local <= ap_const_logic_1;
        else 
            buf_2d_in_6_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_6_d0 <= input_r_q0;
    buf_2d_in_6_we0 <= buf_2d_in_6_we0_local;

    buf_2d_in_6_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, trunc_ln71_reg_371_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln71_reg_371_pp0_iter2_reg = ap_const_lv3_6))) then 
            buf_2d_in_6_we0_local <= ap_const_logic_1;
        else 
            buf_2d_in_6_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_7_address0 <= zext_ln69_fu_330_p1(3 - 1 downto 0);
    buf_2d_in_7_ce0 <= buf_2d_in_7_ce0_local;

    buf_2d_in_7_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            buf_2d_in_7_ce0_local <= ap_const_logic_1;
        else 
            buf_2d_in_7_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_7_d0 <= input_r_q0;
    buf_2d_in_7_we0 <= buf_2d_in_7_we0_local;

    buf_2d_in_7_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, trunc_ln71_reg_371_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln71_reg_371_pp0_iter2_reg = ap_const_lv3_7))) then 
            buf_2d_in_7_we0_local <= ap_const_logic_1;
        else 
            buf_2d_in_7_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_address0 <= zext_ln69_fu_330_p1(3 - 1 downto 0);
    buf_2d_in_ce0 <= buf_2d_in_ce0_local;

    buf_2d_in_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            buf_2d_in_ce0_local <= ap_const_logic_1;
        else 
            buf_2d_in_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_d0 <= input_r_q0;
    buf_2d_in_we0 <= buf_2d_in_we0_local;

    buf_2d_in_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, trunc_ln71_reg_371_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln71_reg_371_pp0_iter2_reg = ap_const_lv3_0))) then 
            buf_2d_in_we0_local <= ap_const_logic_1;
        else 
            buf_2d_in_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_284_p1 <= select_ln69_fu_276_p3(3 - 1 downto 0);
    icmp_ln69_fu_233_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv7_40) else "0";
    icmp_ln71_fu_262_p2 <= "1" when (c_fu_78 = ap_const_lv4_8) else "0";
    input_r_address0 <= zext_ln73_fu_326_p1(6 - 1 downto 0);
    input_r_ce0 <= input_r_ce0_local;

    input_r_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            input_r_ce0_local <= ap_const_logic_1;
        else 
            input_r_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    select_ln66_fu_268_p3 <= 
        ap_const_lv4_0 when (icmp_ln71_fu_262_p2(0) = '1') else 
        c_fu_78;
    select_ln69_fu_276_p3 <= 
        add_ln69_fu_256_p2 when (icmp_ln71_fu_262_p2(0) = '1') else 
        r_fu_82;
    tmp_s_fu_288_p3 <= (empty_fu_284_p1 & ap_const_lv3_0);
    trunc_ln71_fu_300_p1 <= select_ln66_fu_268_p3(3 - 1 downto 0);
    zext_ln69_fu_330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln69_reg_366_pp0_iter2_reg),64));
    zext_ln71_fu_296_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln66_fu_268_p3),6));
    zext_ln73_fu_326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln73_reg_375),64));
end behav;
