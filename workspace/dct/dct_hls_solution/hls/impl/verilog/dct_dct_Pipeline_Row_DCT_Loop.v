// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module dct_dct_Pipeline_Row_DCT_Loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        buf_2d_in_address0,
        buf_2d_in_ce0,
        buf_2d_in_q0,
        buf_2d_in_1_address0,
        buf_2d_in_1_ce0,
        buf_2d_in_1_q0,
        buf_2d_in_2_address0,
        buf_2d_in_2_ce0,
        buf_2d_in_2_q0,
        buf_2d_in_3_address0,
        buf_2d_in_3_ce0,
        buf_2d_in_3_q0,
        buf_2d_in_4_address0,
        buf_2d_in_4_ce0,
        buf_2d_in_4_q0,
        buf_2d_in_5_address0,
        buf_2d_in_5_ce0,
        buf_2d_in_5_q0,
        buf_2d_in_6_address0,
        buf_2d_in_6_ce0,
        buf_2d_in_6_q0,
        buf_2d_in_7_address0,
        buf_2d_in_7_ce0,
        buf_2d_in_7_q0,
        row_outbuf_address0,
        row_outbuf_ce0,
        row_outbuf_we0,
        row_outbuf_d0,
        row_outbuf_address1,
        row_outbuf_ce1,
        row_outbuf_we1,
        row_outbuf_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] buf_2d_in_address0;
output   buf_2d_in_ce0;
input  [15:0] buf_2d_in_q0;
output  [2:0] buf_2d_in_1_address0;
output   buf_2d_in_1_ce0;
input  [15:0] buf_2d_in_1_q0;
output  [2:0] buf_2d_in_2_address0;
output   buf_2d_in_2_ce0;
input  [15:0] buf_2d_in_2_q0;
output  [2:0] buf_2d_in_3_address0;
output   buf_2d_in_3_ce0;
input  [15:0] buf_2d_in_3_q0;
output  [2:0] buf_2d_in_4_address0;
output   buf_2d_in_4_ce0;
input  [15:0] buf_2d_in_4_q0;
output  [2:0] buf_2d_in_5_address0;
output   buf_2d_in_5_ce0;
input  [15:0] buf_2d_in_5_q0;
output  [2:0] buf_2d_in_6_address0;
output   buf_2d_in_6_ce0;
input  [15:0] buf_2d_in_6_q0;
output  [2:0] buf_2d_in_7_address0;
output   buf_2d_in_7_ce0;
input  [15:0] buf_2d_in_7_q0;
output  [5:0] row_outbuf_address0;
output   row_outbuf_ce0;
output   row_outbuf_we0;
output  [15:0] row_outbuf_d0;
output  [5:0] row_outbuf_address1;
output   row_outbuf_ce1;
output   row_outbuf_we1;
output  [15:0] row_outbuf_d1;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_subdone;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [0:0] icmp_ln39_reg_222;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [3:0] i_1_reg_216;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln39_fu_177_p2;
reg   [0:0] icmp_ln39_reg_222_pp0_iter1_reg;
reg   [15:0] buf_2d_in_load_reg_266;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
reg   [15:0] buf_2d_in_1_load_reg_271;
reg   [15:0] buf_2d_in_2_load_reg_276;
reg   [15:0] buf_2d_in_3_load_reg_281;
reg   [15:0] buf_2d_in_4_load_reg_286;
reg   [15:0] buf_2d_in_5_load_reg_291;
reg   [15:0] buf_2d_in_6_load_reg_296;
reg   [15:0] buf_2d_in_7_load_reg_301;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire    grp_dct_1d_1_fu_154_ap_start;
wire    grp_dct_1d_1_fu_154_ap_done;
wire    grp_dct_1d_1_fu_154_ap_idle;
wire    grp_dct_1d_1_fu_154_ap_ready;
wire   [5:0] grp_dct_1d_1_fu_154_dst_address0;
wire    grp_dct_1d_1_fu_154_dst_ce0;
wire    grp_dct_1d_1_fu_154_dst_we0;
wire   [15:0] grp_dct_1d_1_fu_154_dst_d0;
wire   [5:0] grp_dct_1d_1_fu_154_dst_address1;
wire    grp_dct_1d_1_fu_154_dst_ce1;
wire    grp_dct_1d_1_fu_154_dst_we1;
wire   [15:0] grp_dct_1d_1_fu_154_dst_d1;
wire   [2:0] grp_dct_1d_1_fu_154_dst_offset;
reg    grp_dct_1d_1_fu_154_ap_start_reg;
wire    ap_block_pp0_stage2_ignoreCallOp48;
wire    ap_block_pp0_stage3_ignoreCallOp50;
wire    ap_block_pp0_stage0_ignoreCallOp51;
wire    ap_block_pp0_stage0_ignoreCallOp55;
wire    ap_block_pp0_stage1_ignoreCallOp56;
wire    ap_block_pp0_stage2_ignoreCallOp57;
wire    ap_block_pp0_stage3_ignoreCallOp61;
wire   [63:0] zext_ln39_fu_183_p1;
wire    ap_block_pp0_stage0;
reg   [3:0] i_fu_46;
wire   [3:0] add_ln39_fu_195_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_1;
reg    buf_2d_in_ce0_local;
reg    buf_2d_in_1_ce0_local;
reg    buf_2d_in_2_ce0_local;
reg    buf_2d_in_3_ce0_local;
reg    buf_2d_in_4_ce0_local;
reg    buf_2d_in_5_ce0_local;
reg    buf_2d_in_6_ce0_local;
reg    buf_2d_in_7_ce0_local;
wire    ap_block_pp0_stage2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
wire    ap_block_pp0_stage3_11001;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_dct_1d_1_fu_154_ap_start_reg = 1'b0;
#0 i_fu_46 = 4'd0;
#0 ap_done_reg = 1'b0;
end

dct_dct_1d_1 grp_dct_1d_1_fu_154(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dct_1d_1_fu_154_ap_start),
    .ap_done(grp_dct_1d_1_fu_154_ap_done),
    .ap_idle(grp_dct_1d_1_fu_154_ap_idle),
    .ap_ready(grp_dct_1d_1_fu_154_ap_ready),
    .src_0_val(buf_2d_in_load_reg_266),
    .src_1_val(buf_2d_in_1_load_reg_271),
    .src_2_val(buf_2d_in_2_load_reg_276),
    .src_3_val(buf_2d_in_3_load_reg_281),
    .src_4_val(buf_2d_in_4_load_reg_286),
    .src_5_val(buf_2d_in_5_load_reg_291),
    .src_6_val(buf_2d_in_6_load_reg_296),
    .src_7_val(buf_2d_in_7_load_reg_301),
    .dst_address0(grp_dct_1d_1_fu_154_dst_address0),
    .dst_ce0(grp_dct_1d_1_fu_154_dst_ce0),
    .dst_we0(grp_dct_1d_1_fu_154_dst_we0),
    .dst_d0(grp_dct_1d_1_fu_154_dst_d0),
    .dst_address1(grp_dct_1d_1_fu_154_dst_address1),
    .dst_ce1(grp_dct_1d_1_fu_154_dst_ce1),
    .dst_we1(grp_dct_1d_1_fu_154_dst_we1),
    .dst_d1(grp_dct_1d_1_fu_154_dst_d1),
    .dst_offset(grp_dct_1d_1_fu_154_dst_offset)
);

dct_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dct_1d_1_fu_154_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln39_reg_222 == 1'd0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_dct_1d_1_fu_154_ap_start_reg <= 1'b1;
        end else if ((grp_dct_1d_1_fu_154_ap_ready == 1'b1)) begin
            grp_dct_1d_1_fu_154_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_46 <= 4'd0;
    end else if (((icmp_ln39_reg_222 == 1'd0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        i_fu_46 <= add_ln39_fu_195_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        buf_2d_in_1_load_reg_271 <= buf_2d_in_1_q0;
        buf_2d_in_2_load_reg_276 <= buf_2d_in_2_q0;
        buf_2d_in_3_load_reg_281 <= buf_2d_in_3_q0;
        buf_2d_in_4_load_reg_286 <= buf_2d_in_4_q0;
        buf_2d_in_5_load_reg_291 <= buf_2d_in_5_q0;
        buf_2d_in_6_load_reg_296 <= buf_2d_in_6_q0;
        buf_2d_in_7_load_reg_301 <= buf_2d_in_7_q0;
        buf_2d_in_load_reg_266 <= buf_2d_in_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_216 <= ap_sig_allocacmp_i_1;
        icmp_ln39_reg_222 <= icmp_ln39_fu_177_p2;
        icmp_ln39_reg_222_pp0_iter1_reg <= icmp_ln39_reg_222;
    end
end

always @ (*) begin
    if (((icmp_ln39_reg_222 == 1'd1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_46;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2d_in_1_ce0_local = 1'b1;
    end else begin
        buf_2d_in_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2d_in_2_ce0_local = 1'b1;
    end else begin
        buf_2d_in_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2d_in_3_ce0_local = 1'b1;
    end else begin
        buf_2d_in_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2d_in_4_ce0_local = 1'b1;
    end else begin
        buf_2d_in_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2d_in_5_ce0_local = 1'b1;
    end else begin
        buf_2d_in_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2d_in_6_ce0_local = 1'b1;
    end else begin
        buf_2d_in_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2d_in_7_ce0_local = 1'b1;
    end else begin
        buf_2d_in_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_2d_in_ce0_local = 1'b1;
    end else begin
        buf_2d_in_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln39_fu_195_p2 = (i_1_reg_216 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp51 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp55 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_ignoreCallOp56 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_ignoreCallOp48 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_ignoreCallOp57 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_ignoreCallOp50 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_ignoreCallOp61 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign ap_ready = ap_ready_sig;

assign buf_2d_in_1_address0 = zext_ln39_fu_183_p1;

assign buf_2d_in_1_ce0 = buf_2d_in_1_ce0_local;

assign buf_2d_in_2_address0 = zext_ln39_fu_183_p1;

assign buf_2d_in_2_ce0 = buf_2d_in_2_ce0_local;

assign buf_2d_in_3_address0 = zext_ln39_fu_183_p1;

assign buf_2d_in_3_ce0 = buf_2d_in_3_ce0_local;

assign buf_2d_in_4_address0 = zext_ln39_fu_183_p1;

assign buf_2d_in_4_ce0 = buf_2d_in_4_ce0_local;

assign buf_2d_in_5_address0 = zext_ln39_fu_183_p1;

assign buf_2d_in_5_ce0 = buf_2d_in_5_ce0_local;

assign buf_2d_in_6_address0 = zext_ln39_fu_183_p1;

assign buf_2d_in_6_ce0 = buf_2d_in_6_ce0_local;

assign buf_2d_in_7_address0 = zext_ln39_fu_183_p1;

assign buf_2d_in_7_ce0 = buf_2d_in_7_ce0_local;

assign buf_2d_in_address0 = zext_ln39_fu_183_p1;

assign buf_2d_in_ce0 = buf_2d_in_ce0_local;

assign grp_dct_1d_1_fu_154_ap_start = grp_dct_1d_1_fu_154_ap_start_reg;

assign grp_dct_1d_1_fu_154_dst_offset = i_1_reg_216[2:0];

assign icmp_ln39_fu_177_p2 = ((ap_sig_allocacmp_i_1 == 4'd8) ? 1'b1 : 1'b0);

assign row_outbuf_address0 = grp_dct_1d_1_fu_154_dst_address0;

assign row_outbuf_address1 = grp_dct_1d_1_fu_154_dst_address1;

assign row_outbuf_ce0 = grp_dct_1d_1_fu_154_dst_ce0;

assign row_outbuf_ce1 = grp_dct_1d_1_fu_154_dst_ce1;

assign row_outbuf_d0 = grp_dct_1d_1_fu_154_dst_d0;

assign row_outbuf_d1 = grp_dct_1d_1_fu_154_dst_d1;

assign row_outbuf_we0 = grp_dct_1d_1_fu_154_dst_we0;

assign row_outbuf_we1 = grp_dct_1d_1_fu_154_dst_we1;

assign zext_ln39_fu_183_p1 = ap_sig_allocacmp_i_1;

endmodule //dct_dct_Pipeline_Row_DCT_Loop
