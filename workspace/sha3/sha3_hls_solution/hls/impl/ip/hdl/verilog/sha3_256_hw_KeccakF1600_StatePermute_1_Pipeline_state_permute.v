// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sha3_256_hw_KeccakF1600_StatePermute_1_Pipeline_state_permute (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Asu,
        Aba,
        Abe,
        Abi,
        Abo,
        Abu,
        Aga,
        Age,
        Agi,
        Ago,
        Agu,
        Aka,
        Ake,
        Aki,
        Ako,
        Aku,
        Ama,
        Ame,
        Ami,
        Amo,
        Amu,
        Asa,
        Ase,
        Asi,
        Aso,
        Asu_1_out,
        Asu_1_out_ap_vld,
        Aba_1_out,
        Aba_1_out_ap_vld,
        Abe_1_out,
        Abe_1_out_ap_vld,
        Abi_1_out,
        Abi_1_out_ap_vld,
        Abo_1_out,
        Abo_1_out_ap_vld,
        Abu_1_out,
        Abu_1_out_ap_vld,
        Aga_1_out,
        Aga_1_out_ap_vld,
        Age_1_out,
        Age_1_out_ap_vld,
        Agi_1_out,
        Agi_1_out_ap_vld,
        Ago_1_out,
        Ago_1_out_ap_vld,
        Agu_1_out,
        Agu_1_out_ap_vld,
        Aka_1_out,
        Aka_1_out_ap_vld,
        Ake_1_out,
        Ake_1_out_ap_vld,
        Aki_1_out,
        Aki_1_out_ap_vld,
        Ako_1_out,
        Ako_1_out_ap_vld,
        Aku_1_out,
        Aku_1_out_ap_vld,
        Ama_1_out,
        Ama_1_out_ap_vld,
        Ame_1_out,
        Ame_1_out_ap_vld,
        Ami_1_out,
        Ami_1_out_ap_vld,
        Amo_1_out,
        Amo_1_out_ap_vld,
        Amu_1_out,
        Amu_1_out_ap_vld,
        Asa_1_out,
        Asa_1_out_ap_vld,
        Ase_1_out,
        Ase_1_out_ap_vld,
        Asi_1_out,
        Asi_1_out_ap_vld,
        Aso_1_out,
        Aso_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] Asu;
input  [63:0] Aba;
input  [63:0] Abe;
input  [63:0] Abi;
input  [63:0] Abo;
input  [63:0] Abu;
input  [63:0] Aga;
input  [63:0] Age;
input  [63:0] Agi;
input  [63:0] Ago;
input  [63:0] Agu;
input  [63:0] Aka;
input  [63:0] Ake;
input  [63:0] Aki;
input  [63:0] Ako;
input  [63:0] Aku;
input  [63:0] Ama;
input  [63:0] Ame;
input  [63:0] Ami;
input  [63:0] Amo;
input  [63:0] Amu;
input  [63:0] Asa;
input  [63:0] Ase;
input  [63:0] Asi;
input  [63:0] Aso;
output  [63:0] Asu_1_out;
output   Asu_1_out_ap_vld;
output  [63:0] Aba_1_out;
output   Aba_1_out_ap_vld;
output  [63:0] Abe_1_out;
output   Abe_1_out_ap_vld;
output  [63:0] Abi_1_out;
output   Abi_1_out_ap_vld;
output  [63:0] Abo_1_out;
output   Abo_1_out_ap_vld;
output  [63:0] Abu_1_out;
output   Abu_1_out_ap_vld;
output  [63:0] Aga_1_out;
output   Aga_1_out_ap_vld;
output  [63:0] Age_1_out;
output   Age_1_out_ap_vld;
output  [63:0] Agi_1_out;
output   Agi_1_out_ap_vld;
output  [63:0] Ago_1_out;
output   Ago_1_out_ap_vld;
output  [63:0] Agu_1_out;
output   Agu_1_out_ap_vld;
output  [63:0] Aka_1_out;
output   Aka_1_out_ap_vld;
output  [63:0] Ake_1_out;
output   Ake_1_out_ap_vld;
output  [63:0] Aki_1_out;
output   Aki_1_out_ap_vld;
output  [63:0] Ako_1_out;
output   Ako_1_out_ap_vld;
output  [63:0] Aku_1_out;
output   Aku_1_out_ap_vld;
output  [63:0] Ama_1_out;
output   Ama_1_out_ap_vld;
output  [63:0] Ame_1_out;
output   Ame_1_out_ap_vld;
output  [63:0] Ami_1_out;
output   Ami_1_out_ap_vld;
output  [63:0] Amo_1_out;
output   Amo_1_out_ap_vld;
output  [63:0] Amu_1_out;
output   Amu_1_out_ap_vld;
output  [63:0] Asa_1_out;
output   Asa_1_out_ap_vld;
output  [63:0] Ase_1_out;
output   Ase_1_out_ap_vld;
output  [63:0] Asi_1_out;
output   Asi_1_out_ap_vld;
output  [63:0] Aso_1_out;
output   Aso_1_out_ap_vld;

reg ap_idle;
reg Asu_1_out_ap_vld;
reg Aba_1_out_ap_vld;
reg Abe_1_out_ap_vld;
reg Abi_1_out_ap_vld;
reg Abo_1_out_ap_vld;
reg Abu_1_out_ap_vld;
reg Aga_1_out_ap_vld;
reg Age_1_out_ap_vld;
reg Agi_1_out_ap_vld;
reg Ago_1_out_ap_vld;
reg Agu_1_out_ap_vld;
reg Aka_1_out_ap_vld;
reg Ake_1_out_ap_vld;
reg Aki_1_out_ap_vld;
reg Ako_1_out_ap_vld;
reg Aku_1_out_ap_vld;
reg Ama_1_out_ap_vld;
reg Ame_1_out_ap_vld;
reg Ami_1_out_ap_vld;
reg Amo_1_out_ap_vld;
reg Amu_1_out_ap_vld;
reg Asa_1_out_ap_vld;
reg Ase_1_out_ap_vld;
reg Asi_1_out_ap_vld;
reg Aso_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln131_fu_873_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [4:0] KeccakF_RoundConstants_address0;
wire   [63:0] KeccakF_RoundConstants_q0;
wire   [4:0] KeccakF_RoundConstants_address1;
wire   [63:0] KeccakF_RoundConstants_q1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln131_reg_4137;
wire   [63:0] Eba_4_fu_2625_p2;
reg   [63:0] Eba_4_reg_4151;
wire   [19:0] trunc_ln246_fu_2637_p1;
reg   [19:0] trunc_ln246_reg_4158;
reg   [43:0] lshr_ln35_reg_4163;
wire   [20:0] trunc_ln248_fu_2657_p1;
reg   [20:0] trunc_ln248_reg_4168;
reg   [42:0] lshr_ln36_reg_4173;
wire   [42:0] trunc_ln250_fu_2677_p1;
reg   [42:0] trunc_ln250_reg_4178;
reg   [20:0] lshr_ln37_reg_4183;
wire   [49:0] trunc_ln252_fu_2697_p1;
reg   [49:0] trunc_ln252_reg_4188;
reg   [13:0] lshr_ln38_reg_4193;
reg   [63:0] KeccakF_RoundConstants_load_1_reg_4198;
wire   [35:0] trunc_ln261_fu_2717_p1;
reg   [35:0] trunc_ln261_reg_4203;
reg   [27:0] lshr_ln39_reg_4208;
wire   [43:0] trunc_ln263_fu_2737_p1;
reg   [43:0] trunc_ln263_reg_4213;
reg   [19:0] lshr_ln40_reg_4218;
wire   [60:0] trunc_ln265_fu_2757_p1;
reg   [60:0] trunc_ln265_reg_4223;
reg   [2:0] lshr_ln41_reg_4228;
wire   [18:0] trunc_ln267_fu_2777_p1;
reg   [18:0] trunc_ln267_reg_4233;
reg   [44:0] lshr_ln42_reg_4238;
wire   [2:0] trunc_ln269_fu_2797_p1;
reg   [2:0] trunc_ln269_reg_4243;
reg   [60:0] lshr_ln43_reg_4248;
wire   [62:0] trunc_ln277_fu_2817_p1;
reg   [62:0] trunc_ln277_reg_4253;
reg   [0:0] tmp_22_reg_4258;
wire   [57:0] trunc_ln279_fu_2835_p1;
reg   [57:0] trunc_ln279_reg_4263;
reg   [5:0] lshr_ln45_reg_4268;
wire   [38:0] trunc_ln281_fu_2855_p1;
reg   [38:0] trunc_ln281_reg_4273;
reg   [24:0] lshr_ln_reg_4278;
wire   [55:0] trunc_ln283_fu_2875_p1;
reg   [55:0] trunc_ln283_reg_4283;
reg   [7:0] lshr_ln46_reg_4288;
wire   [45:0] trunc_ln285_fu_2895_p1;
reg   [45:0] trunc_ln285_reg_4293;
reg   [17:0] lshr_ln47_reg_4298;
wire   [36:0] trunc_ln293_fu_2915_p1;
reg   [36:0] trunc_ln293_reg_4303;
reg   [26:0] lshr_ln48_reg_4308;
wire   [27:0] trunc_ln295_fu_2935_p1;
reg   [27:0] trunc_ln295_reg_4313;
reg   [35:0] lshr_ln49_reg_4318;
wire   [53:0] trunc_ln297_fu_2955_p1;
reg   [53:0] trunc_ln297_reg_4323;
reg   [9:0] lshr_ln50_reg_4328;
wire   [48:0] trunc_ln299_fu_2975_p1;
reg   [48:0] trunc_ln299_reg_4333;
reg   [14:0] lshr_ln51_reg_4338;
wire   [7:0] trunc_ln301_fu_2995_p1;
reg   [7:0] trunc_ln301_reg_4343;
reg   [55:0] lshr_ln52_reg_4348;
wire   [1:0] trunc_ln309_fu_3015_p1;
reg   [1:0] trunc_ln309_reg_4353;
reg   [61:0] lshr_ln53_reg_4358;
wire   [8:0] trunc_ln311_fu_3035_p1;
reg   [8:0] trunc_ln311_reg_4363;
reg   [54:0] lshr_ln54_reg_4368;
wire   [24:0] trunc_ln313_fu_3055_p1;
reg   [24:0] trunc_ln313_reg_4373;
reg   [38:0] lshr_ln55_reg_4378;
wire   [22:0] trunc_ln315_fu_3075_p1;
reg   [22:0] trunc_ln315_reg_4383;
reg   [40:0] lshr_ln56_reg_4388;
wire   [61:0] trunc_ln317_fu_3095_p1;
reg   [61:0] trunc_ln317_reg_4393;
reg   [1:0] lshr_ln57_reg_4398;
wire   [63:0] zext_ln131_fu_879_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln254_fu_902_p1;
reg   [63:0] Aso_1_fu_286;
wire   [63:0] Aso_5_fu_3681_p2;
reg   [63:0] ap_sig_allocacmp_Aso_1_load;
wire    ap_loop_init;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [63:0] Asi_1_fu_290;
wire   [63:0] Asi_5_fu_3663_p2;
reg   [63:0] ap_sig_allocacmp_Asi_1_load;
reg   [63:0] Ase_1_fu_294;
wire   [63:0] Ase_5_fu_3645_p2;
reg   [63:0] ap_sig_allocacmp_Ase_1_load;
reg   [63:0] Asa_1_fu_298;
wire   [63:0] Asa_5_fu_3627_p2;
reg   [63:0] ap_sig_allocacmp_Asa_1_load;
reg   [63:0] Amu_1_fu_302;
wire   [63:0] Amu_5_fu_3579_p2;
reg   [63:0] ap_sig_allocacmp_Amu_1_load;
reg   [63:0] Amo_1_fu_306;
wire   [63:0] Amo_5_fu_3561_p2;
reg   [63:0] ap_sig_allocacmp_Amo_1_load;
reg   [63:0] Ami_1_fu_310;
wire   [63:0] Ami_5_fu_3543_p2;
reg   [63:0] ap_sig_allocacmp_Ami_1_load;
reg   [63:0] Ame_1_fu_314;
wire   [63:0] Ame_5_fu_3525_p2;
reg   [63:0] ap_sig_allocacmp_Ame_1_load;
reg   [63:0] Ama_1_fu_318;
wire   [63:0] Ama_5_fu_3507_p2;
reg   [63:0] ap_sig_allocacmp_Ama_1_load;
reg   [63:0] Aku_1_fu_322;
wire   [63:0] Aku_5_fu_3459_p2;
reg   [63:0] ap_sig_allocacmp_Aku_1_load;
reg   [63:0] Ako_1_fu_326;
wire   [63:0] Ako_5_fu_3441_p2;
reg   [63:0] ap_sig_allocacmp_Ako_1_load;
reg   [63:0] Aki_1_fu_330;
wire   [63:0] Aki_5_fu_3423_p2;
reg   [63:0] ap_sig_allocacmp_Aki_1_load;
reg   [63:0] Ake_1_fu_334;
wire   [63:0] Ake_5_fu_3405_p2;
reg   [63:0] ap_sig_allocacmp_Ake_1_load;
reg   [63:0] Aka_1_fu_338;
wire   [63:0] Aka_5_fu_3387_p2;
reg   [63:0] ap_sig_allocacmp_Aka_1_load;
reg   [63:0] Agu_1_fu_342;
wire   [63:0] Agu_5_fu_3339_p2;
reg   [63:0] ap_sig_allocacmp_Agu_1_load;
reg   [63:0] Ago_1_fu_346;
wire   [63:0] Ago_5_fu_3321_p2;
reg   [63:0] ap_sig_allocacmp_Ago_1_load;
reg   [63:0] Agi_1_fu_350;
wire   [63:0] Agi_5_fu_3303_p2;
reg   [63:0] ap_sig_allocacmp_Agi_1_load;
reg   [63:0] Age_1_fu_354;
wire   [63:0] Age_5_fu_3285_p2;
reg   [63:0] ap_sig_allocacmp_Age_1_load;
reg   [63:0] Aga_1_fu_358;
wire   [63:0] Aga_5_fu_3267_p2;
reg   [63:0] ap_sig_allocacmp_Aga_1_load;
reg   [63:0] Abu_1_fu_362;
wire   [63:0] Abu_5_fu_3219_p2;
reg   [63:0] ap_sig_allocacmp_Abu_1_load;
reg   [63:0] Abo_1_fu_366;
wire   [63:0] Abo_5_fu_3202_p2;
reg   [63:0] ap_sig_allocacmp_Abo_1_load;
reg   [63:0] Abi_1_fu_370;
wire   [63:0] Abi_5_fu_3185_p2;
reg   [63:0] ap_sig_allocacmp_Abi_1_load;
reg   [63:0] Abe_1_fu_374;
wire   [63:0] Abe_5_fu_3167_p2;
reg   [63:0] ap_sig_allocacmp_Abe_1_load;
reg   [63:0] Aba_1_fu_378;
wire   [63:0] Aba_6_fu_3149_p2;
reg   [63:0] ap_sig_allocacmp_Aba_1_load;
reg   [63:0] Asu_1_fu_382;
wire   [63:0] Asu_5_fu_3699_p2;
reg   [63:0] ap_sig_allocacmp_Asu_1_load;
reg   [4:0] round_fu_386;
wire   [4:0] add_ln131_fu_907_p2;
reg   [4:0] ap_sig_allocacmp_round_2;
wire    ap_block_pp0_stage0_01001;
reg    KeccakF_RoundConstants_ce1_local;
reg    KeccakF_RoundConstants_ce0_local;
wire   [3:0] tmp_s_fu_884_p4;
wire   [4:0] or_ln10_fu_894_p3;
wire   [63:0] xor_ln135_fu_993_p2;
wire   [63:0] xor_ln135_1_fu_1005_p2;
wire   [63:0] xor_ln135_2_fu_999_p2;
wire   [63:0] xor_ln136_fu_1017_p2;
wire   [63:0] xor_ln136_1_fu_1029_p2;
wire   [63:0] xor_ln136_2_fu_1023_p2;
wire   [63:0] xor_ln137_fu_1041_p2;
wire   [63:0] xor_ln137_1_fu_1047_p2;
wire   [63:0] xor_ln137_2_fu_1053_p2;
wire   [63:0] xor_ln138_fu_1065_p2;
wire   [63:0] xor_ln138_1_fu_1071_p2;
wire   [63:0] xor_ln138_2_fu_1077_p2;
wire   [63:0] xor_ln139_fu_1089_p2;
wire   [63:0] xor_ln139_1_fu_1101_p2;
wire   [63:0] xor_ln139_2_fu_1095_p2;
wire   [63:0] BCe_fu_1035_p2;
wire   [62:0] trunc_ln142_fu_1113_p1;
wire   [0:0] tmp_fu_1117_p3;
wire   [63:0] or_ln_fu_1125_p3;
wire   [63:0] BCu_fu_1107_p2;
wire   [63:0] BCi_fu_1059_p2;
wire   [62:0] trunc_ln143_fu_1139_p1;
wire   [0:0] tmp_12_fu_1143_p3;
wire   [63:0] or_ln1_fu_1151_p3;
wire   [63:0] BCa_fu_1011_p2;
wire   [63:0] BCo_fu_1083_p2;
wire   [62:0] trunc_ln144_fu_1165_p1;
wire   [0:0] tmp_13_fu_1169_p3;
wire   [63:0] or_ln2_fu_1177_p3;
wire   [62:0] trunc_ln145_fu_1191_p1;
wire   [0:0] tmp_14_fu_1195_p3;
wire   [63:0] or_ln3_fu_1203_p3;
wire   [62:0] trunc_ln146_fu_1217_p1;
wire   [0:0] tmp_15_fu_1221_p3;
wire   [63:0] or_ln4_fu_1229_p3;
wire   [63:0] Da_fu_1133_p2;
wire   [63:0] De_fu_1159_p2;
wire   [63:0] Age_4_fu_1249_p2;
wire   [19:0] trunc_ln151_fu_1255_p1;
wire   [43:0] lshr_ln6_fu_1259_p4;
wire   [63:0] Di_fu_1185_p2;
wire   [63:0] Aki_4_fu_1277_p2;
wire   [20:0] trunc_ln153_fu_1283_p1;
wire   [42:0] lshr_ln7_fu_1287_p4;
wire   [63:0] Do_fu_1211_p2;
wire   [63:0] Amo_4_fu_1305_p2;
wire   [42:0] trunc_ln155_fu_1311_p1;
wire   [20:0] lshr_ln8_fu_1315_p4;
wire   [63:0] Du_fu_1237_p2;
wire   [63:0] Asu_4_fu_1333_p2;
wire   [49:0] trunc_ln157_fu_1339_p1;
wire   [13:0] lshr_ln9_fu_1343_p4;
wire   [63:0] BCe_1_fu_1269_p3;
wire   [63:0] BCi_1_fu_1297_p3;
wire   [63:0] xor_ln159_fu_1361_p2;
wire   [63:0] Aba_7_fu_1243_p2;
wire   [63:0] xor_ln159_1_fu_1373_p2;
wire   [63:0] and_ln159_fu_1367_p2;
wire   [63:0] BCo_1_fu_1325_p3;
wire   [63:0] xor_ln160_fu_1385_p2;
wire   [63:0] and_ln160_fu_1391_p2;
wire   [63:0] BCu_1_fu_1353_p3;
wire   [63:0] xor_ln161_fu_1403_p2;
wire   [63:0] and_ln161_fu_1409_p2;
wire   [63:0] xor_ln162_fu_1421_p2;
wire   [63:0] and_ln162_fu_1427_p2;
wire   [63:0] xor_ln163_fu_1439_p2;
wire   [63:0] and_ln163_fu_1445_p2;
wire   [63:0] Abo_4_fu_1457_p2;
wire   [35:0] trunc_ln166_fu_1463_p1;
wire   [27:0] lshr_ln10_fu_1467_p4;
wire   [63:0] Agu_4_fu_1485_p2;
wire   [43:0] trunc_ln168_fu_1491_p1;
wire   [19:0] lshr_ln11_fu_1495_p4;
wire   [63:0] Aka_4_fu_1513_p2;
wire   [60:0] trunc_ln170_fu_1519_p1;
wire   [2:0] lshr_ln12_fu_1523_p4;
wire   [63:0] Ame_4_fu_1541_p2;
wire   [18:0] trunc_ln172_fu_1547_p1;
wire   [44:0] lshr_ln13_fu_1551_p4;
wire   [63:0] Asi_4_fu_1569_p2;
wire   [2:0] trunc_ln174_fu_1575_p1;
wire   [60:0] lshr_ln14_fu_1579_p4;
wire   [63:0] BCe_2_fu_1505_p3;
wire   [63:0] BCi_2_fu_1533_p3;
wire   [63:0] xor_ln175_fu_1597_p2;
wire   [63:0] and_ln175_fu_1603_p2;
wire   [63:0] BCa_2_fu_1477_p3;
wire   [63:0] BCo_2_fu_1561_p3;
wire   [63:0] xor_ln176_fu_1615_p2;
wire   [63:0] and_ln176_fu_1621_p2;
wire   [63:0] BCu_2_fu_1589_p3;
wire   [63:0] xor_ln177_fu_1633_p2;
wire   [63:0] and_ln177_fu_1639_p2;
wire   [63:0] xor_ln178_fu_1651_p2;
wire   [63:0] and_ln178_fu_1657_p2;
wire   [63:0] xor_ln179_fu_1669_p2;
wire   [63:0] and_ln179_fu_1675_p2;
wire   [63:0] Abe_4_fu_1687_p2;
wire   [62:0] trunc_ln182_fu_1693_p1;
wire   [0:0] tmp_16_fu_1697_p3;
wire   [63:0] Agi_4_fu_1713_p2;
wire   [57:0] trunc_ln184_fu_1719_p1;
wire   [5:0] lshr_ln16_fu_1723_p4;
wire   [63:0] Ako_4_fu_1741_p2;
wire   [38:0] trunc_ln186_fu_1747_p1;
wire   [24:0] lshr_ln17_fu_1751_p4;
wire   [63:0] Amu_4_fu_1769_p2;
wire   [55:0] trunc_ln188_fu_1775_p1;
wire   [7:0] lshr_ln18_fu_1779_p4;
wire   [63:0] Asa_4_fu_1797_p2;
wire   [45:0] trunc_ln190_fu_1803_p1;
wire   [17:0] lshr_ln19_fu_1807_p4;
wire   [63:0] BCe_3_fu_1733_p3;
wire   [63:0] BCi_3_fu_1761_p3;
wire   [63:0] xor_ln191_fu_1825_p2;
wire   [63:0] and_ln191_fu_1831_p2;
wire   [63:0] BCa_3_fu_1705_p3;
wire   [63:0] BCo_3_fu_1789_p3;
wire   [63:0] xor_ln192_fu_1843_p2;
wire   [63:0] and_ln192_fu_1849_p2;
wire   [63:0] BCu_3_fu_1817_p3;
wire   [63:0] xor_ln193_fu_1861_p2;
wire   [63:0] and_ln193_fu_1867_p2;
wire   [63:0] xor_ln194_fu_1879_p2;
wire   [63:0] and_ln194_fu_1885_p2;
wire   [63:0] xor_ln195_fu_1897_p2;
wire   [63:0] and_ln195_fu_1903_p2;
wire   [63:0] Abu_4_fu_1915_p2;
wire   [36:0] trunc_ln198_fu_1921_p1;
wire   [26:0] lshr_ln20_fu_1925_p4;
wire   [63:0] Aga_4_fu_1943_p2;
wire   [27:0] trunc_ln200_fu_1949_p1;
wire   [35:0] lshr_ln21_fu_1953_p4;
wire   [63:0] Ake_4_fu_1971_p2;
wire   [53:0] trunc_ln202_fu_1977_p1;
wire   [9:0] lshr_ln22_fu_1981_p4;
wire   [63:0] Ami_4_fu_1999_p2;
wire   [48:0] trunc_ln204_fu_2005_p1;
wire   [14:0] lshr_ln23_fu_2009_p4;
wire   [63:0] Aso_4_fu_2027_p2;
wire   [7:0] trunc_ln206_fu_2033_p1;
wire   [55:0] lshr_ln24_fu_2037_p4;
wire   [63:0] BCe_4_fu_1963_p3;
wire   [63:0] BCi_4_fu_1991_p3;
wire   [63:0] xor_ln207_fu_2055_p2;
wire   [63:0] and_ln207_fu_2061_p2;
wire   [63:0] BCa_4_fu_1935_p3;
wire   [63:0] BCo_4_fu_2019_p3;
wire   [63:0] xor_ln208_fu_2073_p2;
wire   [63:0] and_ln208_fu_2079_p2;
wire   [63:0] BCu_4_fu_2047_p3;
wire   [63:0] xor_ln209_fu_2091_p2;
wire   [63:0] and_ln209_fu_2097_p2;
wire   [63:0] xor_ln210_fu_2109_p2;
wire   [63:0] and_ln210_fu_2115_p2;
wire   [63:0] xor_ln211_fu_2127_p2;
wire   [63:0] and_ln211_fu_2133_p2;
wire   [63:0] Abi_4_fu_2145_p2;
wire   [1:0] trunc_ln214_fu_2151_p1;
wire   [61:0] lshr_ln25_fu_2155_p4;
wire   [63:0] Ago_4_fu_2173_p2;
wire   [8:0] trunc_ln216_fu_2179_p1;
wire   [54:0] lshr_ln26_fu_2183_p4;
wire   [63:0] Aku_4_fu_2201_p2;
wire   [24:0] trunc_ln218_fu_2207_p1;
wire   [38:0] lshr_ln27_fu_2211_p4;
wire   [63:0] Ama_4_fu_2229_p2;
wire   [22:0] trunc_ln220_fu_2235_p1;
wire   [40:0] lshr_ln28_fu_2239_p4;
wire   [63:0] Ase_4_fu_2257_p2;
wire   [61:0] trunc_ln222_fu_2263_p1;
wire   [1:0] lshr_ln29_fu_2267_p4;
wire   [63:0] BCe_5_fu_2193_p3;
wire   [63:0] BCi_5_fu_2221_p3;
wire   [63:0] xor_ln223_fu_2285_p2;
wire   [63:0] BCa_5_fu_2165_p3;
wire   [63:0] and_ln223_fu_2291_p2;
wire   [63:0] BCo_5_fu_2249_p3;
wire   [63:0] xor_ln224_fu_2303_p2;
wire   [63:0] and_ln224_fu_2309_p2;
wire   [63:0] BCu_5_fu_2277_p3;
wire   [63:0] xor_ln225_fu_2321_p2;
wire   [63:0] and_ln225_fu_2327_p2;
wire   [63:0] xor_ln226_fu_2339_p2;
wire   [63:0] and_ln226_fu_2345_p2;
wire   [63:0] xor_ln227_fu_2357_p2;
wire   [63:0] and_ln227_fu_2363_p2;
wire   [63:0] Esa_fu_2297_p2;
wire   [63:0] Eka_fu_1837_p2;
wire   [63:0] Ema_fu_2067_p2;
wire   [63:0] Eba_fu_1379_p2;
wire   [63:0] xor_ln230_1_fu_2381_p2;
wire   [63:0] Ega_fu_1609_p2;
wire   [63:0] xor_ln230_2_fu_2387_p2;
wire   [63:0] xor_ln230_fu_2375_p2;
wire   [63:0] Ege_fu_1627_p2;
wire   [63:0] Ebe_fu_1397_p2;
wire   [63:0] Eke_fu_1855_p2;
wire   [63:0] Eme_fu_2085_p2;
wire   [63:0] xor_ln231_fu_2405_p2;
wire   [63:0] Ese_fu_2315_p2;
wire   [63:0] xor_ln231_2_fu_2411_p2;
wire   [63:0] xor_ln231_1_fu_2399_p2;
wire   [63:0] Esi_fu_2333_p2;
wire   [63:0] Emi_fu_2103_p2;
wire   [63:0] Ebi_fu_1415_p2;
wire   [63:0] Egi_fu_1645_p2;
wire   [63:0] xor_ln232_fu_2429_p2;
wire   [63:0] Eki_fu_1873_p2;
wire   [63:0] xor_ln232_2_fu_2435_p2;
wire   [63:0] xor_ln232_1_fu_2423_p2;
wire   [63:0] Eko_fu_1891_p2;
wire   [63:0] Ego_fu_1663_p2;
wire   [63:0] Ebo_fu_1433_p2;
wire   [63:0] Eso_fu_2351_p2;
wire   [63:0] xor_ln233_1_fu_2453_p2;
wire   [63:0] Emo_fu_2121_p2;
wire   [63:0] xor_ln233_2_fu_2459_p2;
wire   [63:0] xor_ln233_fu_2447_p2;
wire   [63:0] Ebu_fu_1451_p2;
wire   [63:0] Esu_fu_2369_p2;
wire   [63:0] Egu_fu_1681_p2;
wire   [63:0] Eku_fu_1909_p2;
wire   [63:0] xor_ln234_1_fu_2477_p2;
wire   [63:0] Emu_fu_2139_p2;
wire   [63:0] xor_ln234_2_fu_2483_p2;
wire   [63:0] xor_ln234_fu_2471_p2;
wire   [63:0] BCe_12_fu_2417_p2;
wire   [62:0] trunc_ln237_fu_2495_p1;
wire   [0:0] tmp_17_fu_2499_p3;
wire   [63:0] or_ln5_fu_2507_p3;
wire   [63:0] BCu_12_fu_2489_p2;
wire   [63:0] BCi_12_fu_2441_p2;
wire   [62:0] trunc_ln238_fu_2521_p1;
wire   [0:0] tmp_18_fu_2525_p3;
wire   [63:0] BCa_13_fu_2393_p2;
wire   [63:0] or_ln6_fu_2533_p3;
wire   [63:0] BCo_12_fu_2465_p2;
wire   [62:0] trunc_ln239_fu_2547_p1;
wire   [0:0] tmp_19_fu_2551_p3;
wire   [63:0] or_ln7_fu_2559_p3;
wire   [62:0] trunc_ln240_fu_2573_p1;
wire   [0:0] tmp_20_fu_2577_p3;
wire   [63:0] or_ln8_fu_2585_p3;
wire   [62:0] trunc_ln241_fu_2599_p1;
wire   [0:0] tmp_21_fu_2603_p3;
wire   [63:0] or_ln9_fu_2611_p3;
wire   [63:0] Da_2_fu_2515_p2;
wire   [63:0] De_2_fu_2541_p2;
wire   [63:0] Ege_2_fu_2631_p2;
wire   [63:0] Di_2_fu_2567_p2;
wire   [63:0] Eki_2_fu_2651_p2;
wire   [63:0] Do_2_fu_2593_p2;
wire   [63:0] Emo_2_fu_2671_p2;
wire   [63:0] Du_2_fu_2619_p2;
wire   [63:0] Esu_2_fu_2691_p2;
wire   [63:0] Ebo_2_fu_2711_p2;
wire   [63:0] Egu_2_fu_2731_p2;
wire   [63:0] Eka_2_fu_2751_p2;
wire   [63:0] Eme_2_fu_2771_p2;
wire   [63:0] Esi_2_fu_2791_p2;
wire   [63:0] Ebe_2_fu_2811_p2;
wire   [63:0] Egi_2_fu_2829_p2;
wire   [63:0] Eko_2_fu_2849_p2;
wire   [63:0] Emu_2_fu_2869_p2;
wire   [63:0] Esa_2_fu_2889_p2;
wire   [63:0] Ebu_2_fu_2909_p2;
wire   [63:0] Ega_2_fu_2929_p2;
wire   [63:0] Eke_2_fu_2949_p2;
wire   [63:0] Emi_2_fu_2969_p2;
wire   [63:0] Eso_2_fu_2989_p2;
wire   [63:0] Ebi_2_fu_3009_p2;
wire   [63:0] Ego_2_fu_3029_p2;
wire   [63:0] Eku_2_fu_3049_p2;
wire   [63:0] Ema_2_fu_3069_p2;
wire   [63:0] Ese_2_fu_3089_p2;
wire   [63:0] BCe_7_fu_3109_p3;
wire   [63:0] BCi_7_fu_3115_p3;
wire   [63:0] xor_ln254_fu_3133_p2;
wire   [63:0] xor_ln254_1_fu_3145_p2;
wire   [63:0] and_ln254_fu_3139_p2;
wire   [63:0] BCo_7_fu_3121_p3;
wire   [63:0] xor_ln255_fu_3155_p2;
wire   [63:0] and_ln255_fu_3161_p2;
wire   [63:0] BCu_7_fu_3127_p3;
wire   [63:0] xor_ln256_fu_3173_p2;
wire   [63:0] and_ln256_fu_3179_p2;
wire   [63:0] xor_ln257_fu_3191_p2;
wire   [63:0] and_ln257_fu_3197_p2;
wire   [63:0] xor_ln258_fu_3208_p2;
wire   [63:0] and_ln258_fu_3213_p2;
wire   [63:0] BCe_8_fu_3231_p3;
wire   [63:0] BCi_8_fu_3237_p3;
wire   [63:0] xor_ln270_fu_3255_p2;
wire   [63:0] and_ln270_fu_3261_p2;
wire   [63:0] BCa_8_fu_3225_p3;
wire   [63:0] BCo_8_fu_3243_p3;
wire   [63:0] xor_ln271_fu_3273_p2;
wire   [63:0] and_ln271_fu_3279_p2;
wire   [63:0] BCu_8_fu_3249_p3;
wire   [63:0] xor_ln272_fu_3291_p2;
wire   [63:0] and_ln272_fu_3297_p2;
wire   [63:0] xor_ln273_fu_3309_p2;
wire   [63:0] and_ln273_fu_3315_p2;
wire   [63:0] xor_ln274_fu_3327_p2;
wire   [63:0] and_ln274_fu_3333_p2;
wire   [63:0] BCe_9_fu_3351_p3;
wire   [63:0] BCi_9_fu_3357_p3;
wire   [63:0] xor_ln286_fu_3375_p2;
wire   [63:0] BCa_9_fu_3345_p3;
wire   [63:0] and_ln286_fu_3381_p2;
wire   [63:0] BCo_9_fu_3363_p3;
wire   [63:0] xor_ln287_fu_3393_p2;
wire   [63:0] and_ln287_fu_3399_p2;
wire   [63:0] BCu_9_fu_3369_p3;
wire   [63:0] xor_ln288_fu_3411_p2;
wire   [63:0] and_ln288_fu_3417_p2;
wire   [63:0] xor_ln289_fu_3429_p2;
wire   [63:0] and_ln289_fu_3435_p2;
wire   [63:0] xor_ln290_fu_3447_p2;
wire   [63:0] and_ln290_fu_3453_p2;
wire   [63:0] BCe_13_fu_3471_p3;
wire   [63:0] BCi_13_fu_3477_p3;
wire   [63:0] xor_ln302_fu_3495_p2;
wire   [63:0] BCa_15_fu_3465_p3;
wire   [63:0] and_ln302_fu_3501_p2;
wire   [63:0] BCo_13_fu_3483_p3;
wire   [63:0] xor_ln303_fu_3513_p2;
wire   [63:0] and_ln303_fu_3519_p2;
wire   [63:0] BCu_13_fu_3489_p3;
wire   [63:0] xor_ln304_fu_3531_p2;
wire   [63:0] and_ln304_fu_3537_p2;
wire   [63:0] xor_ln305_fu_3549_p2;
wire   [63:0] and_ln305_fu_3555_p2;
wire   [63:0] xor_ln306_fu_3567_p2;
wire   [63:0] and_ln306_fu_3573_p2;
wire   [63:0] BCe_14_fu_3591_p3;
wire   [63:0] BCi_14_fu_3597_p3;
wire   [63:0] xor_ln318_fu_3615_p2;
wire   [63:0] and_ln318_fu_3621_p2;
wire   [63:0] BCa_16_fu_3585_p3;
wire   [63:0] BCo_14_fu_3603_p3;
wire   [63:0] xor_ln319_fu_3633_p2;
wire   [63:0] and_ln319_fu_3639_p2;
wire   [63:0] BCu_14_fu_3609_p3;
wire   [63:0] xor_ln320_fu_3651_p2;
wire   [63:0] and_ln320_fu_3657_p2;
wire   [63:0] xor_ln321_fu_3669_p2;
wire   [63:0] and_ln321_fu_3675_p2;
wire   [63:0] xor_ln322_fu_3687_p2;
wire   [63:0] and_ln322_fu_3693_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 Aso_1_fu_286 = 64'd0;
#0 Asi_1_fu_290 = 64'd0;
#0 Ase_1_fu_294 = 64'd0;
#0 Asa_1_fu_298 = 64'd0;
#0 Amu_1_fu_302 = 64'd0;
#0 Amo_1_fu_306 = 64'd0;
#0 Ami_1_fu_310 = 64'd0;
#0 Ame_1_fu_314 = 64'd0;
#0 Ama_1_fu_318 = 64'd0;
#0 Aku_1_fu_322 = 64'd0;
#0 Ako_1_fu_326 = 64'd0;
#0 Aki_1_fu_330 = 64'd0;
#0 Ake_1_fu_334 = 64'd0;
#0 Aka_1_fu_338 = 64'd0;
#0 Agu_1_fu_342 = 64'd0;
#0 Ago_1_fu_346 = 64'd0;
#0 Agi_1_fu_350 = 64'd0;
#0 Age_1_fu_354 = 64'd0;
#0 Aga_1_fu_358 = 64'd0;
#0 Abu_1_fu_362 = 64'd0;
#0 Abo_1_fu_366 = 64'd0;
#0 Abi_1_fu_370 = 64'd0;
#0 Abe_1_fu_374 = 64'd0;
#0 Aba_1_fu_378 = 64'd0;
#0 Asu_1_fu_382 = 64'd0;
#0 round_fu_386 = 5'd0;
#0 ap_done_reg = 1'b0;
end

sha3_256_hw_KeccakF1600_StatePermute_Pipeline_state_permute_KeccakF_RoundConstants_ROM_AUbkb #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
KeccakF_RoundConstants_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(KeccakF_RoundConstants_address0),
    .ce0(KeccakF_RoundConstants_ce0_local),
    .q0(KeccakF_RoundConstants_q0),
    .address1(KeccakF_RoundConstants_address1),
    .ce1(KeccakF_RoundConstants_ce1_local),
    .q1(KeccakF_RoundConstants_q1)
);

sha3_256_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Aba_1_fu_378 <= Aba;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Aba_1_fu_378 <= Aba_6_fu_3149_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Abe_1_fu_374 <= Abe;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Abe_1_fu_374 <= Abe_5_fu_3167_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Abi_1_fu_370 <= Abi;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Abi_1_fu_370 <= Abi_5_fu_3185_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Abo_1_fu_366 <= Abo;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Abo_1_fu_366 <= Abo_5_fu_3202_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Abu_1_fu_362 <= Abu;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Abu_1_fu_362 <= Abu_5_fu_3219_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Aga_1_fu_358 <= Aga;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Aga_1_fu_358 <= Aga_5_fu_3267_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Age_1_fu_354 <= Age;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Age_1_fu_354 <= Age_5_fu_3285_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Agi_1_fu_350 <= Agi;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Agi_1_fu_350 <= Agi_5_fu_3303_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Ago_1_fu_346 <= Ago;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Ago_1_fu_346 <= Ago_5_fu_3321_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Agu_1_fu_342 <= Agu;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Agu_1_fu_342 <= Agu_5_fu_3339_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Aka_1_fu_338 <= Aka;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Aka_1_fu_338 <= Aka_5_fu_3387_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Ake_1_fu_334 <= Ake;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Ake_1_fu_334 <= Ake_5_fu_3405_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Aki_1_fu_330 <= Aki;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Aki_1_fu_330 <= Aki_5_fu_3423_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Ako_1_fu_326 <= Ako;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Ako_1_fu_326 <= Ako_5_fu_3441_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Aku_1_fu_322 <= Aku;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Aku_1_fu_322 <= Aku_5_fu_3459_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Ama_1_fu_318 <= Ama;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Ama_1_fu_318 <= Ama_5_fu_3507_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Ame_1_fu_314 <= Ame;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Ame_1_fu_314 <= Ame_5_fu_3525_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Ami_1_fu_310 <= Ami;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Ami_1_fu_310 <= Ami_5_fu_3543_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Amo_1_fu_306 <= Amo;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Amo_1_fu_306 <= Amo_5_fu_3561_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Amu_1_fu_302 <= Amu;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Amu_1_fu_302 <= Amu_5_fu_3579_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Asa_1_fu_298 <= Asa;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Asa_1_fu_298 <= Asa_5_fu_3627_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Ase_1_fu_294 <= Ase;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Ase_1_fu_294 <= Ase_5_fu_3645_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Asi_1_fu_290 <= Asi;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Asi_1_fu_290 <= Asi_5_fu_3663_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Aso_1_fu_286 <= Aso;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Aso_1_fu_286 <= Aso_5_fu_3681_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Asu_1_fu_382 <= Asu;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Asu_1_fu_382 <= Asu_5_fu_3699_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln131_fu_873_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            round_fu_386 <= add_ln131_fu_907_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            round_fu_386 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Eba_4_reg_4151 <= Eba_4_fu_2625_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln131_reg_4137 <= icmp_ln131_fu_873_p2;
        lshr_ln35_reg_4163 <= {{Ege_2_fu_2631_p2[63:20]}};
        lshr_ln36_reg_4173 <= {{Eki_2_fu_2651_p2[63:21]}};
        lshr_ln37_reg_4183 <= {{Emo_2_fu_2671_p2[63:43]}};
        lshr_ln38_reg_4193 <= {{Esu_2_fu_2691_p2[63:50]}};
        lshr_ln39_reg_4208 <= {{Ebo_2_fu_2711_p2[63:36]}};
        lshr_ln40_reg_4218 <= {{Egu_2_fu_2731_p2[63:44]}};
        lshr_ln41_reg_4228 <= {{Eka_2_fu_2751_p2[63:61]}};
        lshr_ln42_reg_4238 <= {{Eme_2_fu_2771_p2[63:19]}};
        lshr_ln43_reg_4248 <= {{Esi_2_fu_2791_p2[63:3]}};
        lshr_ln45_reg_4268 <= {{Egi_2_fu_2829_p2[63:58]}};
        lshr_ln46_reg_4288 <= {{Emu_2_fu_2869_p2[63:56]}};
        lshr_ln47_reg_4298 <= {{Esa_2_fu_2889_p2[63:46]}};
        lshr_ln48_reg_4308 <= {{Ebu_2_fu_2909_p2[63:37]}};
        lshr_ln49_reg_4318 <= {{Ega_2_fu_2929_p2[63:28]}};
        lshr_ln50_reg_4328 <= {{Eke_2_fu_2949_p2[63:54]}};
        lshr_ln51_reg_4338 <= {{Emi_2_fu_2969_p2[63:49]}};
        lshr_ln52_reg_4348 <= {{Eso_2_fu_2989_p2[63:8]}};
        lshr_ln53_reg_4358 <= {{Ebi_2_fu_3009_p2[63:2]}};
        lshr_ln54_reg_4368 <= {{Ego_2_fu_3029_p2[63:9]}};
        lshr_ln55_reg_4378 <= {{Eku_2_fu_3049_p2[63:25]}};
        lshr_ln56_reg_4388 <= {{Ema_2_fu_3069_p2[63:23]}};
        lshr_ln57_reg_4398 <= {{Ese_2_fu_3089_p2[63:62]}};
        lshr_ln_reg_4278 <= {{Eko_2_fu_2849_p2[63:39]}};
        tmp_22_reg_4258 <= Ebe_2_fu_2811_p2[32'd63];
        trunc_ln246_reg_4158 <= trunc_ln246_fu_2637_p1;
        trunc_ln248_reg_4168 <= trunc_ln248_fu_2657_p1;
        trunc_ln250_reg_4178 <= trunc_ln250_fu_2677_p1;
        trunc_ln252_reg_4188 <= trunc_ln252_fu_2697_p1;
        trunc_ln261_reg_4203 <= trunc_ln261_fu_2717_p1;
        trunc_ln263_reg_4213 <= trunc_ln263_fu_2737_p1;
        trunc_ln265_reg_4223 <= trunc_ln265_fu_2757_p1;
        trunc_ln267_reg_4233 <= trunc_ln267_fu_2777_p1;
        trunc_ln269_reg_4243 <= trunc_ln269_fu_2797_p1;
        trunc_ln277_reg_4253 <= trunc_ln277_fu_2817_p1;
        trunc_ln279_reg_4263 <= trunc_ln279_fu_2835_p1;
        trunc_ln281_reg_4273 <= trunc_ln281_fu_2855_p1;
        trunc_ln283_reg_4283 <= trunc_ln283_fu_2875_p1;
        trunc_ln285_reg_4293 <= trunc_ln285_fu_2895_p1;
        trunc_ln293_reg_4303 <= trunc_ln293_fu_2915_p1;
        trunc_ln295_reg_4313 <= trunc_ln295_fu_2935_p1;
        trunc_ln297_reg_4323 <= trunc_ln297_fu_2955_p1;
        trunc_ln299_reg_4333 <= trunc_ln299_fu_2975_p1;
        trunc_ln301_reg_4343 <= trunc_ln301_fu_2995_p1;
        trunc_ln309_reg_4353 <= trunc_ln309_fu_3015_p1;
        trunc_ln311_reg_4363 <= trunc_ln311_fu_3035_p1;
        trunc_ln313_reg_4373 <= trunc_ln313_fu_3055_p1;
        trunc_ln315_reg_4383 <= trunc_ln315_fu_3075_p1;
        trunc_ln317_reg_4393 <= trunc_ln317_fu_3095_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        KeccakF_RoundConstants_load_1_reg_4198 <= KeccakF_RoundConstants_q0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aba_1_out_ap_vld = 1'b1;
    end else begin
        Aba_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Abe_1_out_ap_vld = 1'b1;
    end else begin
        Abe_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Abi_1_out_ap_vld = 1'b1;
    end else begin
        Abi_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Abo_1_out_ap_vld = 1'b1;
    end else begin
        Abo_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Abu_1_out_ap_vld = 1'b1;
    end else begin
        Abu_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aga_1_out_ap_vld = 1'b1;
    end else begin
        Aga_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Age_1_out_ap_vld = 1'b1;
    end else begin
        Age_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Agi_1_out_ap_vld = 1'b1;
    end else begin
        Agi_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ago_1_out_ap_vld = 1'b1;
    end else begin
        Ago_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Agu_1_out_ap_vld = 1'b1;
    end else begin
        Agu_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aka_1_out_ap_vld = 1'b1;
    end else begin
        Aka_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ake_1_out_ap_vld = 1'b1;
    end else begin
        Ake_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aki_1_out_ap_vld = 1'b1;
    end else begin
        Aki_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ako_1_out_ap_vld = 1'b1;
    end else begin
        Ako_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aku_1_out_ap_vld = 1'b1;
    end else begin
        Aku_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ama_1_out_ap_vld = 1'b1;
    end else begin
        Ama_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ame_1_out_ap_vld = 1'b1;
    end else begin
        Ame_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ami_1_out_ap_vld = 1'b1;
    end else begin
        Ami_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Amo_1_out_ap_vld = 1'b1;
    end else begin
        Amo_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Amu_1_out_ap_vld = 1'b1;
    end else begin
        Amu_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Asa_1_out_ap_vld = 1'b1;
    end else begin
        Asa_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ase_1_out_ap_vld = 1'b1;
    end else begin
        Ase_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Asi_1_out_ap_vld = 1'b1;
    end else begin
        Asi_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aso_1_out_ap_vld = 1'b1;
    end else begin
        Aso_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln131_reg_4137 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Asu_1_out_ap_vld = 1'b1;
    end else begin
        Asu_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        KeccakF_RoundConstants_ce0_local = 1'b1;
    end else begin
        KeccakF_RoundConstants_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        KeccakF_RoundConstants_ce1_local = 1'b1;
    end else begin
        KeccakF_RoundConstants_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln131_fu_873_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Aba_1_load = Aba_6_fu_3149_p2;
    end else begin
        ap_sig_allocacmp_Aba_1_load = Aba_1_fu_378;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Abe_1_load = Abe_5_fu_3167_p2;
    end else begin
        ap_sig_allocacmp_Abe_1_load = Abe_1_fu_374;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Abi_1_load = Abi_5_fu_3185_p2;
    end else begin
        ap_sig_allocacmp_Abi_1_load = Abi_1_fu_370;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Abo_1_load = Abo_5_fu_3202_p2;
    end else begin
        ap_sig_allocacmp_Abo_1_load = Abo_1_fu_366;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Abu_1_load = Abu_5_fu_3219_p2;
    end else begin
        ap_sig_allocacmp_Abu_1_load = Abu_1_fu_362;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Aga_1_load = Aga_5_fu_3267_p2;
    end else begin
        ap_sig_allocacmp_Aga_1_load = Aga_1_fu_358;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Age_1_load = Age_5_fu_3285_p2;
    end else begin
        ap_sig_allocacmp_Age_1_load = Age_1_fu_354;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Agi_1_load = Agi_5_fu_3303_p2;
    end else begin
        ap_sig_allocacmp_Agi_1_load = Agi_1_fu_350;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Ago_1_load = Ago_5_fu_3321_p2;
    end else begin
        ap_sig_allocacmp_Ago_1_load = Ago_1_fu_346;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Agu_1_load = Agu_5_fu_3339_p2;
    end else begin
        ap_sig_allocacmp_Agu_1_load = Agu_1_fu_342;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Aka_1_load = Aka_5_fu_3387_p2;
    end else begin
        ap_sig_allocacmp_Aka_1_load = Aka_1_fu_338;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Ake_1_load = Ake_5_fu_3405_p2;
    end else begin
        ap_sig_allocacmp_Ake_1_load = Ake_1_fu_334;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Aki_1_load = Aki_5_fu_3423_p2;
    end else begin
        ap_sig_allocacmp_Aki_1_load = Aki_1_fu_330;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Ako_1_load = Ako_5_fu_3441_p2;
    end else begin
        ap_sig_allocacmp_Ako_1_load = Ako_1_fu_326;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Aku_1_load = Aku_5_fu_3459_p2;
    end else begin
        ap_sig_allocacmp_Aku_1_load = Aku_1_fu_322;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Ama_1_load = Ama_5_fu_3507_p2;
    end else begin
        ap_sig_allocacmp_Ama_1_load = Ama_1_fu_318;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Ame_1_load = Ame_5_fu_3525_p2;
    end else begin
        ap_sig_allocacmp_Ame_1_load = Ame_1_fu_314;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Ami_1_load = Ami_5_fu_3543_p2;
    end else begin
        ap_sig_allocacmp_Ami_1_load = Ami_1_fu_310;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Amo_1_load = Amo_5_fu_3561_p2;
    end else begin
        ap_sig_allocacmp_Amo_1_load = Amo_1_fu_306;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Amu_1_load = Amu_5_fu_3579_p2;
    end else begin
        ap_sig_allocacmp_Amu_1_load = Amu_1_fu_302;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Asa_1_load = Asa_5_fu_3627_p2;
    end else begin
        ap_sig_allocacmp_Asa_1_load = Asa_1_fu_298;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Ase_1_load = Ase_5_fu_3645_p2;
    end else begin
        ap_sig_allocacmp_Ase_1_load = Ase_1_fu_294;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Asi_1_load = Asi_5_fu_3663_p2;
    end else begin
        ap_sig_allocacmp_Asi_1_load = Asi_1_fu_290;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Aso_1_load = Aso_5_fu_3681_p2;
    end else begin
        ap_sig_allocacmp_Aso_1_load = Aso_1_fu_286;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Asu_1_load = Asu_5_fu_3699_p2;
    end else begin
        ap_sig_allocacmp_Asu_1_load = Asu_1_fu_382;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_round_2 = 5'd0;
    end else begin
        ap_sig_allocacmp_round_2 = round_fu_386;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Aba_1_out = Aba_1_fu_378;

assign Aba_6_fu_3149_p2 = (xor_ln254_1_fu_3145_p2 ^ and_ln254_fu_3139_p2);

assign Aba_7_fu_1243_p2 = (ap_sig_allocacmp_Aba_1_load ^ Da_fu_1133_p2);

assign Abe_1_out = Abe_1_fu_374;

assign Abe_4_fu_1687_p2 = (ap_sig_allocacmp_Abe_1_load ^ De_fu_1159_p2);

assign Abe_5_fu_3167_p2 = (and_ln255_fu_3161_p2 ^ BCe_7_fu_3109_p3);

assign Abi_1_out = Abi_1_fu_370;

assign Abi_4_fu_2145_p2 = (ap_sig_allocacmp_Abi_1_load ^ Di_fu_1185_p2);

assign Abi_5_fu_3185_p2 = (and_ln256_fu_3179_p2 ^ BCi_7_fu_3115_p3);

assign Abo_1_out = Abo_1_fu_366;

assign Abo_4_fu_1457_p2 = (ap_sig_allocacmp_Abo_1_load ^ Do_fu_1211_p2);

assign Abo_5_fu_3202_p2 = (and_ln257_fu_3197_p2 ^ BCo_7_fu_3121_p3);

assign Abu_1_out = Abu_1_fu_362;

assign Abu_4_fu_1915_p2 = (ap_sig_allocacmp_Abu_1_load ^ Du_fu_1237_p2);

assign Abu_5_fu_3219_p2 = (and_ln258_fu_3213_p2 ^ BCu_7_fu_3127_p3);

assign Aga_1_out = Aga_1_fu_358;

assign Aga_4_fu_1943_p2 = (ap_sig_allocacmp_Aga_1_load ^ Da_fu_1133_p2);

assign Aga_5_fu_3267_p2 = (and_ln270_fu_3261_p2 ^ BCa_8_fu_3225_p3);

assign Age_1_out = Age_1_fu_354;

assign Age_4_fu_1249_p2 = (ap_sig_allocacmp_Age_1_load ^ De_fu_1159_p2);

assign Age_5_fu_3285_p2 = (and_ln271_fu_3279_p2 ^ BCe_8_fu_3231_p3);

assign Agi_1_out = Agi_1_fu_350;

assign Agi_4_fu_1713_p2 = (ap_sig_allocacmp_Agi_1_load ^ Di_fu_1185_p2);

assign Agi_5_fu_3303_p2 = (and_ln272_fu_3297_p2 ^ BCi_8_fu_3237_p3);

assign Ago_1_out = Ago_1_fu_346;

assign Ago_4_fu_2173_p2 = (ap_sig_allocacmp_Ago_1_load ^ Do_fu_1211_p2);

assign Ago_5_fu_3321_p2 = (and_ln273_fu_3315_p2 ^ BCo_8_fu_3243_p3);

assign Agu_1_out = Agu_1_fu_342;

assign Agu_4_fu_1485_p2 = (ap_sig_allocacmp_Agu_1_load ^ Du_fu_1237_p2);

assign Agu_5_fu_3339_p2 = (and_ln274_fu_3333_p2 ^ BCu_8_fu_3249_p3);

assign Aka_1_out = Aka_1_fu_338;

assign Aka_4_fu_1513_p2 = (ap_sig_allocacmp_Aka_1_load ^ Da_fu_1133_p2);

assign Aka_5_fu_3387_p2 = (and_ln286_fu_3381_p2 ^ BCa_9_fu_3345_p3);

assign Ake_1_out = Ake_1_fu_334;

assign Ake_4_fu_1971_p2 = (ap_sig_allocacmp_Ake_1_load ^ De_fu_1159_p2);

assign Ake_5_fu_3405_p2 = (and_ln287_fu_3399_p2 ^ BCe_9_fu_3351_p3);

assign Aki_1_out = Aki_1_fu_330;

assign Aki_4_fu_1277_p2 = (ap_sig_allocacmp_Aki_1_load ^ Di_fu_1185_p2);

assign Aki_5_fu_3423_p2 = (and_ln288_fu_3417_p2 ^ BCi_9_fu_3357_p3);

assign Ako_1_out = Ako_1_fu_326;

assign Ako_4_fu_1741_p2 = (ap_sig_allocacmp_Ako_1_load ^ Do_fu_1211_p2);

assign Ako_5_fu_3441_p2 = (and_ln289_fu_3435_p2 ^ BCo_9_fu_3363_p3);

assign Aku_1_out = Aku_1_fu_322;

assign Aku_4_fu_2201_p2 = (ap_sig_allocacmp_Aku_1_load ^ Du_fu_1237_p2);

assign Aku_5_fu_3459_p2 = (and_ln290_fu_3453_p2 ^ BCu_9_fu_3369_p3);

assign Ama_1_out = Ama_1_fu_318;

assign Ama_4_fu_2229_p2 = (ap_sig_allocacmp_Ama_1_load ^ Da_fu_1133_p2);

assign Ama_5_fu_3507_p2 = (and_ln302_fu_3501_p2 ^ BCa_15_fu_3465_p3);

assign Ame_1_out = Ame_1_fu_314;

assign Ame_4_fu_1541_p2 = (ap_sig_allocacmp_Ame_1_load ^ De_fu_1159_p2);

assign Ame_5_fu_3525_p2 = (and_ln303_fu_3519_p2 ^ BCe_13_fu_3471_p3);

assign Ami_1_out = Ami_1_fu_310;

assign Ami_4_fu_1999_p2 = (ap_sig_allocacmp_Ami_1_load ^ Di_fu_1185_p2);

assign Ami_5_fu_3543_p2 = (and_ln304_fu_3537_p2 ^ BCi_13_fu_3477_p3);

assign Amo_1_out = Amo_1_fu_306;

assign Amo_4_fu_1305_p2 = (ap_sig_allocacmp_Amo_1_load ^ Do_fu_1211_p2);

assign Amo_5_fu_3561_p2 = (and_ln305_fu_3555_p2 ^ BCo_13_fu_3483_p3);

assign Amu_1_out = Amu_1_fu_302;

assign Amu_4_fu_1769_p2 = (ap_sig_allocacmp_Amu_1_load ^ Du_fu_1237_p2);

assign Amu_5_fu_3579_p2 = (and_ln306_fu_3573_p2 ^ BCu_13_fu_3489_p3);

assign Asa_1_out = Asa_1_fu_298;

assign Asa_4_fu_1797_p2 = (ap_sig_allocacmp_Asa_1_load ^ Da_fu_1133_p2);

assign Asa_5_fu_3627_p2 = (and_ln318_fu_3621_p2 ^ BCa_16_fu_3585_p3);

assign Ase_1_out = Ase_1_fu_294;

assign Ase_4_fu_2257_p2 = (ap_sig_allocacmp_Ase_1_load ^ De_fu_1159_p2);

assign Ase_5_fu_3645_p2 = (and_ln319_fu_3639_p2 ^ BCe_14_fu_3591_p3);

assign Asi_1_out = Asi_1_fu_290;

assign Asi_4_fu_1569_p2 = (ap_sig_allocacmp_Asi_1_load ^ Di_fu_1185_p2);

assign Asi_5_fu_3663_p2 = (and_ln320_fu_3657_p2 ^ BCi_14_fu_3597_p3);

assign Aso_1_out = Aso_1_fu_286;

assign Aso_4_fu_2027_p2 = (ap_sig_allocacmp_Aso_1_load ^ Do_fu_1211_p2);

assign Aso_5_fu_3681_p2 = (and_ln321_fu_3675_p2 ^ BCo_14_fu_3603_p3);

assign Asu_1_out = Asu_1_fu_382;

assign Asu_4_fu_1333_p2 = (ap_sig_allocacmp_Asu_1_load ^ Du_fu_1237_p2);

assign Asu_5_fu_3699_p2 = (and_ln322_fu_3693_p2 ^ BCu_14_fu_3609_p3);

assign BCa_13_fu_2393_p2 = (xor_ln230_fu_2375_p2 ^ xor_ln230_2_fu_2387_p2);

assign BCa_15_fu_3465_p3 = {{trunc_ln293_reg_4303}, {lshr_ln48_reg_4308}};

assign BCa_16_fu_3585_p3 = {{trunc_ln309_reg_4353}, {lshr_ln53_reg_4358}};

assign BCa_2_fu_1477_p3 = {{trunc_ln166_fu_1463_p1}, {lshr_ln10_fu_1467_p4}};

assign BCa_3_fu_1705_p3 = {{trunc_ln182_fu_1693_p1}, {tmp_16_fu_1697_p3}};

assign BCa_4_fu_1935_p3 = {{trunc_ln198_fu_1921_p1}, {lshr_ln20_fu_1925_p4}};

assign BCa_5_fu_2165_p3 = {{trunc_ln214_fu_2151_p1}, {lshr_ln25_fu_2155_p4}};

assign BCa_8_fu_3225_p3 = {{trunc_ln261_reg_4203}, {lshr_ln39_reg_4208}};

assign BCa_9_fu_3345_p3 = {{trunc_ln277_reg_4253}, {tmp_22_reg_4258}};

assign BCa_fu_1011_p2 = (xor_ln135_2_fu_999_p2 ^ xor_ln135_1_fu_1005_p2);

assign BCe_12_fu_2417_p2 = (xor_ln231_2_fu_2411_p2 ^ xor_ln231_1_fu_2399_p2);

assign BCe_13_fu_3471_p3 = {{trunc_ln295_reg_4313}, {lshr_ln49_reg_4318}};

assign BCe_14_fu_3591_p3 = {{trunc_ln311_reg_4363}, {lshr_ln54_reg_4368}};

assign BCe_1_fu_1269_p3 = {{trunc_ln151_fu_1255_p1}, {lshr_ln6_fu_1259_p4}};

assign BCe_2_fu_1505_p3 = {{trunc_ln168_fu_1491_p1}, {lshr_ln11_fu_1495_p4}};

assign BCe_3_fu_1733_p3 = {{trunc_ln184_fu_1719_p1}, {lshr_ln16_fu_1723_p4}};

assign BCe_4_fu_1963_p3 = {{trunc_ln200_fu_1949_p1}, {lshr_ln21_fu_1953_p4}};

assign BCe_5_fu_2193_p3 = {{trunc_ln216_fu_2179_p1}, {lshr_ln26_fu_2183_p4}};

assign BCe_7_fu_3109_p3 = {{trunc_ln246_reg_4158}, {lshr_ln35_reg_4163}};

assign BCe_8_fu_3231_p3 = {{trunc_ln263_reg_4213}, {lshr_ln40_reg_4218}};

assign BCe_9_fu_3351_p3 = {{trunc_ln279_reg_4263}, {lshr_ln45_reg_4268}};

assign BCe_fu_1035_p2 = (xor_ln136_2_fu_1023_p2 ^ xor_ln136_1_fu_1029_p2);

assign BCi_12_fu_2441_p2 = (xor_ln232_2_fu_2435_p2 ^ xor_ln232_1_fu_2423_p2);

assign BCi_13_fu_3477_p3 = {{trunc_ln297_reg_4323}, {lshr_ln50_reg_4328}};

assign BCi_14_fu_3597_p3 = {{trunc_ln313_reg_4373}, {lshr_ln55_reg_4378}};

assign BCi_1_fu_1297_p3 = {{trunc_ln153_fu_1283_p1}, {lshr_ln7_fu_1287_p4}};

assign BCi_2_fu_1533_p3 = {{trunc_ln170_fu_1519_p1}, {lshr_ln12_fu_1523_p4}};

assign BCi_3_fu_1761_p3 = {{trunc_ln186_fu_1747_p1}, {lshr_ln17_fu_1751_p4}};

assign BCi_4_fu_1991_p3 = {{trunc_ln202_fu_1977_p1}, {lshr_ln22_fu_1981_p4}};

assign BCi_5_fu_2221_p3 = {{trunc_ln218_fu_2207_p1}, {lshr_ln27_fu_2211_p4}};

assign BCi_7_fu_3115_p3 = {{trunc_ln248_reg_4168}, {lshr_ln36_reg_4173}};

assign BCi_8_fu_3237_p3 = {{trunc_ln265_reg_4223}, {lshr_ln41_reg_4228}};

assign BCi_9_fu_3357_p3 = {{trunc_ln281_reg_4273}, {lshr_ln_reg_4278}};

assign BCi_fu_1059_p2 = (xor_ln137_2_fu_1053_p2 ^ ap_sig_allocacmp_Abi_1_load);

assign BCo_12_fu_2465_p2 = (xor_ln233_fu_2447_p2 ^ xor_ln233_2_fu_2459_p2);

assign BCo_13_fu_3483_p3 = {{trunc_ln299_reg_4333}, {lshr_ln51_reg_4338}};

assign BCo_14_fu_3603_p3 = {{trunc_ln315_reg_4383}, {lshr_ln56_reg_4388}};

assign BCo_1_fu_1325_p3 = {{trunc_ln155_fu_1311_p1}, {lshr_ln8_fu_1315_p4}};

assign BCo_2_fu_1561_p3 = {{trunc_ln172_fu_1547_p1}, {lshr_ln13_fu_1551_p4}};

assign BCo_3_fu_1789_p3 = {{trunc_ln188_fu_1775_p1}, {lshr_ln18_fu_1779_p4}};

assign BCo_4_fu_2019_p3 = {{trunc_ln204_fu_2005_p1}, {lshr_ln23_fu_2009_p4}};

assign BCo_5_fu_2249_p3 = {{trunc_ln220_fu_2235_p1}, {lshr_ln28_fu_2239_p4}};

assign BCo_7_fu_3121_p3 = {{trunc_ln250_reg_4178}, {lshr_ln37_reg_4183}};

assign BCo_8_fu_3243_p3 = {{trunc_ln267_reg_4233}, {lshr_ln42_reg_4238}};

assign BCo_9_fu_3363_p3 = {{trunc_ln283_reg_4283}, {lshr_ln46_reg_4288}};

assign BCo_fu_1083_p2 = (xor_ln138_2_fu_1077_p2 ^ ap_sig_allocacmp_Abo_1_load);

assign BCu_12_fu_2489_p2 = (xor_ln234_fu_2471_p2 ^ xor_ln234_2_fu_2483_p2);

assign BCu_13_fu_3489_p3 = {{trunc_ln301_reg_4343}, {lshr_ln52_reg_4348}};

assign BCu_14_fu_3609_p3 = {{trunc_ln317_reg_4393}, {lshr_ln57_reg_4398}};

assign BCu_1_fu_1353_p3 = {{trunc_ln157_fu_1339_p1}, {lshr_ln9_fu_1343_p4}};

assign BCu_2_fu_1589_p3 = {{trunc_ln174_fu_1575_p1}, {lshr_ln14_fu_1579_p4}};

assign BCu_3_fu_1817_p3 = {{trunc_ln190_fu_1803_p1}, {lshr_ln19_fu_1807_p4}};

assign BCu_4_fu_2047_p3 = {{trunc_ln206_fu_2033_p1}, {lshr_ln24_fu_2037_p4}};

assign BCu_5_fu_2277_p3 = {{trunc_ln222_fu_2263_p1}, {lshr_ln29_fu_2267_p4}};

assign BCu_7_fu_3127_p3 = {{trunc_ln252_reg_4188}, {lshr_ln38_reg_4193}};

assign BCu_8_fu_3249_p3 = {{trunc_ln269_reg_4243}, {lshr_ln43_reg_4248}};

assign BCu_9_fu_3369_p3 = {{trunc_ln285_reg_4293}, {lshr_ln47_reg_4298}};

assign BCu_fu_1107_p2 = (xor_ln139_2_fu_1095_p2 ^ xor_ln139_1_fu_1101_p2);

assign Da_2_fu_2515_p2 = (or_ln5_fu_2507_p3 ^ BCu_12_fu_2489_p2);

assign Da_fu_1133_p2 = (or_ln_fu_1125_p3 ^ BCu_fu_1107_p2);

assign De_2_fu_2541_p2 = (or_ln6_fu_2533_p3 ^ BCa_13_fu_2393_p2);

assign De_fu_1159_p2 = (or_ln1_fu_1151_p3 ^ BCa_fu_1011_p2);

assign Di_2_fu_2567_p2 = (or_ln7_fu_2559_p3 ^ BCe_12_fu_2417_p2);

assign Di_fu_1185_p2 = (or_ln2_fu_1177_p3 ^ BCe_fu_1035_p2);

assign Do_2_fu_2593_p2 = (or_ln8_fu_2585_p3 ^ BCi_12_fu_2441_p2);

assign Do_fu_1211_p2 = (or_ln3_fu_1203_p3 ^ BCi_fu_1059_p2);

assign Du_2_fu_2619_p2 = (or_ln9_fu_2611_p3 ^ BCo_12_fu_2465_p2);

assign Du_fu_1237_p2 = (or_ln4_fu_1229_p3 ^ BCo_fu_1083_p2);

assign Eba_4_fu_2625_p2 = (Eba_fu_1379_p2 ^ Da_2_fu_2515_p2);

assign Eba_fu_1379_p2 = (xor_ln159_1_fu_1373_p2 ^ and_ln159_fu_1367_p2);

assign Ebe_2_fu_2811_p2 = (Ebe_fu_1397_p2 ^ De_2_fu_2541_p2);

assign Ebe_fu_1397_p2 = (and_ln160_fu_1391_p2 ^ BCe_1_fu_1269_p3);

assign Ebi_2_fu_3009_p2 = (Ebi_fu_1415_p2 ^ Di_2_fu_2567_p2);

assign Ebi_fu_1415_p2 = (and_ln161_fu_1409_p2 ^ BCi_1_fu_1297_p3);

assign Ebo_2_fu_2711_p2 = (Ebo_fu_1433_p2 ^ Do_2_fu_2593_p2);

assign Ebo_fu_1433_p2 = (and_ln162_fu_1427_p2 ^ BCo_1_fu_1325_p3);

assign Ebu_2_fu_2909_p2 = (Ebu_fu_1451_p2 ^ Du_2_fu_2619_p2);

assign Ebu_fu_1451_p2 = (and_ln163_fu_1445_p2 ^ BCu_1_fu_1353_p3);

assign Ega_2_fu_2929_p2 = (Ega_fu_1609_p2 ^ Da_2_fu_2515_p2);

assign Ega_fu_1609_p2 = (and_ln175_fu_1603_p2 ^ BCa_2_fu_1477_p3);

assign Ege_2_fu_2631_p2 = (Ege_fu_1627_p2 ^ De_2_fu_2541_p2);

assign Ege_fu_1627_p2 = (and_ln176_fu_1621_p2 ^ BCe_2_fu_1505_p3);

assign Egi_2_fu_2829_p2 = (Egi_fu_1645_p2 ^ Di_2_fu_2567_p2);

assign Egi_fu_1645_p2 = (and_ln177_fu_1639_p2 ^ BCi_2_fu_1533_p3);

assign Ego_2_fu_3029_p2 = (Ego_fu_1663_p2 ^ Do_2_fu_2593_p2);

assign Ego_fu_1663_p2 = (and_ln178_fu_1657_p2 ^ BCo_2_fu_1561_p3);

assign Egu_2_fu_2731_p2 = (Egu_fu_1681_p2 ^ Du_2_fu_2619_p2);

assign Egu_fu_1681_p2 = (and_ln179_fu_1675_p2 ^ BCu_2_fu_1589_p3);

assign Eka_2_fu_2751_p2 = (Eka_fu_1837_p2 ^ Da_2_fu_2515_p2);

assign Eka_fu_1837_p2 = (and_ln191_fu_1831_p2 ^ BCa_3_fu_1705_p3);

assign Eke_2_fu_2949_p2 = (Eke_fu_1855_p2 ^ De_2_fu_2541_p2);

assign Eke_fu_1855_p2 = (and_ln192_fu_1849_p2 ^ BCe_3_fu_1733_p3);

assign Eki_2_fu_2651_p2 = (Eki_fu_1873_p2 ^ Di_2_fu_2567_p2);

assign Eki_fu_1873_p2 = (and_ln193_fu_1867_p2 ^ BCi_3_fu_1761_p3);

assign Eko_2_fu_2849_p2 = (Eko_fu_1891_p2 ^ Do_2_fu_2593_p2);

assign Eko_fu_1891_p2 = (and_ln194_fu_1885_p2 ^ BCo_3_fu_1789_p3);

assign Eku_2_fu_3049_p2 = (Eku_fu_1909_p2 ^ Du_2_fu_2619_p2);

assign Eku_fu_1909_p2 = (and_ln195_fu_1903_p2 ^ BCu_3_fu_1817_p3);

assign Ema_2_fu_3069_p2 = (Ema_fu_2067_p2 ^ Da_2_fu_2515_p2);

assign Ema_fu_2067_p2 = (and_ln207_fu_2061_p2 ^ BCa_4_fu_1935_p3);

assign Eme_2_fu_2771_p2 = (Eme_fu_2085_p2 ^ De_2_fu_2541_p2);

assign Eme_fu_2085_p2 = (and_ln208_fu_2079_p2 ^ BCe_4_fu_1963_p3);

assign Emi_2_fu_2969_p2 = (Emi_fu_2103_p2 ^ Di_2_fu_2567_p2);

assign Emi_fu_2103_p2 = (and_ln209_fu_2097_p2 ^ BCi_4_fu_1991_p3);

assign Emo_2_fu_2671_p2 = (Emo_fu_2121_p2 ^ Do_2_fu_2593_p2);

assign Emo_fu_2121_p2 = (and_ln210_fu_2115_p2 ^ BCo_4_fu_2019_p3);

assign Emu_2_fu_2869_p2 = (Emu_fu_2139_p2 ^ Du_2_fu_2619_p2);

assign Emu_fu_2139_p2 = (and_ln211_fu_2133_p2 ^ BCu_4_fu_2047_p3);

assign Esa_2_fu_2889_p2 = (Esa_fu_2297_p2 ^ Da_2_fu_2515_p2);

assign Esa_fu_2297_p2 = (and_ln223_fu_2291_p2 ^ BCa_5_fu_2165_p3);

assign Ese_2_fu_3089_p2 = (Ese_fu_2315_p2 ^ De_2_fu_2541_p2);

assign Ese_fu_2315_p2 = (and_ln224_fu_2309_p2 ^ BCe_5_fu_2193_p3);

assign Esi_2_fu_2791_p2 = (Esi_fu_2333_p2 ^ Di_2_fu_2567_p2);

assign Esi_fu_2333_p2 = (and_ln225_fu_2327_p2 ^ BCi_5_fu_2221_p3);

assign Eso_2_fu_2989_p2 = (Eso_fu_2351_p2 ^ Do_2_fu_2593_p2);

assign Eso_fu_2351_p2 = (and_ln226_fu_2345_p2 ^ BCo_5_fu_2249_p3);

assign Esu_2_fu_2691_p2 = (Esu_fu_2369_p2 ^ Du_2_fu_2619_p2);

assign Esu_fu_2369_p2 = (and_ln227_fu_2363_p2 ^ BCu_5_fu_2277_p3);

assign KeccakF_RoundConstants_address0 = zext_ln254_fu_902_p1;

assign KeccakF_RoundConstants_address1 = zext_ln131_fu_879_p1;

assign add_ln131_fu_907_p2 = (ap_sig_allocacmp_round_2 + 5'd2);

assign and_ln159_fu_1367_p2 = (xor_ln159_fu_1361_p2 & BCi_1_fu_1297_p3);

assign and_ln160_fu_1391_p2 = (xor_ln160_fu_1385_p2 & BCo_1_fu_1325_p3);

assign and_ln161_fu_1409_p2 = (xor_ln161_fu_1403_p2 & BCu_1_fu_1353_p3);

assign and_ln162_fu_1427_p2 = (xor_ln162_fu_1421_p2 & Aba_7_fu_1243_p2);

assign and_ln163_fu_1445_p2 = (xor_ln163_fu_1439_p2 & BCe_1_fu_1269_p3);

assign and_ln175_fu_1603_p2 = (xor_ln175_fu_1597_p2 & BCi_2_fu_1533_p3);

assign and_ln176_fu_1621_p2 = (xor_ln176_fu_1615_p2 & BCo_2_fu_1561_p3);

assign and_ln177_fu_1639_p2 = (xor_ln177_fu_1633_p2 & BCu_2_fu_1589_p3);

assign and_ln178_fu_1657_p2 = (xor_ln178_fu_1651_p2 & BCa_2_fu_1477_p3);

assign and_ln179_fu_1675_p2 = (xor_ln179_fu_1669_p2 & BCe_2_fu_1505_p3);

assign and_ln191_fu_1831_p2 = (xor_ln191_fu_1825_p2 & BCi_3_fu_1761_p3);

assign and_ln192_fu_1849_p2 = (xor_ln192_fu_1843_p2 & BCo_3_fu_1789_p3);

assign and_ln193_fu_1867_p2 = (xor_ln193_fu_1861_p2 & BCu_3_fu_1817_p3);

assign and_ln194_fu_1885_p2 = (xor_ln194_fu_1879_p2 & BCa_3_fu_1705_p3);

assign and_ln195_fu_1903_p2 = (xor_ln195_fu_1897_p2 & BCe_3_fu_1733_p3);

assign and_ln207_fu_2061_p2 = (xor_ln207_fu_2055_p2 & BCi_4_fu_1991_p3);

assign and_ln208_fu_2079_p2 = (xor_ln208_fu_2073_p2 & BCo_4_fu_2019_p3);

assign and_ln209_fu_2097_p2 = (xor_ln209_fu_2091_p2 & BCu_4_fu_2047_p3);

assign and_ln210_fu_2115_p2 = (xor_ln210_fu_2109_p2 & BCa_4_fu_1935_p3);

assign and_ln211_fu_2133_p2 = (xor_ln211_fu_2127_p2 & BCe_4_fu_1963_p3);

assign and_ln223_fu_2291_p2 = (xor_ln223_fu_2285_p2 & BCi_5_fu_2221_p3);

assign and_ln224_fu_2309_p2 = (xor_ln224_fu_2303_p2 & BCo_5_fu_2249_p3);

assign and_ln225_fu_2327_p2 = (xor_ln225_fu_2321_p2 & BCu_5_fu_2277_p3);

assign and_ln226_fu_2345_p2 = (xor_ln226_fu_2339_p2 & BCa_5_fu_2165_p3);

assign and_ln227_fu_2363_p2 = (xor_ln227_fu_2357_p2 & BCe_5_fu_2193_p3);

assign and_ln254_fu_3139_p2 = (xor_ln254_fu_3133_p2 & BCi_7_fu_3115_p3);

assign and_ln255_fu_3161_p2 = (xor_ln255_fu_3155_p2 & BCo_7_fu_3121_p3);

assign and_ln256_fu_3179_p2 = (xor_ln256_fu_3173_p2 & BCu_7_fu_3127_p3);

assign and_ln257_fu_3197_p2 = (xor_ln257_fu_3191_p2 & Eba_4_reg_4151);

assign and_ln258_fu_3213_p2 = (xor_ln258_fu_3208_p2 & BCe_7_fu_3109_p3);

assign and_ln270_fu_3261_p2 = (xor_ln270_fu_3255_p2 & BCi_8_fu_3237_p3);

assign and_ln271_fu_3279_p2 = (xor_ln271_fu_3273_p2 & BCo_8_fu_3243_p3);

assign and_ln272_fu_3297_p2 = (xor_ln272_fu_3291_p2 & BCu_8_fu_3249_p3);

assign and_ln273_fu_3315_p2 = (xor_ln273_fu_3309_p2 & BCa_8_fu_3225_p3);

assign and_ln274_fu_3333_p2 = (xor_ln274_fu_3327_p2 & BCe_8_fu_3231_p3);

assign and_ln286_fu_3381_p2 = (xor_ln286_fu_3375_p2 & BCi_9_fu_3357_p3);

assign and_ln287_fu_3399_p2 = (xor_ln287_fu_3393_p2 & BCo_9_fu_3363_p3);

assign and_ln288_fu_3417_p2 = (xor_ln288_fu_3411_p2 & BCu_9_fu_3369_p3);

assign and_ln289_fu_3435_p2 = (xor_ln289_fu_3429_p2 & BCa_9_fu_3345_p3);

assign and_ln290_fu_3453_p2 = (xor_ln290_fu_3447_p2 & BCe_9_fu_3351_p3);

assign and_ln302_fu_3501_p2 = (xor_ln302_fu_3495_p2 & BCi_13_fu_3477_p3);

assign and_ln303_fu_3519_p2 = (xor_ln303_fu_3513_p2 & BCo_13_fu_3483_p3);

assign and_ln304_fu_3537_p2 = (xor_ln304_fu_3531_p2 & BCu_13_fu_3489_p3);

assign and_ln305_fu_3555_p2 = (xor_ln305_fu_3549_p2 & BCa_15_fu_3465_p3);

assign and_ln306_fu_3573_p2 = (xor_ln306_fu_3567_p2 & BCe_13_fu_3471_p3);

assign and_ln318_fu_3621_p2 = (xor_ln318_fu_3615_p2 & BCi_14_fu_3597_p3);

assign and_ln319_fu_3639_p2 = (xor_ln319_fu_3633_p2 & BCo_14_fu_3603_p3);

assign and_ln320_fu_3657_p2 = (xor_ln320_fu_3651_p2 & BCu_14_fu_3609_p3);

assign and_ln321_fu_3675_p2 = (xor_ln321_fu_3669_p2 & BCa_16_fu_3585_p3);

assign and_ln322_fu_3693_p2 = (xor_ln322_fu_3687_p2 & BCe_14_fu_3591_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign icmp_ln131_fu_873_p2 = ((ap_sig_allocacmp_round_2 < 5'd24) ? 1'b1 : 1'b0);

assign lshr_ln10_fu_1467_p4 = {{Abo_4_fu_1457_p2[63:36]}};

assign lshr_ln11_fu_1495_p4 = {{Agu_4_fu_1485_p2[63:44]}};

assign lshr_ln12_fu_1523_p4 = {{Aka_4_fu_1513_p2[63:61]}};

assign lshr_ln13_fu_1551_p4 = {{Ame_4_fu_1541_p2[63:19]}};

assign lshr_ln14_fu_1579_p4 = {{Asi_4_fu_1569_p2[63:3]}};

assign lshr_ln16_fu_1723_p4 = {{Agi_4_fu_1713_p2[63:58]}};

assign lshr_ln17_fu_1751_p4 = {{Ako_4_fu_1741_p2[63:39]}};

assign lshr_ln18_fu_1779_p4 = {{Amu_4_fu_1769_p2[63:56]}};

assign lshr_ln19_fu_1807_p4 = {{Asa_4_fu_1797_p2[63:46]}};

assign lshr_ln20_fu_1925_p4 = {{Abu_4_fu_1915_p2[63:37]}};

assign lshr_ln21_fu_1953_p4 = {{Aga_4_fu_1943_p2[63:28]}};

assign lshr_ln22_fu_1981_p4 = {{Ake_4_fu_1971_p2[63:54]}};

assign lshr_ln23_fu_2009_p4 = {{Ami_4_fu_1999_p2[63:49]}};

assign lshr_ln24_fu_2037_p4 = {{Aso_4_fu_2027_p2[63:8]}};

assign lshr_ln25_fu_2155_p4 = {{Abi_4_fu_2145_p2[63:2]}};

assign lshr_ln26_fu_2183_p4 = {{Ago_4_fu_2173_p2[63:9]}};

assign lshr_ln27_fu_2211_p4 = {{Aku_4_fu_2201_p2[63:25]}};

assign lshr_ln28_fu_2239_p4 = {{Ama_4_fu_2229_p2[63:23]}};

assign lshr_ln29_fu_2267_p4 = {{Ase_4_fu_2257_p2[63:62]}};

assign lshr_ln6_fu_1259_p4 = {{Age_4_fu_1249_p2[63:20]}};

assign lshr_ln7_fu_1287_p4 = {{Aki_4_fu_1277_p2[63:21]}};

assign lshr_ln8_fu_1315_p4 = {{Amo_4_fu_1305_p2[63:43]}};

assign lshr_ln9_fu_1343_p4 = {{Asu_4_fu_1333_p2[63:50]}};

assign or_ln10_fu_894_p3 = {{tmp_s_fu_884_p4}, {1'd1}};

assign or_ln1_fu_1151_p3 = {{trunc_ln143_fu_1139_p1}, {tmp_12_fu_1143_p3}};

assign or_ln2_fu_1177_p3 = {{trunc_ln144_fu_1165_p1}, {tmp_13_fu_1169_p3}};

assign or_ln3_fu_1203_p3 = {{trunc_ln145_fu_1191_p1}, {tmp_14_fu_1195_p3}};

assign or_ln4_fu_1229_p3 = {{trunc_ln146_fu_1217_p1}, {tmp_15_fu_1221_p3}};

assign or_ln5_fu_2507_p3 = {{trunc_ln237_fu_2495_p1}, {tmp_17_fu_2499_p3}};

assign or_ln6_fu_2533_p3 = {{trunc_ln238_fu_2521_p1}, {tmp_18_fu_2525_p3}};

assign or_ln7_fu_2559_p3 = {{trunc_ln239_fu_2547_p1}, {tmp_19_fu_2551_p3}};

assign or_ln8_fu_2585_p3 = {{trunc_ln240_fu_2573_p1}, {tmp_20_fu_2577_p3}};

assign or_ln9_fu_2611_p3 = {{trunc_ln241_fu_2599_p1}, {tmp_21_fu_2603_p3}};

assign or_ln_fu_1125_p3 = {{trunc_ln142_fu_1113_p1}, {tmp_fu_1117_p3}};

assign tmp_12_fu_1143_p3 = BCi_fu_1059_p2[32'd63];

assign tmp_13_fu_1169_p3 = BCo_fu_1083_p2[32'd63];

assign tmp_14_fu_1195_p3 = BCu_fu_1107_p2[32'd63];

assign tmp_15_fu_1221_p3 = BCa_fu_1011_p2[32'd63];

assign tmp_16_fu_1697_p3 = Abe_4_fu_1687_p2[32'd63];

assign tmp_17_fu_2499_p3 = BCe_12_fu_2417_p2[32'd63];

assign tmp_18_fu_2525_p3 = BCi_12_fu_2441_p2[32'd63];

assign tmp_19_fu_2551_p3 = BCo_12_fu_2465_p2[32'd63];

assign tmp_20_fu_2577_p3 = BCu_12_fu_2489_p2[32'd63];

assign tmp_21_fu_2603_p3 = BCa_13_fu_2393_p2[32'd63];

assign tmp_fu_1117_p3 = BCe_fu_1035_p2[32'd63];

assign tmp_s_fu_884_p4 = {{ap_sig_allocacmp_round_2[4:1]}};

assign trunc_ln142_fu_1113_p1 = BCe_fu_1035_p2[62:0];

assign trunc_ln143_fu_1139_p1 = BCi_fu_1059_p2[62:0];

assign trunc_ln144_fu_1165_p1 = BCo_fu_1083_p2[62:0];

assign trunc_ln145_fu_1191_p1 = BCu_fu_1107_p2[62:0];

assign trunc_ln146_fu_1217_p1 = BCa_fu_1011_p2[62:0];

assign trunc_ln151_fu_1255_p1 = Age_4_fu_1249_p2[19:0];

assign trunc_ln153_fu_1283_p1 = Aki_4_fu_1277_p2[20:0];

assign trunc_ln155_fu_1311_p1 = Amo_4_fu_1305_p2[42:0];

assign trunc_ln157_fu_1339_p1 = Asu_4_fu_1333_p2[49:0];

assign trunc_ln166_fu_1463_p1 = Abo_4_fu_1457_p2[35:0];

assign trunc_ln168_fu_1491_p1 = Agu_4_fu_1485_p2[43:0];

assign trunc_ln170_fu_1519_p1 = Aka_4_fu_1513_p2[60:0];

assign trunc_ln172_fu_1547_p1 = Ame_4_fu_1541_p2[18:0];

assign trunc_ln174_fu_1575_p1 = Asi_4_fu_1569_p2[2:0];

assign trunc_ln182_fu_1693_p1 = Abe_4_fu_1687_p2[62:0];

assign trunc_ln184_fu_1719_p1 = Agi_4_fu_1713_p2[57:0];

assign trunc_ln186_fu_1747_p1 = Ako_4_fu_1741_p2[38:0];

assign trunc_ln188_fu_1775_p1 = Amu_4_fu_1769_p2[55:0];

assign trunc_ln190_fu_1803_p1 = Asa_4_fu_1797_p2[45:0];

assign trunc_ln198_fu_1921_p1 = Abu_4_fu_1915_p2[36:0];

assign trunc_ln200_fu_1949_p1 = Aga_4_fu_1943_p2[27:0];

assign trunc_ln202_fu_1977_p1 = Ake_4_fu_1971_p2[53:0];

assign trunc_ln204_fu_2005_p1 = Ami_4_fu_1999_p2[48:0];

assign trunc_ln206_fu_2033_p1 = Aso_4_fu_2027_p2[7:0];

assign trunc_ln214_fu_2151_p1 = Abi_4_fu_2145_p2[1:0];

assign trunc_ln216_fu_2179_p1 = Ago_4_fu_2173_p2[8:0];

assign trunc_ln218_fu_2207_p1 = Aku_4_fu_2201_p2[24:0];

assign trunc_ln220_fu_2235_p1 = Ama_4_fu_2229_p2[22:0];

assign trunc_ln222_fu_2263_p1 = Ase_4_fu_2257_p2[61:0];

assign trunc_ln237_fu_2495_p1 = BCe_12_fu_2417_p2[62:0];

assign trunc_ln238_fu_2521_p1 = BCi_12_fu_2441_p2[62:0];

assign trunc_ln239_fu_2547_p1 = BCo_12_fu_2465_p2[62:0];

assign trunc_ln240_fu_2573_p1 = BCu_12_fu_2489_p2[62:0];

assign trunc_ln241_fu_2599_p1 = BCa_13_fu_2393_p2[62:0];

assign trunc_ln246_fu_2637_p1 = Ege_2_fu_2631_p2[19:0];

assign trunc_ln248_fu_2657_p1 = Eki_2_fu_2651_p2[20:0];

assign trunc_ln250_fu_2677_p1 = Emo_2_fu_2671_p2[42:0];

assign trunc_ln252_fu_2697_p1 = Esu_2_fu_2691_p2[49:0];

assign trunc_ln261_fu_2717_p1 = Ebo_2_fu_2711_p2[35:0];

assign trunc_ln263_fu_2737_p1 = Egu_2_fu_2731_p2[43:0];

assign trunc_ln265_fu_2757_p1 = Eka_2_fu_2751_p2[60:0];

assign trunc_ln267_fu_2777_p1 = Eme_2_fu_2771_p2[18:0];

assign trunc_ln269_fu_2797_p1 = Esi_2_fu_2791_p2[2:0];

assign trunc_ln277_fu_2817_p1 = Ebe_2_fu_2811_p2[62:0];

assign trunc_ln279_fu_2835_p1 = Egi_2_fu_2829_p2[57:0];

assign trunc_ln281_fu_2855_p1 = Eko_2_fu_2849_p2[38:0];

assign trunc_ln283_fu_2875_p1 = Emu_2_fu_2869_p2[55:0];

assign trunc_ln285_fu_2895_p1 = Esa_2_fu_2889_p2[45:0];

assign trunc_ln293_fu_2915_p1 = Ebu_2_fu_2909_p2[36:0];

assign trunc_ln295_fu_2935_p1 = Ega_2_fu_2929_p2[27:0];

assign trunc_ln297_fu_2955_p1 = Eke_2_fu_2949_p2[53:0];

assign trunc_ln299_fu_2975_p1 = Emi_2_fu_2969_p2[48:0];

assign trunc_ln301_fu_2995_p1 = Eso_2_fu_2989_p2[7:0];

assign trunc_ln309_fu_3015_p1 = Ebi_2_fu_3009_p2[1:0];

assign trunc_ln311_fu_3035_p1 = Ego_2_fu_3029_p2[8:0];

assign trunc_ln313_fu_3055_p1 = Eku_2_fu_3049_p2[24:0];

assign trunc_ln315_fu_3075_p1 = Ema_2_fu_3069_p2[22:0];

assign trunc_ln317_fu_3095_p1 = Ese_2_fu_3089_p2[61:0];

assign xor_ln135_1_fu_1005_p2 = (ap_sig_allocacmp_Asa_1_load ^ ap_sig_allocacmp_Aga_1_load);

assign xor_ln135_2_fu_999_p2 = (xor_ln135_fu_993_p2 ^ ap_sig_allocacmp_Aba_1_load);

assign xor_ln135_fu_993_p2 = (ap_sig_allocacmp_Ama_1_load ^ ap_sig_allocacmp_Aka_1_load);

assign xor_ln136_1_fu_1029_p2 = (ap_sig_allocacmp_Ase_1_load ^ ap_sig_allocacmp_Age_1_load);

assign xor_ln136_2_fu_1023_p2 = (xor_ln136_fu_1017_p2 ^ ap_sig_allocacmp_Abe_1_load);

assign xor_ln136_fu_1017_p2 = (ap_sig_allocacmp_Ame_1_load ^ ap_sig_allocacmp_Ake_1_load);

assign xor_ln137_1_fu_1047_p2 = (ap_sig_allocacmp_Asi_1_load ^ ap_sig_allocacmp_Agi_1_load);

assign xor_ln137_2_fu_1053_p2 = (xor_ln137_fu_1041_p2 ^ xor_ln137_1_fu_1047_p2);

assign xor_ln137_fu_1041_p2 = (ap_sig_allocacmp_Ami_1_load ^ ap_sig_allocacmp_Aki_1_load);

assign xor_ln138_1_fu_1071_p2 = (ap_sig_allocacmp_Aso_1_load ^ ap_sig_allocacmp_Ago_1_load);

assign xor_ln138_2_fu_1077_p2 = (xor_ln138_fu_1065_p2 ^ xor_ln138_1_fu_1071_p2);

assign xor_ln138_fu_1065_p2 = (ap_sig_allocacmp_Amo_1_load ^ ap_sig_allocacmp_Ako_1_load);

assign xor_ln139_1_fu_1101_p2 = (ap_sig_allocacmp_Amu_1_load ^ ap_sig_allocacmp_Abu_1_load);

assign xor_ln139_2_fu_1095_p2 = (xor_ln139_fu_1089_p2 ^ ap_sig_allocacmp_Asu_1_load);

assign xor_ln139_fu_1089_p2 = (ap_sig_allocacmp_Aku_1_load ^ ap_sig_allocacmp_Agu_1_load);

assign xor_ln159_1_fu_1373_p2 = (KeccakF_RoundConstants_q1 ^ Aba_7_fu_1243_p2);

assign xor_ln159_fu_1361_p2 = (64'd18446744073709551615 ^ BCe_1_fu_1269_p3);

assign xor_ln160_fu_1385_p2 = (64'd18446744073709551615 ^ BCi_1_fu_1297_p3);

assign xor_ln161_fu_1403_p2 = (64'd18446744073709551615 ^ BCo_1_fu_1325_p3);

assign xor_ln162_fu_1421_p2 = (64'd18446744073709551615 ^ BCu_1_fu_1353_p3);

assign xor_ln163_fu_1439_p2 = (64'd18446744073709551615 ^ Aba_7_fu_1243_p2);

assign xor_ln175_fu_1597_p2 = (64'd18446744073709551615 ^ BCe_2_fu_1505_p3);

assign xor_ln176_fu_1615_p2 = (64'd18446744073709551615 ^ BCi_2_fu_1533_p3);

assign xor_ln177_fu_1633_p2 = (64'd18446744073709551615 ^ BCo_2_fu_1561_p3);

assign xor_ln178_fu_1651_p2 = (64'd18446744073709551615 ^ BCu_2_fu_1589_p3);

assign xor_ln179_fu_1669_p2 = (64'd18446744073709551615 ^ BCa_2_fu_1477_p3);

assign xor_ln191_fu_1825_p2 = (64'd18446744073709551615 ^ BCe_3_fu_1733_p3);

assign xor_ln192_fu_1843_p2 = (64'd18446744073709551615 ^ BCi_3_fu_1761_p3);

assign xor_ln193_fu_1861_p2 = (64'd18446744073709551615 ^ BCo_3_fu_1789_p3);

assign xor_ln194_fu_1879_p2 = (64'd18446744073709551615 ^ BCu_3_fu_1817_p3);

assign xor_ln195_fu_1897_p2 = (64'd18446744073709551615 ^ BCa_3_fu_1705_p3);

assign xor_ln207_fu_2055_p2 = (64'd18446744073709551615 ^ BCe_4_fu_1963_p3);

assign xor_ln208_fu_2073_p2 = (64'd18446744073709551615 ^ BCi_4_fu_1991_p3);

assign xor_ln209_fu_2091_p2 = (64'd18446744073709551615 ^ BCo_4_fu_2019_p3);

assign xor_ln210_fu_2109_p2 = (64'd18446744073709551615 ^ BCu_4_fu_2047_p3);

assign xor_ln211_fu_2127_p2 = (64'd18446744073709551615 ^ BCa_4_fu_1935_p3);

assign xor_ln223_fu_2285_p2 = (64'd18446744073709551615 ^ BCe_5_fu_2193_p3);

assign xor_ln224_fu_2303_p2 = (64'd18446744073709551615 ^ BCi_5_fu_2221_p3);

assign xor_ln225_fu_2321_p2 = (64'd18446744073709551615 ^ BCo_5_fu_2249_p3);

assign xor_ln226_fu_2339_p2 = (64'd18446744073709551615 ^ BCu_5_fu_2277_p3);

assign xor_ln227_fu_2357_p2 = (64'd18446744073709551615 ^ BCa_5_fu_2165_p3);

assign xor_ln230_1_fu_2381_p2 = (Ema_fu_2067_p2 ^ Eba_fu_1379_p2);

assign xor_ln230_2_fu_2387_p2 = (xor_ln230_1_fu_2381_p2 ^ Ega_fu_1609_p2);

assign xor_ln230_fu_2375_p2 = (Esa_fu_2297_p2 ^ Eka_fu_1837_p2);

assign xor_ln231_1_fu_2399_p2 = (Ege_fu_1627_p2 ^ Ebe_fu_1397_p2);

assign xor_ln231_2_fu_2411_p2 = (xor_ln231_fu_2405_p2 ^ Ese_fu_2315_p2);

assign xor_ln231_fu_2405_p2 = (Eme_fu_2085_p2 ^ Eke_fu_1855_p2);

assign xor_ln232_1_fu_2423_p2 = (Esi_fu_2333_p2 ^ Emi_fu_2103_p2);

assign xor_ln232_2_fu_2435_p2 = (xor_ln232_fu_2429_p2 ^ Eki_fu_1873_p2);

assign xor_ln232_fu_2429_p2 = (Egi_fu_1645_p2 ^ Ebi_fu_1415_p2);

assign xor_ln233_1_fu_2453_p2 = (Eso_fu_2351_p2 ^ Ebo_fu_1433_p2);

assign xor_ln233_2_fu_2459_p2 = (xor_ln233_1_fu_2453_p2 ^ Emo_fu_2121_p2);

assign xor_ln233_fu_2447_p2 = (Eko_fu_1891_p2 ^ Ego_fu_1663_p2);

assign xor_ln234_1_fu_2477_p2 = (Eku_fu_1909_p2 ^ Egu_fu_1681_p2);

assign xor_ln234_2_fu_2483_p2 = (xor_ln234_1_fu_2477_p2 ^ Emu_fu_2139_p2);

assign xor_ln234_fu_2471_p2 = (Esu_fu_2369_p2 ^ Ebu_fu_1451_p2);

assign xor_ln254_1_fu_3145_p2 = (KeccakF_RoundConstants_load_1_reg_4198 ^ Eba_4_reg_4151);

assign xor_ln254_fu_3133_p2 = (64'd18446744073709551615 ^ BCe_7_fu_3109_p3);

assign xor_ln255_fu_3155_p2 = (64'd18446744073709551615 ^ BCi_7_fu_3115_p3);

assign xor_ln256_fu_3173_p2 = (64'd18446744073709551615 ^ BCo_7_fu_3121_p3);

assign xor_ln257_fu_3191_p2 = (64'd18446744073709551615 ^ BCu_7_fu_3127_p3);

assign xor_ln258_fu_3208_p2 = (64'd18446744073709551615 ^ Eba_4_reg_4151);

assign xor_ln270_fu_3255_p2 = (64'd18446744073709551615 ^ BCe_8_fu_3231_p3);

assign xor_ln271_fu_3273_p2 = (64'd18446744073709551615 ^ BCi_8_fu_3237_p3);

assign xor_ln272_fu_3291_p2 = (64'd18446744073709551615 ^ BCo_8_fu_3243_p3);

assign xor_ln273_fu_3309_p2 = (64'd18446744073709551615 ^ BCu_8_fu_3249_p3);

assign xor_ln274_fu_3327_p2 = (64'd18446744073709551615 ^ BCa_8_fu_3225_p3);

assign xor_ln286_fu_3375_p2 = (64'd18446744073709551615 ^ BCe_9_fu_3351_p3);

assign xor_ln287_fu_3393_p2 = (64'd18446744073709551615 ^ BCi_9_fu_3357_p3);

assign xor_ln288_fu_3411_p2 = (64'd18446744073709551615 ^ BCo_9_fu_3363_p3);

assign xor_ln289_fu_3429_p2 = (64'd18446744073709551615 ^ BCu_9_fu_3369_p3);

assign xor_ln290_fu_3447_p2 = (64'd18446744073709551615 ^ BCa_9_fu_3345_p3);

assign xor_ln302_fu_3495_p2 = (64'd18446744073709551615 ^ BCe_13_fu_3471_p3);

assign xor_ln303_fu_3513_p2 = (64'd18446744073709551615 ^ BCi_13_fu_3477_p3);

assign xor_ln304_fu_3531_p2 = (64'd18446744073709551615 ^ BCo_13_fu_3483_p3);

assign xor_ln305_fu_3549_p2 = (64'd18446744073709551615 ^ BCu_13_fu_3489_p3);

assign xor_ln306_fu_3567_p2 = (64'd18446744073709551615 ^ BCa_15_fu_3465_p3);

assign xor_ln318_fu_3615_p2 = (64'd18446744073709551615 ^ BCe_14_fu_3591_p3);

assign xor_ln319_fu_3633_p2 = (64'd18446744073709551615 ^ BCi_14_fu_3597_p3);

assign xor_ln320_fu_3651_p2 = (64'd18446744073709551615 ^ BCo_14_fu_3603_p3);

assign xor_ln321_fu_3669_p2 = (64'd18446744073709551615 ^ BCu_14_fu_3609_p3);

assign xor_ln322_fu_3687_p2 = (64'd18446744073709551615 ^ BCa_16_fu_3585_p3);

assign zext_ln131_fu_879_p1 = ap_sig_allocacmp_round_2;

assign zext_ln254_fu_902_p1 = or_ln10_fu_894_p3;

endmodule //sha3_256_hw_KeccakF1600_StatePermute_1_Pipeline_state_permute
