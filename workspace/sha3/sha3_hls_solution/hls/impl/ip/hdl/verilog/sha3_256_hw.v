// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sha3_256_hw_sha3_256_hw,hls_ip_2024_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=9,HLS_SYN_DSP=0,HLS_SYN_FF=6655,HLS_SYN_LUT=21566,HLS_VERSION=2024_2}" *)

module sha3_256_hw (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt,
        s_axi_control_r_AWVALID,
        s_axi_control_r_AWREADY,
        s_axi_control_r_AWADDR,
        s_axi_control_r_WVALID,
        s_axi_control_r_WREADY,
        s_axi_control_r_WDATA,
        s_axi_control_r_WSTRB,
        s_axi_control_r_ARVALID,
        s_axi_control_r_ARREADY,
        s_axi_control_r_ARADDR,
        s_axi_control_r_RVALID,
        s_axi_control_r_RREADY,
        s_axi_control_r_RDATA,
        s_axi_control_r_RRESP,
        s_axi_control_r_BVALID,
        s_axi_control_r_BREADY,
        s_axi_control_r_BRESP
);

parameter    ap_ST_fsm_state1 = 104'd1;
parameter    ap_ST_fsm_state2 = 104'd2;
parameter    ap_ST_fsm_state3 = 104'd4;
parameter    ap_ST_fsm_state4 = 104'd8;
parameter    ap_ST_fsm_state5 = 104'd16;
parameter    ap_ST_fsm_state6 = 104'd32;
parameter    ap_ST_fsm_state7 = 104'd64;
parameter    ap_ST_fsm_state8 = 104'd128;
parameter    ap_ST_fsm_state9 = 104'd256;
parameter    ap_ST_fsm_state10 = 104'd512;
parameter    ap_ST_fsm_state11 = 104'd1024;
parameter    ap_ST_fsm_state12 = 104'd2048;
parameter    ap_ST_fsm_state13 = 104'd4096;
parameter    ap_ST_fsm_state14 = 104'd8192;
parameter    ap_ST_fsm_state15 = 104'd16384;
parameter    ap_ST_fsm_state16 = 104'd32768;
parameter    ap_ST_fsm_state17 = 104'd65536;
parameter    ap_ST_fsm_state18 = 104'd131072;
parameter    ap_ST_fsm_state19 = 104'd262144;
parameter    ap_ST_fsm_state20 = 104'd524288;
parameter    ap_ST_fsm_state21 = 104'd1048576;
parameter    ap_ST_fsm_state22 = 104'd2097152;
parameter    ap_ST_fsm_state23 = 104'd4194304;
parameter    ap_ST_fsm_state24 = 104'd8388608;
parameter    ap_ST_fsm_state25 = 104'd16777216;
parameter    ap_ST_fsm_state26 = 104'd33554432;
parameter    ap_ST_fsm_state27 = 104'd67108864;
parameter    ap_ST_fsm_state28 = 104'd134217728;
parameter    ap_ST_fsm_state29 = 104'd268435456;
parameter    ap_ST_fsm_state30 = 104'd536870912;
parameter    ap_ST_fsm_state31 = 104'd1073741824;
parameter    ap_ST_fsm_state32 = 104'd2147483648;
parameter    ap_ST_fsm_state33 = 104'd4294967296;
parameter    ap_ST_fsm_state34 = 104'd8589934592;
parameter    ap_ST_fsm_state35 = 104'd17179869184;
parameter    ap_ST_fsm_state36 = 104'd34359738368;
parameter    ap_ST_fsm_state37 = 104'd68719476736;
parameter    ap_ST_fsm_state38 = 104'd137438953472;
parameter    ap_ST_fsm_state39 = 104'd274877906944;
parameter    ap_ST_fsm_state40 = 104'd549755813888;
parameter    ap_ST_fsm_state41 = 104'd1099511627776;
parameter    ap_ST_fsm_state42 = 104'd2199023255552;
parameter    ap_ST_fsm_state43 = 104'd4398046511104;
parameter    ap_ST_fsm_state44 = 104'd8796093022208;
parameter    ap_ST_fsm_state45 = 104'd17592186044416;
parameter    ap_ST_fsm_state46 = 104'd35184372088832;
parameter    ap_ST_fsm_state47 = 104'd70368744177664;
parameter    ap_ST_fsm_pp0_stage0 = 104'd140737488355328;
parameter    ap_ST_fsm_state52 = 104'd281474976710656;
parameter    ap_ST_fsm_state53 = 104'd562949953421312;
parameter    ap_ST_fsm_state54 = 104'd1125899906842624;
parameter    ap_ST_fsm_state55 = 104'd2251799813685248;
parameter    ap_ST_fsm_state56 = 104'd4503599627370496;
parameter    ap_ST_fsm_state57 = 104'd9007199254740992;
parameter    ap_ST_fsm_state58 = 104'd18014398509481984;
parameter    ap_ST_fsm_state59 = 104'd36028797018963968;
parameter    ap_ST_fsm_state60 = 104'd72057594037927936;
parameter    ap_ST_fsm_state61 = 104'd144115188075855872;
parameter    ap_ST_fsm_state62 = 104'd288230376151711744;
parameter    ap_ST_fsm_state63 = 104'd576460752303423488;
parameter    ap_ST_fsm_state64 = 104'd1152921504606846976;
parameter    ap_ST_fsm_state65 = 104'd2305843009213693952;
parameter    ap_ST_fsm_state66 = 104'd4611686018427387904;
parameter    ap_ST_fsm_state67 = 104'd9223372036854775808;
parameter    ap_ST_fsm_state68 = 104'd18446744073709551616;
parameter    ap_ST_fsm_state69 = 104'd36893488147419103232;
parameter    ap_ST_fsm_state70 = 104'd73786976294838206464;
parameter    ap_ST_fsm_state71 = 104'd147573952589676412928;
parameter    ap_ST_fsm_state72 = 104'd295147905179352825856;
parameter    ap_ST_fsm_state73 = 104'd590295810358705651712;
parameter    ap_ST_fsm_state74 = 104'd1180591620717411303424;
parameter    ap_ST_fsm_state75 = 104'd2361183241434822606848;
parameter    ap_ST_fsm_state76 = 104'd4722366482869645213696;
parameter    ap_ST_fsm_state77 = 104'd9444732965739290427392;
parameter    ap_ST_fsm_state78 = 104'd18889465931478580854784;
parameter    ap_ST_fsm_state79 = 104'd37778931862957161709568;
parameter    ap_ST_fsm_state80 = 104'd75557863725914323419136;
parameter    ap_ST_fsm_state81 = 104'd151115727451828646838272;
parameter    ap_ST_fsm_state82 = 104'd302231454903657293676544;
parameter    ap_ST_fsm_state83 = 104'd604462909807314587353088;
parameter    ap_ST_fsm_state84 = 104'd1208925819614629174706176;
parameter    ap_ST_fsm_state85 = 104'd2417851639229258349412352;
parameter    ap_ST_fsm_state86 = 104'd4835703278458516698824704;
parameter    ap_ST_fsm_state87 = 104'd9671406556917033397649408;
parameter    ap_ST_fsm_state88 = 104'd19342813113834066795298816;
parameter    ap_ST_fsm_state89 = 104'd38685626227668133590597632;
parameter    ap_ST_fsm_state90 = 104'd77371252455336267181195264;
parameter    ap_ST_fsm_state91 = 104'd154742504910672534362390528;
parameter    ap_ST_fsm_state92 = 104'd309485009821345068724781056;
parameter    ap_ST_fsm_state93 = 104'd618970019642690137449562112;
parameter    ap_ST_fsm_state94 = 104'd1237940039285380274899124224;
parameter    ap_ST_fsm_state95 = 104'd2475880078570760549798248448;
parameter    ap_ST_fsm_state96 = 104'd4951760157141521099596496896;
parameter    ap_ST_fsm_state97 = 104'd9903520314283042199192993792;
parameter    ap_ST_fsm_state98 = 104'd19807040628566084398385987584;
parameter    ap_ST_fsm_state99 = 104'd39614081257132168796771975168;
parameter    ap_ST_fsm_state100 = 104'd79228162514264337593543950336;
parameter    ap_ST_fsm_state101 = 104'd158456325028528675187087900672;
parameter    ap_ST_fsm_state102 = 104'd316912650057057350374175801344;
parameter    ap_ST_fsm_state103 = 104'd633825300114114700748351602688;
parameter    ap_ST_fsm_state104 = 104'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state105 = 104'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state106 = 104'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state107 = 104'd10141204801825835211973625643008;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_R_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_R_ADDR_WIDTH = 6;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_CONTROL_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;
input   s_axi_control_r_AWVALID;
output   s_axi_control_r_AWREADY;
input  [C_S_AXI_CONTROL_R_ADDR_WIDTH - 1:0] s_axi_control_r_AWADDR;
input   s_axi_control_r_WVALID;
output   s_axi_control_r_WREADY;
input  [C_S_AXI_CONTROL_R_DATA_WIDTH - 1:0] s_axi_control_r_WDATA;
input  [C_S_AXI_CONTROL_R_WSTRB_WIDTH - 1:0] s_axi_control_r_WSTRB;
input   s_axi_control_r_ARVALID;
output   s_axi_control_r_ARREADY;
input  [C_S_AXI_CONTROL_R_ADDR_WIDTH - 1:0] s_axi_control_r_ARADDR;
output   s_axi_control_r_RVALID;
input   s_axi_control_r_RREADY;
output  [C_S_AXI_CONTROL_R_DATA_WIDTH - 1:0] s_axi_control_r_RDATA;
output  [1:0] s_axi_control_r_RRESP;
output   s_axi_control_r_BVALID;
input   s_axi_control_r_BREADY;
output  [1:0] s_axi_control_r_BRESP;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [103:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] out_r;
wire   [63:0] in_r;
wire   [31:0] inlen;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state39;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln480_reg_864;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state91;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state100;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state107;
reg   [7:0] indvar_flatten_reg_252;
reg   [4:0] i_2_reg_263;
reg   [3:0] i_4_reg_274;
reg   [63:0] r_reg_285;
reg  signed [31:0] inlen_read_reg_754;
reg   [63:0] in_r_read_reg_763;
reg   [63:0] out_r_read_reg_769;
wire   [7:0] trunc_ln4_fu_322_p1;
reg   [7:0] trunc_ln4_reg_775;
wire   [31:0] add_ln479_fu_331_p2;
reg   [31:0] add_ln479_reg_780;
wire    ap_CS_fsm_state2;
wire   [31:0] grp_fu_336_p2;
reg   [31:0] urem_ln479_reg_786;
wire    ap_CS_fsm_state37;
wire   [31:0] empty_fu_357_p3;
reg   [31:0] empty_reg_791;
wire    ap_CS_fsm_state38;
wire   [63:0] zext_ln479_fu_371_p1;
wire   [31:0] select_ln479_fu_380_p3;
reg   [31:0] select_ln479_reg_807;
wire    ap_CS_fsm_state43;
wire   [7:0] trunc_ln479_fu_387_p1;
reg   [7:0] trunc_ln479_reg_813;
wire    ap_CS_fsm_state44;
reg   [24:0] tmp_reg_823;
wire    ap_CS_fsm_state45;
wire   [63:0] mul_ln479_1_cast4_fu_433_p1;
reg   [63:0] mul_ln479_1_cast4_reg_829;
wire    ap_CS_fsm_state46;
wire  signed [33:0] sub_ln467_fu_444_p2;
reg  signed [33:0] sub_ln467_reg_834;
wire  signed [63:0] sext_ln467_1_fu_450_p1;
reg  signed [63:0] sext_ln467_1_reg_839;
wire   [0:0] icmp_ln479_1_fu_457_p2;
wire    ap_CS_fsm_state47;
reg   [63:0] gmem_addr_1_reg_858;
wire   [0:0] icmp_ln480_fu_483_p2;
reg    gmem_0_AWVALID;
wire    gmem_0_AWREADY;
reg   [63:0] gmem_0_AWADDR;
reg   [31:0] gmem_0_AWLEN;
reg    gmem_0_WVALID;
wire    gmem_0_WREADY;
reg    gmem_0_ARVALID;
wire    gmem_0_ARREADY;
reg   [63:0] gmem_0_ARADDR;
reg   [31:0] gmem_0_ARLEN;
wire    gmem_0_RVALID;
reg    gmem_0_RREADY;
wire   [7:0] gmem_0_RDATA;
wire   [10:0] gmem_0_RFIFONUM;
wire    gmem_0_BVALID;
reg    gmem_0_BREADY;
reg    ap_block_state49_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln480_reg_864_pp0_iter1_reg;
reg   [0:0] icmp_ln480_reg_864_pp0_iter2_reg;
wire   [7:0] add_ln480_fu_489_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln26_fu_495_p2;
reg   [0:0] icmp_ln26_reg_873;
wire   [4:0] select_ln480_fu_515_p3;
reg   [4:0] select_ln480_reg_878;
reg   [7:0] gmem_addr_read_reg_883;
wire   [2:0] trunc_ln27_fu_528_p1;
reg   [2:0] trunc_ln27_reg_888;
wire   [3:0] add_ln26_fu_532_p2;
reg   [3:0] add_ln26_reg_893;
wire   [0:0] icmp_ln26_1_fu_538_p2;
reg   [0:0] icmp_ln26_1_reg_898;
reg   [0:0] icmp_ln26_1_reg_898_pp0_iter2_reg;
reg   [4:0] s_addr_reg_902;
reg   [4:0] s_addr_reg_902_pp0_iter2_reg;
wire   [63:0] r_1_fu_571_p2;
reg   [63:0] r_1_reg_908;
reg    ap_enable_reg_pp0_iter2;
reg   [63:0] s_load_3_reg_914;
wire   [7:0] grp_fu_473_p2;
reg   [7:0] urem_ln488_reg_919;
wire    ap_CS_fsm_state88;
wire   [7:0] i_3_fu_600_p2;
reg   [7:0] i_3_reg_924;
wire    ap_CS_fsm_state89;
wire   [2:0] trunc_ln490_fu_623_p1;
reg   [2:0] trunc_ln490_reg_933;
wire    ap_CS_fsm_state90;
reg   [4:0] lshr_ln_reg_938;
wire   [2:0] trunc_ln492_fu_642_p1;
reg   [2:0] trunc_ln492_reg_943;
reg   [4:0] s_addr_2_reg_948;
reg   [7:0] gmem_addr_1_read_reg_954;
reg   [4:0] s_addr_1_reg_959;
wire   [63:0] xor_ln490_fu_683_p2;
reg   [63:0] xor_ln490_reg_965;
wire    ap_CS_fsm_state92;
wire   [63:0] xor_ln492_fu_710_p2;
reg   [63:0] xor_ln492_reg_970;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state96;
reg   [0:0] bit_sel_reg_981;
wire    ap_CS_fsm_state97;
wire   [62:0] trunc_ln493_fu_724_p1;
reg   [62:0] trunc_ln493_reg_986;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_condition_pp0_exit_iter2_state50;
reg    ap_enable_reg_pp0_iter3;
reg   [4:0] s_address0;
reg    s_ce0;
reg    s_we0;
reg   [63:0] s_d0;
wire   [63:0] s_q0;
reg   [4:0] s_address1;
reg    s_ce1;
reg    s_we1;
reg   [63:0] s_d1;
wire   [63:0] s_q1;
wire    grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_start;
wire    grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_done;
wire    grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_idle;
wire    grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_ready;
wire   [4:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_s_address0;
wire    grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_s_ce0;
wire    grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_s_we0;
wire   [63:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_s_d0;
wire    grp_KeccakF1600_StatePermute_fu_302_ap_start;
wire    grp_KeccakF1600_StatePermute_fu_302_ap_done;
wire    grp_KeccakF1600_StatePermute_fu_302_ap_idle;
wire    grp_KeccakF1600_StatePermute_fu_302_ap_ready;
wire   [4:0] grp_KeccakF1600_StatePermute_fu_302_state_address0;
wire    grp_KeccakF1600_StatePermute_fu_302_state_ce0;
wire    grp_KeccakF1600_StatePermute_fu_302_state_we0;
wire   [63:0] grp_KeccakF1600_StatePermute_fu_302_state_d0;
wire   [4:0] grp_KeccakF1600_StatePermute_fu_302_state_address1;
wire    grp_KeccakF1600_StatePermute_fu_302_state_ce1;
wire    grp_KeccakF1600_StatePermute_fu_302_state_we1;
wire   [63:0] grp_KeccakF1600_StatePermute_fu_302_state_d1;
wire    grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_start;
wire    grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_done;
wire    grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_idle;
wire    grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_ready;
wire    grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWVALID;
wire   [63:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWADDR;
wire   [0:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWID;
wire   [31:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWLEN;
wire   [2:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWSIZE;
wire   [1:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWBURST;
wire   [1:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWLOCK;
wire   [3:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWCACHE;
wire   [2:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWPROT;
wire   [3:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWQOS;
wire   [3:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWREGION;
wire   [0:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWUSER;
wire    grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_WVALID;
wire   [7:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_WDATA;
wire   [0:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_WSTRB;
wire    grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_WLAST;
wire   [0:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_WID;
wire   [0:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_WUSER;
wire    grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARVALID;
wire   [63:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARADDR;
wire   [0:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARID;
wire   [31:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARLEN;
wire   [2:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARSIZE;
wire   [1:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARBURST;
wire   [1:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARLOCK;
wire   [3:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARCACHE;
wire   [2:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARPROT;
wire   [3:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARQOS;
wire   [3:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARREGION;
wire   [0:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARUSER;
wire    grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_RREADY;
wire    grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_BREADY;
wire   [4:0] grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_s_address0;
wire    grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_s_ce0;
reg   [4:0] ap_phi_mux_i_2_phi_fu_267_p4;
reg   [3:0] ap_phi_mux_i_4_phi_fu_278_p4;
reg   [63:0] ap_phi_mux_r_phi_fu_289_p4;
reg    grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_start_reg;
wire    s_we0_out;
reg    grp_KeccakF1600_StatePermute_fu_302_ap_start_reg;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state99;
wire    ap_CS_fsm_state53;
wire    s_we1_out;
reg    grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_start_reg;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state102;
wire   [63:0] zext_ln480_fu_523_p1;
wire   [63:0] zext_ln492_1_fu_654_p1;
wire   [0:0] icmp_ln488_fu_612_p2;
wire   [63:0] zext_ln490_2_fu_659_p1;
wire   [63:0] add_ln488_fu_463_p2;
reg   [31:0] j_fu_154;
wire   [31:0] j_3_fu_582_p2;
reg   [31:0] i_fu_162;
wire   [31:0] i_6_fu_617_p2;
reg    s_ce1_local;
reg   [4:0] s_address1_local;
reg    s_we0_local;
reg   [63:0] s_d0_local;
wire   [63:0] xor_ln482_fu_577_p2;
reg    s_ce0_local;
reg   [4:0] s_address0_local;
wire    ap_CS_fsm_state93;
reg    s_we1_local;
wire    ap_CS_fsm_state95;
reg   [63:0] s_d1_local;
wire    ap_CS_fsm_state98;
wire   [63:0] xor_ln_fu_733_p3;
wire   [31:0] grp_fu_317_p0;
wire   [33:0] grp_fu_317_p1;
wire  signed [31:0] trunc_ln4_fu_322_p0;
wire   [31:0] grp_fu_336_p0;
wire   [8:0] grp_fu_336_p1;
wire   [31:0] sub_ln479_fu_347_p2;
wire   [0:0] icmp_ln479_fu_342_p2;
wire   [31:0] add_ln479_1_fu_351_p2;
wire   [0:0] empty_30_fu_375_p2;
wire   [64:0] grp_fu_317_p2;
wire   [31:0] tmp_1_fu_405_p3;
wire   [27:0] tmp_2_fu_416_p3;
wire   [32:0] zext_ln479_2_fu_412_p1;
wire   [32:0] zext_ln479_3_fu_423_p1;
wire   [32:0] add_ln479_2_fu_427_p2;
wire  signed [33:0] sext_ln467_fu_441_p1;
wire   [33:0] mul_ln479_1_cast_fu_437_p1;
wire   [8:0] grp_fu_473_p1;
wire   [4:0] add_ln480_1_fu_509_p2;
wire   [3:0] select_ln481_fu_501_p3;
wire   [5:0] shl_ln_fu_554_p3;
wire   [63:0] zext_ln27_fu_551_p1;
wire   [63:0] zext_ln27_1_fu_561_p1;
wire   [63:0] shl_ln27_fu_565_p2;
wire   [63:0] select_ln481_1_fu_544_p3;
wire   [7:0] trunc_ln470_fu_592_p1;
wire   [7:0] sub_ln470_fu_595_p2;
wire   [33:0] zext_ln488_fu_608_p1;
wire   [4:0] lshr_ln1_fu_645_p4;
wire   [5:0] shl_ln1_fu_666_p3;
wire   [63:0] zext_ln490_fu_663_p1;
wire   [63:0] zext_ln490_1_fu_673_p1;
wire   [63:0] shl_ln490_fu_677_p2;
wire   [5:0] shl_ln2_fu_689_p3;
wire   [58:0] zext_ln492_fu_696_p1;
wire   [58:0] shl_ln492_fu_700_p2;
wire   [63:0] zext_ln492_2_fu_706_p1;
wire   [0:0] xor_ln493_fu_728_p2;
reg    grp_fu_336_ap_start;
wire    grp_fu_336_ap_done;
reg    grp_fu_336_ce;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
reg    grp_fu_473_ap_start;
wire    grp_fu_473_ap_done;
reg    grp_fu_473_ce;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state87;
reg   [103:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
reg    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state52_blk;
reg    ap_ST_fsm_state53_blk;
reg    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
reg    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
reg    ap_ST_fsm_state100_blk;
wire    ap_ST_fsm_state101_blk;
reg    ap_ST_fsm_state102_blk;
wire    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
wire    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
reg    ap_ST_fsm_state107_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [64:0] grp_fu_317_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 104'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_start_reg = 1'b0;
#0 grp_KeccakF1600_StatePermute_fu_302_ap_start_reg = 1'b0;
#0 grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_start_reg = 1'b0;
#0 j_fu_154 = 32'd0;
#0 i_fu_162 = 32'd0;
end

sha3_256_hw_s_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(s_address0),
    .ce0(s_ce0),
    .we0(s_we0),
    .d0(s_d0),
    .q0(s_q0),
    .address1(s_address1),
    .ce1(s_ce1),
    .we1(s_we1),
    .d1(s_d1),
    .q1(s_q1)
);

sha3_256_hw_sha3_256_hw_Pipeline_VITIS_LOOP_472_1 grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_start),
    .ap_done(grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_done),
    .ap_idle(grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_idle),
    .ap_ready(grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_ready),
    .s_address0(grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_s_address0),
    .s_ce0(grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_s_ce0),
    .s_we0(grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_s_we0),
    .s_d0(grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_s_d0)
);

sha3_256_hw_KeccakF1600_StatePermute grp_KeccakF1600_StatePermute_fu_302(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_KeccakF1600_StatePermute_fu_302_ap_start),
    .ap_done(grp_KeccakF1600_StatePermute_fu_302_ap_done),
    .ap_idle(grp_KeccakF1600_StatePermute_fu_302_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePermute_fu_302_ap_ready),
    .state_address0(grp_KeccakF1600_StatePermute_fu_302_state_address0),
    .state_ce0(grp_KeccakF1600_StatePermute_fu_302_state_ce0),
    .state_we0(grp_KeccakF1600_StatePermute_fu_302_state_we0),
    .state_d0(grp_KeccakF1600_StatePermute_fu_302_state_d0),
    .state_q0(s_q0),
    .state_address1(grp_KeccakF1600_StatePermute_fu_302_state_address1),
    .state_ce1(grp_KeccakF1600_StatePermute_fu_302_state_ce1),
    .state_we1(grp_KeccakF1600_StatePermute_fu_302_state_we1),
    .state_d1(grp_KeccakF1600_StatePermute_fu_302_state_d1),
    .state_q1(s_q1)
);

sha3_256_hw_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1 grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_start),
    .ap_done(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_done),
    .ap_idle(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_idle),
    .ap_ready(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_ready),
    .m_axi_gmem_0_AWVALID(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWVALID),
    .m_axi_gmem_0_AWREADY(gmem_0_AWREADY),
    .m_axi_gmem_0_AWADDR(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWADDR),
    .m_axi_gmem_0_AWID(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWID),
    .m_axi_gmem_0_AWLEN(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWLEN),
    .m_axi_gmem_0_AWSIZE(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWSIZE),
    .m_axi_gmem_0_AWBURST(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWBURST),
    .m_axi_gmem_0_AWLOCK(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWLOCK),
    .m_axi_gmem_0_AWCACHE(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWCACHE),
    .m_axi_gmem_0_AWPROT(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWPROT),
    .m_axi_gmem_0_AWQOS(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWQOS),
    .m_axi_gmem_0_AWREGION(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWREGION),
    .m_axi_gmem_0_AWUSER(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWUSER),
    .m_axi_gmem_0_WVALID(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_WVALID),
    .m_axi_gmem_0_WREADY(gmem_0_WREADY),
    .m_axi_gmem_0_WDATA(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_WDATA),
    .m_axi_gmem_0_WSTRB(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_WSTRB),
    .m_axi_gmem_0_WLAST(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_WLAST),
    .m_axi_gmem_0_WID(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_WID),
    .m_axi_gmem_0_WUSER(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_WUSER),
    .m_axi_gmem_0_ARVALID(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARVALID),
    .m_axi_gmem_0_ARREADY(1'b0),
    .m_axi_gmem_0_ARADDR(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARADDR),
    .m_axi_gmem_0_ARID(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARID),
    .m_axi_gmem_0_ARLEN(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARLEN),
    .m_axi_gmem_0_ARSIZE(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARSIZE),
    .m_axi_gmem_0_ARBURST(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARBURST),
    .m_axi_gmem_0_ARLOCK(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARLOCK),
    .m_axi_gmem_0_ARCACHE(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARCACHE),
    .m_axi_gmem_0_ARPROT(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARPROT),
    .m_axi_gmem_0_ARQOS(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARQOS),
    .m_axi_gmem_0_ARREGION(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARREGION),
    .m_axi_gmem_0_ARUSER(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_ARUSER),
    .m_axi_gmem_0_RVALID(1'b0),
    .m_axi_gmem_0_RREADY(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_RREADY),
    .m_axi_gmem_0_RDATA(8'd0),
    .m_axi_gmem_0_RLAST(1'b0),
    .m_axi_gmem_0_RID(1'd0),
    .m_axi_gmem_0_RFIFONUM(11'd0),
    .m_axi_gmem_0_RUSER(1'd0),
    .m_axi_gmem_0_RRESP(2'd0),
    .m_axi_gmem_0_BVALID(gmem_0_BVALID),
    .m_axi_gmem_0_BREADY(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_BREADY),
    .m_axi_gmem_0_BRESP(2'd0),
    .m_axi_gmem_0_BID(1'd0),
    .m_axi_gmem_0_BUSER(1'd0),
    .out_r(out_r_read_reg_769),
    .s_address0(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_s_address0),
    .s_ce0(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_s_ce0),
    .s_q0(s_q0)
);

sha3_256_hw_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .inlen(inlen),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

sha3_256_hw_control_r_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_R_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_R_DATA_WIDTH ))
control_r_s_axi_U(
    .AWVALID(s_axi_control_r_AWVALID),
    .AWREADY(s_axi_control_r_AWREADY),
    .AWADDR(s_axi_control_r_AWADDR),
    .WVALID(s_axi_control_r_WVALID),
    .WREADY(s_axi_control_r_WREADY),
    .WDATA(s_axi_control_r_WDATA),
    .WSTRB(s_axi_control_r_WSTRB),
    .ARVALID(s_axi_control_r_ARVALID),
    .ARREADY(s_axi_control_r_ARREADY),
    .ARADDR(s_axi_control_r_ARADDR),
    .RVALID(s_axi_control_r_RVALID),
    .RREADY(s_axi_control_r_RREADY),
    .RDATA(s_axi_control_r_RDATA),
    .RRESP(s_axi_control_r_RRESP),
    .BVALID(s_axi_control_r_BVALID),
    .BREADY(s_axi_control_r_BREADY),
    .BRESP(s_axi_control_r_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .out_r(out_r),
    .in_r(in_r)
);

sha3_256_hw_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 7 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ),
    .CH0_USER_RFIFONUM_WIDTH( 11 ),
    .CH0_USER_DW( 8 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(gmem_0_ARVALID),
    .I_CH0_ARREADY(gmem_0_ARREADY),
    .I_CH0_ARADDR(gmem_0_ARADDR),
    .I_CH0_ARLEN(gmem_0_ARLEN),
    .I_CH0_RVALID(gmem_0_RVALID),
    .I_CH0_RREADY(gmem_0_RREADY),
    .I_CH0_RDATA(gmem_0_RDATA),
    .I_CH0_RFIFONUM(gmem_0_RFIFONUM),
    .I_CH0_AWVALID(gmem_0_AWVALID),
    .I_CH0_AWREADY(gmem_0_AWREADY),
    .I_CH0_AWADDR(gmem_0_AWADDR),
    .I_CH0_AWLEN(gmem_0_AWLEN),
    .I_CH0_WVALID(gmem_0_WVALID),
    .I_CH0_WREADY(gmem_0_WREADY),
    .I_CH0_WDATA(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_WDATA),
    .I_CH0_WSTRB(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_WSTRB),
    .I_CH0_BVALID(gmem_0_BVALID),
    .I_CH0_BREADY(gmem_0_BREADY)
);

sha3_256_hw_mul_32ns_34ns_65_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 65 ))
mul_32ns_34ns_65_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_317_p0),
    .din1(grp_fu_317_p1),
    .ce(1'b1),
    .dout(grp_fu_317_p2)
);

sha3_256_hw_urem_32ns_9ns_32_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 32 ))
urem_32ns_9ns_32_36_seq_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_336_ap_start),
    .done(grp_fu_336_ap_done),
    .din0(grp_fu_336_p0),
    .din1(grp_fu_336_p1),
    .ce(grp_fu_336_ce),
    .dout(grp_fu_336_p2)
);

sha3_256_hw_urem_32ns_9ns_8_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 8 ))
urem_32ns_9ns_8_36_seq_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_473_ap_start),
    .done(grp_fu_473_ap_done),
    .din0(select_ln479_reg_807),
    .din1(grp_fu_473_p1),
    .ce(grp_fu_473_ce),
    .dout(grp_fu_473_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln479_1_fu_457_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if (((1'b1 == ap_condition_pp0_exit_iter2_state50) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_enable_reg_pp0_iter2 <= 1'b0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter2_state50) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((icmp_ln479_1_fu_457_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_KeccakF1600_StatePermute_fu_302_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state52))) begin
            grp_KeccakF1600_StatePermute_fu_302_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePermute_fu_302_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePermute_fu_302_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_start_reg <= 1'b1;
        end else if ((grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_ready == 1'b1)) begin
            grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state101)) begin
            grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_start_reg <= 1'b1;
        end else if ((grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_ready == 1'b1)) begin
            grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln480_reg_864_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_2_reg_263 <= select_ln480_reg_878;
    end else if (((icmp_ln479_1_fu_457_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        i_2_reg_263 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln480_reg_864_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_4_reg_274 <= add_ln26_reg_893;
    end else if (((icmp_ln479_1_fu_457_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        i_4_reg_274 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln479_1_fu_457_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        i_fu_162 <= 32'd0;
    end else if (((icmp_ln488_fu_612_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state90))) begin
        i_fu_162 <= i_6_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln480_fu_483_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_252 <= add_ln480_fu_489_p2;
    end else if (((icmp_ln479_1_fu_457_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        indvar_flatten_reg_252 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_fu_154 <= inlen;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        j_fu_154 <= j_3_fu_582_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln480_reg_864_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_reg_285 <= r_1_reg_908;
    end else if (((icmp_ln479_1_fu_457_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        r_reg_285 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        add_ln26_reg_893 <= add_ln26_fu_532_p2;
        select_ln480_reg_878 <= select_ln480_fu_515_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln479_reg_780 <= add_ln479_fu_331_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        bit_sel_reg_981 <= s_q0[64'd63];
        trunc_ln493_reg_986 <= trunc_ln493_fu_724_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        empty_reg_791 <= empty_fu_357_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        gmem_addr_1_read_reg_954 <= gmem_0_RDATA;
        s_addr_1_reg_959 <= zext_ln490_2_fu_659_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        gmem_addr_1_reg_858 <= add_ln488_fu_463_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_addr_read_reg_883 <= gmem_0_RDATA;
        icmp_ln26_1_reg_898 <= icmp_ln26_1_fu_538_p2;
        icmp_ln26_reg_873 <= icmp_ln26_fu_495_p2;
        icmp_ln480_reg_864 <= icmp_ln480_fu_483_p2;
        icmp_ln480_reg_864_pp0_iter1_reg <= icmp_ln480_reg_864;
        s_addr_reg_902 <= zext_ln480_fu_523_p1;
        trunc_ln27_reg_888 <= trunc_ln27_fu_528_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        i_3_reg_924 <= i_3_fu_600_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln26_1_reg_898_pp0_iter2_reg <= icmp_ln26_1_reg_898;
        icmp_ln480_reg_864_pp0_iter2_reg <= icmp_ln480_reg_864_pp0_iter1_reg;
        s_addr_reg_902_pp0_iter2_reg <= s_addr_reg_902;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        in_r_read_reg_763 <= in_r;
        inlen_read_reg_754 <= inlen;
        out_r_read_reg_769 <= out_r;
        trunc_ln4_reg_775 <= trunc_ln4_fu_322_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        lshr_ln_reg_938 <= {{i_fu_162[7:3]}};
        s_addr_2_reg_948 <= zext_ln492_1_fu_654_p1;
        trunc_ln490_reg_933 <= trunc_ln490_fu_623_p1;
        trunc_ln492_reg_943 <= trunc_ln492_fu_642_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        mul_ln479_1_cast4_reg_829[32 : 3] <= mul_ln479_1_cast4_fu_433_p1[32 : 3];
        sext_ln467_1_reg_839 <= sext_ln467_1_fu_450_p1;
        sub_ln467_reg_834 <= sub_ln467_fu_444_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_1_reg_908 <= r_1_fu_571_p2;
        s_load_3_reg_914 <= s_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        select_ln479_reg_807 <= select_ln479_fu_380_p3;
        trunc_ln479_reg_813 <= trunc_ln479_fu_387_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        tmp_reg_823 <= {{grp_fu_317_p2[64:40]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        urem_ln479_reg_786 <= grp_fu_336_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        urem_ln488_reg_919 <= grp_fu_473_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        xor_ln490_reg_965 <= xor_ln490_fu_683_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        xor_ln492_reg_970 <= xor_ln492_fu_710_p2;
    end
end

always @ (*) begin
    if (((grp_KeccakF1600_StatePermute_fu_302_ap_done == 1'b0) | (gmem_0_AWREADY == 1'b0))) begin
        ap_ST_fsm_state100_blk = 1'b1;
    end else begin
        ap_ST_fsm_state100_blk = 1'b0;
    end
end

assign ap_ST_fsm_state101_blk = 1'b0;

always @ (*) begin
    if ((grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_done == 1'b0)) begin
        ap_ST_fsm_state102_blk = 1'b1;
    end else begin
        ap_ST_fsm_state102_blk = 1'b0;
    end
end

assign ap_ST_fsm_state103_blk = 1'b0;

assign ap_ST_fsm_state104_blk = 1'b0;

assign ap_ST_fsm_state105_blk = 1'b0;

assign ap_ST_fsm_state106_blk = 1'b0;

always @ (*) begin
    if ((gmem_0_BVALID == 1'b0)) begin
        ap_ST_fsm_state107_blk = 1'b1;
    end else begin
        ap_ST_fsm_state107_blk = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

always @ (*) begin
    if ((gmem_0_ARREADY == 1'b0)) begin
        ap_ST_fsm_state39_blk = 1'b1;
    end else begin
        ap_ST_fsm_state39_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

always @ (*) begin
    if ((grp_KeccakF1600_StatePermute_fu_302_ap_done == 1'b0)) begin
        ap_ST_fsm_state53_blk = 1'b1;
    end else begin
        ap_ST_fsm_state53_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_0_ARREADY == 1'b0)) begin
        ap_ST_fsm_state54_blk = 1'b1;
    end else begin
        ap_ST_fsm_state54_blk = 1'b0;
    end
end

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

always @ (*) begin
    if ((gmem_0_RVALID == 1'b0)) begin
        ap_ST_fsm_state91_blk = 1'b1;
    end else begin
        ap_ST_fsm_state91_blk = 1'b0;
    end
end

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state50 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state50 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln480_fu_483_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state107))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln480_reg_864_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_2_phi_fu_267_p4 = select_ln480_reg_878;
    end else begin
        ap_phi_mux_i_2_phi_fu_267_p4 = i_2_reg_263;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln480_reg_864_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_4_phi_fu_278_p4 = add_ln26_reg_893;
    end else begin
        ap_phi_mux_i_4_phi_fu_278_p4 = i_4_reg_274;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln480_reg_864_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_r_phi_fu_289_p4 = r_1_reg_908;
    end else begin
        ap_phi_mux_r_phi_fu_289_p4 = r_reg_285;
    end
end

always @ (*) begin
    if (((gmem_0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state107))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((gmem_0_ARREADY == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state54)) begin
            gmem_0_ARADDR = gmem_addr_1_reg_858;
        end else if ((1'b1 == ap_CS_fsm_state39)) begin
            gmem_0_ARADDR = in_r_read_reg_763;
        end else begin
            gmem_0_ARADDR = 'bx;
        end
    end else begin
        gmem_0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((gmem_0_ARREADY == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state54)) begin
            gmem_0_ARLEN = sext_ln467_1_reg_839;
        end else if ((1'b1 == ap_CS_fsm_state39)) begin
            gmem_0_ARLEN = zext_ln479_fu_371_p1;
        end else begin
            gmem_0_ARLEN = 'bx;
        end
    end else begin
        gmem_0_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((gmem_0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state54)) | ((gmem_0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state39)))) begin
        gmem_0_ARVALID = 1'b1;
    end else begin
        gmem_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((grp_KeccakF1600_StatePermute_fu_302_ap_done == 1'b0) | (gmem_0_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state100))) begin
        gmem_0_AWADDR = out_r_read_reg_769;
    end else if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101))) begin
        gmem_0_AWADDR = grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWADDR;
    end else begin
        gmem_0_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((~((grp_KeccakF1600_StatePermute_fu_302_ap_done == 1'b0) | (gmem_0_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state100))) begin
        gmem_0_AWLEN = 64'd32;
    end else if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101))) begin
        gmem_0_AWLEN = grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWLEN;
    end else begin
        gmem_0_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((~((grp_KeccakF1600_StatePermute_fu_302_ap_done == 1'b0) | (gmem_0_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state100))) begin
        gmem_0_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101))) begin
        gmem_0_AWVALID = grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_AWVALID;
    end else begin
        gmem_0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state107))) begin
        gmem_0_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101))) begin
        gmem_0_BREADY = grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_BREADY;
    end else begin
        gmem_0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((gmem_0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state91)) | ((icmp_ln480_reg_864 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        gmem_0_RREADY = 1'b1;
    end else begin
        gmem_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101))) begin
        gmem_0_WVALID = grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_m_axi_gmem_0_WVALID;
    end else begin
        gmem_0_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state39))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state91) | ((icmp_ln480_reg_864 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_336_ap_start = 1'b1;
    end else begin
        grp_fu_336_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) 
    | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_336_ce = 1'b1;
    end else begin
        grp_fu_336_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln479_1_fu_457_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        grp_fu_473_ap_start = 1'b1;
    end else begin
        grp_fu_473_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 
    == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) begin
        grp_fu_473_ce = 1'b1;
    end else begin
        grp_fu_473_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        s_address0 = grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_s_address0;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state100))) begin
        s_address0 = grp_KeccakF1600_StatePermute_fu_302_state_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s_address0 = grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_s_address0;
    end else begin
        s_address0 = s_address0_local;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        s_address0_local = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        s_address0_local = s_addr_1_reg_959;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        s_address0_local = zext_ln492_1_fu_654_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        s_address0_local = s_addr_reg_902_pp0_iter2_reg;
    end else begin
        s_address0_local = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state100))) begin
        s_address1 = grp_KeccakF1600_StatePermute_fu_302_state_address1;
    end else begin
        s_address1 = s_address1_local;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        s_address1_local = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        s_address1_local = s_addr_2_reg_948;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        s_address1_local = zext_ln490_2_fu_659_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        s_address1_local = zext_ln480_fu_523_p1;
    end else begin
        s_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        s_ce0 = grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_s_ce0;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state100))) begin
        s_ce0 = grp_KeccakF1600_StatePermute_fu_302_state_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s_ce0 = grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_s_ce0;
    end else begin
        s_ce0 = s_ce0_local;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state90) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_ce0_local = 1'b1;
    end else begin
        s_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state100))) begin
        s_ce1 = grp_KeccakF1600_StatePermute_fu_302_state_ce1;
    end else begin
        s_ce1 = s_ce1_local;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state95) | ((gmem_0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state91)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        s_ce1_local = 1'b1;
    end else begin
        s_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state100))) begin
        s_d0 = grp_KeccakF1600_StatePermute_fu_302_state_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s_d0 = grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_s_d0;
    end else begin
        s_d0 = s_d0_local;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        s_d0_local = xor_ln490_reg_965;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        s_d0_local = xor_ln482_fu_577_p2;
    end else begin
        s_d0_local = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state100))) begin
        s_d1 = grp_KeccakF1600_StatePermute_fu_302_state_d1;
    end else begin
        s_d1 = s_d1_local;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        s_d1_local = xor_ln_fu_733_p3;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        s_d1_local = xor_ln492_reg_970;
    end else begin
        s_d1_local = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state100))) begin
        s_we0 = grp_KeccakF1600_StatePermute_fu_302_state_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s_we0 = grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_s_we0;
    end else begin
        s_we0 = (s_we0_out | 1'b0);
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln26_1_reg_898_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_we0_local = 1'b1;
    end else begin
        s_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state100))) begin
        s_we1 = grp_KeccakF1600_StatePermute_fu_302_state_we1;
    end else begin
        s_we1 = (s_we1_out | 1'b0);
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state95))) begin
        s_we1_local = 1'b1;
    end else begin
        s_we1_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((gmem_0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((icmp_ln479_1_fu_457_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_condition_pp0_exit_iter2_state50) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b1 == ap_condition_pp0_exit_iter2_state50) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((grp_KeccakF1600_StatePermute_fu_302_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            if (((gmem_0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            if (((icmp_ln488_fu_612_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state90))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end
        end
        ap_ST_fsm_state91 : begin
            if (((gmem_0_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state91))) begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            if ((~((grp_KeccakF1600_StatePermute_fu_302_ap_done == 1'b0) | (gmem_0_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state100))) begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            if (((grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state102))) begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            if (((gmem_0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state107))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln26_fu_532_p2 = (select_ln481_fu_501_p3 + 4'd1);

assign add_ln479_1_fu_351_p2 = (sub_ln479_fu_347_p2 + 32'd136);

assign add_ln479_2_fu_427_p2 = (zext_ln479_2_fu_412_p1 + zext_ln479_3_fu_423_p1);

assign add_ln479_fu_331_p2 = ($signed(inlen_read_reg_754) + $signed(32'd4294967160));

assign add_ln480_1_fu_509_p2 = (ap_phi_mux_i_2_phi_fu_267_p4 + 5'd1);

assign add_ln480_fu_489_p2 = (indvar_flatten_reg_252 + 8'd1);

assign add_ln488_fu_463_p2 = (mul_ln479_1_cast4_reg_829 + in_r_read_reg_763);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd98];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd95];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state49_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state49_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_state49_pp0_stage0_iter1 = ((gmem_0_RVALID == 1'b0) & (icmp_ln480_reg_864 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_30_fu_375_p2 = ((inlen_read_reg_754 < 32'd135) ? 1'b1 : 1'b0);

assign empty_fu_357_p3 = ((icmp_ln479_fu_342_p2[0:0] == 1'b1) ? add_ln479_1_fu_351_p2 : 32'd0);

assign grp_KeccakF1600_StatePermute_fu_302_ap_start = grp_KeccakF1600_StatePermute_fu_302_ap_start_reg;

assign grp_fu_317_p0 = grp_fu_317_p00;

assign grp_fu_317_p00 = select_ln479_reg_807;

assign grp_fu_317_p1 = 65'd8084644322;

assign grp_fu_336_p0 = ($signed(inlen_read_reg_754) + $signed(32'd4294967160));

assign grp_fu_336_p1 = 32'd136;

assign grp_fu_473_p1 = 32'd136;

assign grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_start = grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_296_ap_start_reg;

assign grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_start = grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_309_ap_start_reg;

assign i_3_fu_600_p2 = (sub_ln470_fu_595_p2 + trunc_ln4_reg_775);

assign i_6_fu_617_p2 = (i_fu_162 + 32'd1);

assign icmp_ln26_1_fu_538_p2 = ((add_ln26_fu_532_p2 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_495_p2 = ((ap_phi_mux_i_4_phi_fu_278_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln479_1_fu_457_p2 = ((j_fu_154 > 32'd135) ? 1'b1 : 1'b0);

assign icmp_ln479_fu_342_p2 = ((inlen_read_reg_754 > 32'd135) ? 1'b1 : 1'b0);

assign icmp_ln480_fu_483_p2 = ((indvar_flatten_reg_252 == 8'd136) ? 1'b1 : 1'b0);

assign icmp_ln488_fu_612_p2 = ((sub_ln467_reg_834 > zext_ln488_fu_608_p1) ? 1'b1 : 1'b0);

assign j_3_fu_582_p2 = ($signed(j_fu_154) + $signed(32'd4294967160));

assign lshr_ln1_fu_645_p4 = {{i_3_reg_924[7:3]}};

assign mul_ln479_1_cast4_fu_433_p1 = add_ln479_2_fu_427_p2;

assign mul_ln479_1_cast_fu_437_p1 = add_ln479_2_fu_427_p2;

assign r_1_fu_571_p2 = (shl_ln27_fu_565_p2 | select_ln481_1_fu_544_p3);

assign s_we0_out = s_we0_local;

assign s_we1_out = s_we1_local;

assign select_ln479_fu_380_p3 = ((empty_30_fu_375_p2[0:0] == 1'b1) ? 32'd135 : inlen_read_reg_754);

assign select_ln480_fu_515_p3 = ((icmp_ln26_fu_495_p2[0:0] == 1'b1) ? add_ln480_1_fu_509_p2 : ap_phi_mux_i_2_phi_fu_267_p4);

assign select_ln481_1_fu_544_p3 = ((icmp_ln26_reg_873[0:0] == 1'b1) ? 64'd0 : ap_phi_mux_r_phi_fu_289_p4);

assign select_ln481_fu_501_p3 = ((icmp_ln26_fu_495_p2[0:0] == 1'b1) ? 4'd0 : ap_phi_mux_i_4_phi_fu_278_p4);

assign sext_ln467_1_fu_450_p1 = sub_ln467_fu_444_p2;

assign sext_ln467_fu_441_p1 = inlen_read_reg_754;

assign shl_ln1_fu_666_p3 = {{trunc_ln490_reg_933}, {3'd0}};

assign shl_ln27_fu_565_p2 = zext_ln27_fu_551_p1 << zext_ln27_1_fu_561_p1;

assign shl_ln2_fu_689_p3 = {{trunc_ln492_reg_943}, {3'd0}};

assign shl_ln490_fu_677_p2 = zext_ln490_fu_663_p1 << zext_ln490_1_fu_673_p1;

assign shl_ln492_fu_700_p2 = 59'd6 << zext_ln492_fu_696_p1;

assign shl_ln_fu_554_p3 = {{trunc_ln27_reg_888}, {3'd0}};

assign sub_ln467_fu_444_p2 = ($signed(sext_ln467_fu_441_p1) - $signed(mul_ln479_1_cast_fu_437_p1));

assign sub_ln470_fu_595_p2 = (trunc_ln470_fu_592_p1 - trunc_ln479_reg_813);

assign sub_ln479_fu_347_p2 = (add_ln479_reg_780 - urem_ln479_reg_786);

assign tmp_1_fu_405_p3 = {{tmp_reg_823}, {7'd0}};

assign tmp_2_fu_416_p3 = {{tmp_reg_823}, {3'd0}};

assign trunc_ln27_fu_528_p1 = select_ln481_fu_501_p3[2:0];

assign trunc_ln470_fu_592_p1 = urem_ln488_reg_919[7:0];

assign trunc_ln479_fu_387_p1 = select_ln479_fu_380_p3[7:0];

assign trunc_ln490_fu_623_p1 = i_fu_162[2:0];

assign trunc_ln492_fu_642_p1 = i_3_reg_924[2:0];

assign trunc_ln493_fu_724_p1 = s_q0[62:0];

assign trunc_ln4_fu_322_p0 = inlen;

assign trunc_ln4_fu_322_p1 = trunc_ln4_fu_322_p0[7:0];

assign xor_ln482_fu_577_p2 = (s_load_3_reg_914 ^ r_1_reg_908);

assign xor_ln490_fu_683_p2 = (shl_ln490_fu_677_p2 ^ s_q1);

assign xor_ln492_fu_710_p2 = (zext_ln492_2_fu_706_p1 ^ s_q0);

assign xor_ln493_fu_728_p2 = (bit_sel_reg_981 ^ 1'd1);

assign xor_ln_fu_733_p3 = {{xor_ln493_fu_728_p2}, {trunc_ln493_reg_986}};

assign zext_ln27_1_fu_561_p1 = shl_ln_fu_554_p3;

assign zext_ln27_fu_551_p1 = gmem_addr_read_reg_883;

assign zext_ln479_2_fu_412_p1 = tmp_1_fu_405_p3;

assign zext_ln479_3_fu_423_p1 = tmp_2_fu_416_p3;

assign zext_ln479_fu_371_p1 = empty_reg_791;

assign zext_ln480_fu_523_p1 = select_ln480_fu_515_p3;

assign zext_ln488_fu_608_p1 = i_fu_162;

assign zext_ln490_1_fu_673_p1 = shl_ln1_fu_666_p3;

assign zext_ln490_2_fu_659_p1 = lshr_ln_reg_938;

assign zext_ln490_fu_663_p1 = gmem_addr_1_read_reg_954;

assign zext_ln492_1_fu_654_p1 = lshr_ln1_fu_645_p4;

assign zext_ln492_2_fu_706_p1 = shl_ln492_fu_700_p2;

assign zext_ln492_fu_696_p1 = shl_ln2_fu_689_p3;

always @ (posedge ap_clk) begin
    mul_ln479_1_cast4_reg_829[2:0] <= 3'b000;
    mul_ln479_1_cast4_reg_829[63:33] <= 31'b0000000000000000000000000000000;
end

endmodule //sha3_256_hw
