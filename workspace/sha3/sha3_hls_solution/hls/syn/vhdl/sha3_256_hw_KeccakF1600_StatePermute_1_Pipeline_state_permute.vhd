-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sha3_256_hw_KeccakF1600_StatePermute_1_Pipeline_state_permute is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    Asu : IN STD_LOGIC_VECTOR (63 downto 0);
    Aba : IN STD_LOGIC_VECTOR (63 downto 0);
    Abe : IN STD_LOGIC_VECTOR (63 downto 0);
    Abi : IN STD_LOGIC_VECTOR (63 downto 0);
    Abo : IN STD_LOGIC_VECTOR (63 downto 0);
    Abu : IN STD_LOGIC_VECTOR (63 downto 0);
    Aga : IN STD_LOGIC_VECTOR (63 downto 0);
    Age : IN STD_LOGIC_VECTOR (63 downto 0);
    Agi : IN STD_LOGIC_VECTOR (63 downto 0);
    Ago : IN STD_LOGIC_VECTOR (63 downto 0);
    Agu : IN STD_LOGIC_VECTOR (63 downto 0);
    Aka : IN STD_LOGIC_VECTOR (63 downto 0);
    Ake : IN STD_LOGIC_VECTOR (63 downto 0);
    Aki : IN STD_LOGIC_VECTOR (63 downto 0);
    Ako : IN STD_LOGIC_VECTOR (63 downto 0);
    Aku : IN STD_LOGIC_VECTOR (63 downto 0);
    Ama : IN STD_LOGIC_VECTOR (63 downto 0);
    Ame : IN STD_LOGIC_VECTOR (63 downto 0);
    Ami : IN STD_LOGIC_VECTOR (63 downto 0);
    Amo : IN STD_LOGIC_VECTOR (63 downto 0);
    Amu : IN STD_LOGIC_VECTOR (63 downto 0);
    Asa : IN STD_LOGIC_VECTOR (63 downto 0);
    Ase : IN STD_LOGIC_VECTOR (63 downto 0);
    Asi : IN STD_LOGIC_VECTOR (63 downto 0);
    Aso : IN STD_LOGIC_VECTOR (63 downto 0);
    Asu_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Asu_1_out_ap_vld : OUT STD_LOGIC;
    Aba_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Aba_1_out_ap_vld : OUT STD_LOGIC;
    Abe_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Abe_1_out_ap_vld : OUT STD_LOGIC;
    Abi_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Abi_1_out_ap_vld : OUT STD_LOGIC;
    Abo_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Abo_1_out_ap_vld : OUT STD_LOGIC;
    Abu_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Abu_1_out_ap_vld : OUT STD_LOGIC;
    Aga_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Aga_1_out_ap_vld : OUT STD_LOGIC;
    Age_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Age_1_out_ap_vld : OUT STD_LOGIC;
    Agi_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Agi_1_out_ap_vld : OUT STD_LOGIC;
    Ago_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Ago_1_out_ap_vld : OUT STD_LOGIC;
    Agu_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Agu_1_out_ap_vld : OUT STD_LOGIC;
    Aka_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Aka_1_out_ap_vld : OUT STD_LOGIC;
    Ake_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Ake_1_out_ap_vld : OUT STD_LOGIC;
    Aki_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Aki_1_out_ap_vld : OUT STD_LOGIC;
    Ako_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Ako_1_out_ap_vld : OUT STD_LOGIC;
    Aku_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Aku_1_out_ap_vld : OUT STD_LOGIC;
    Ama_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Ama_1_out_ap_vld : OUT STD_LOGIC;
    Ame_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Ame_1_out_ap_vld : OUT STD_LOGIC;
    Ami_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Ami_1_out_ap_vld : OUT STD_LOGIC;
    Amo_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Amo_1_out_ap_vld : OUT STD_LOGIC;
    Amu_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Amu_1_out_ap_vld : OUT STD_LOGIC;
    Asa_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Asa_1_out_ap_vld : OUT STD_LOGIC;
    Ase_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Ase_1_out_ap_vld : OUT STD_LOGIC;
    Asi_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Asi_1_out_ap_vld : OUT STD_LOGIC;
    Aso_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Aso_1_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of sha3_256_hw_KeccakF1600_StatePermute_1_Pipeline_state_permute is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln131_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal KeccakF_RoundConstants_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal KeccakF_RoundConstants_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal KeccakF_RoundConstants_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal KeccakF_RoundConstants_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln131_reg_4137 : STD_LOGIC_VECTOR (0 downto 0);
    signal Eba_4_fu_2625_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eba_4_reg_4151 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln246_fu_2637_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln246_reg_4158 : STD_LOGIC_VECTOR (19 downto 0);
    signal lshr_ln35_reg_4163 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln248_fu_2657_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln248_reg_4168 : STD_LOGIC_VECTOR (20 downto 0);
    signal lshr_ln36_reg_4173 : STD_LOGIC_VECTOR (42 downto 0);
    signal trunc_ln250_fu_2677_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal trunc_ln250_reg_4178 : STD_LOGIC_VECTOR (42 downto 0);
    signal lshr_ln37_reg_4183 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln252_fu_2697_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal trunc_ln252_reg_4188 : STD_LOGIC_VECTOR (49 downto 0);
    signal lshr_ln38_reg_4193 : STD_LOGIC_VECTOR (13 downto 0);
    signal KeccakF_RoundConstants_load_1_reg_4198 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln261_fu_2717_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln261_reg_4203 : STD_LOGIC_VECTOR (35 downto 0);
    signal lshr_ln39_reg_4208 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln263_fu_2737_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln263_reg_4213 : STD_LOGIC_VECTOR (43 downto 0);
    signal lshr_ln40_reg_4218 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln265_fu_2757_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln265_reg_4223 : STD_LOGIC_VECTOR (60 downto 0);
    signal lshr_ln41_reg_4228 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln267_fu_2777_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln267_reg_4233 : STD_LOGIC_VECTOR (18 downto 0);
    signal lshr_ln42_reg_4238 : STD_LOGIC_VECTOR (44 downto 0);
    signal trunc_ln269_fu_2797_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln269_reg_4243 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln43_reg_4248 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln277_fu_2817_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln277_reg_4253 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_22_reg_4258 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln279_fu_2835_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln279_reg_4263 : STD_LOGIC_VECTOR (57 downto 0);
    signal lshr_ln45_reg_4268 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln281_fu_2855_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal trunc_ln281_reg_4273 : STD_LOGIC_VECTOR (38 downto 0);
    signal lshr_ln_reg_4278 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln283_fu_2875_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal trunc_ln283_reg_4283 : STD_LOGIC_VECTOR (55 downto 0);
    signal lshr_ln46_reg_4288 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln285_fu_2895_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal trunc_ln285_reg_4293 : STD_LOGIC_VECTOR (45 downto 0);
    signal lshr_ln47_reg_4298 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln293_fu_2915_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal trunc_ln293_reg_4303 : STD_LOGIC_VECTOR (36 downto 0);
    signal lshr_ln48_reg_4308 : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln295_fu_2935_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln295_reg_4313 : STD_LOGIC_VECTOR (27 downto 0);
    signal lshr_ln49_reg_4318 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln297_fu_2955_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln297_reg_4323 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln50_reg_4328 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln299_fu_2975_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal trunc_ln299_reg_4333 : STD_LOGIC_VECTOR (48 downto 0);
    signal lshr_ln51_reg_4338 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln301_fu_2995_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln301_reg_4343 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln52_reg_4348 : STD_LOGIC_VECTOR (55 downto 0);
    signal trunc_ln309_fu_3015_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln309_reg_4353 : STD_LOGIC_VECTOR (1 downto 0);
    signal lshr_ln53_reg_4358 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln311_fu_3035_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln311_reg_4363 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln54_reg_4368 : STD_LOGIC_VECTOR (54 downto 0);
    signal trunc_ln313_fu_3055_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln313_reg_4373 : STD_LOGIC_VECTOR (24 downto 0);
    signal lshr_ln55_reg_4378 : STD_LOGIC_VECTOR (38 downto 0);
    signal trunc_ln315_fu_3075_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln315_reg_4383 : STD_LOGIC_VECTOR (22 downto 0);
    signal lshr_ln56_reg_4388 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln317_fu_3095_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln317_reg_4393 : STD_LOGIC_VECTOR (61 downto 0);
    signal lshr_ln57_reg_4398 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln131_fu_879_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln254_fu_902_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal Aso_1_fu_286 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Aso_5_fu_3681_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Aso_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal Asi_1_fu_290 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Asi_5_fu_3663_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Asi_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Ase_1_fu_294 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Ase_5_fu_3645_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Ase_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Asa_1_fu_298 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Asa_5_fu_3627_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Asa_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Amu_1_fu_302 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Amu_5_fu_3579_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Amu_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Amo_1_fu_306 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Amo_5_fu_3561_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Amo_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Ami_1_fu_310 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Ami_5_fu_3543_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Ami_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Ame_1_fu_314 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Ame_5_fu_3525_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Ame_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Ama_1_fu_318 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Ama_5_fu_3507_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Ama_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Aku_1_fu_322 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Aku_5_fu_3459_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Aku_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Ako_1_fu_326 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Ako_5_fu_3441_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Ako_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Aki_1_fu_330 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Aki_5_fu_3423_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Aki_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Ake_1_fu_334 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Ake_5_fu_3405_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Ake_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Aka_1_fu_338 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Aka_5_fu_3387_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Aka_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Agu_1_fu_342 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Agu_5_fu_3339_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Agu_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Ago_1_fu_346 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Ago_5_fu_3321_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Ago_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Agi_1_fu_350 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Agi_5_fu_3303_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Agi_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Age_1_fu_354 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Age_5_fu_3285_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Age_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Aga_1_fu_358 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Aga_5_fu_3267_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Aga_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Abu_1_fu_362 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Abu_5_fu_3219_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Abu_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Abo_1_fu_366 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Abo_5_fu_3202_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Abo_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Abi_1_fu_370 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Abi_5_fu_3185_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Abi_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Abe_1_fu_374 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Abe_5_fu_3167_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Abe_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Aba_1_fu_378 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Aba_6_fu_3149_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Aba_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Asu_1_fu_382 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Asu_5_fu_3699_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Asu_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal round_fu_386 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal add_ln131_fu_907_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_round_2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal KeccakF_RoundConstants_ce1_local : STD_LOGIC;
    signal KeccakF_RoundConstants_ce0_local : STD_LOGIC;
    signal tmp_s_fu_884_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln10_fu_894_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal xor_ln135_fu_993_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln135_1_fu_1005_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln135_2_fu_999_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln136_fu_1017_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln136_1_fu_1029_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln136_2_fu_1023_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln137_fu_1041_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln137_1_fu_1047_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln137_2_fu_1053_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln138_fu_1065_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln138_1_fu_1071_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln138_2_fu_1077_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln139_fu_1089_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln139_1_fu_1101_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln139_2_fu_1095_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCe_fu_1035_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln142_fu_1113_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_fu_1117_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln_fu_1125_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_fu_1107_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_fu_1059_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln143_fu_1139_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_12_fu_1143_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1_fu_1151_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_fu_1011_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_fu_1083_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln144_fu_1165_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_13_fu_1169_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln2_fu_1177_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln145_fu_1191_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_14_fu_1195_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln3_fu_1203_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln146_fu_1217_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_15_fu_1221_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln4_fu_1229_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal Da_fu_1133_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal De_fu_1159_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Age_4_fu_1249_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln151_fu_1255_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal lshr_ln6_fu_1259_p4 : STD_LOGIC_VECTOR (43 downto 0);
    signal Di_fu_1185_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Aki_4_fu_1277_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln153_fu_1283_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal lshr_ln7_fu_1287_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal Do_fu_1211_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Amo_4_fu_1305_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln155_fu_1311_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal lshr_ln8_fu_1315_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal Du_fu_1237_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Asu_4_fu_1333_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln157_fu_1339_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal lshr_ln9_fu_1343_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal BCe_1_fu_1269_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_1_fu_1297_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln159_fu_1361_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Aba_7_fu_1243_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln159_1_fu_1373_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln159_fu_1367_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_1_fu_1325_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln160_fu_1385_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln160_fu_1391_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_1_fu_1353_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln161_fu_1403_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln161_fu_1409_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln162_fu_1421_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln162_fu_1427_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln163_fu_1439_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln163_fu_1445_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Abo_4_fu_1457_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln166_fu_1463_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal lshr_ln10_fu_1467_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal Agu_4_fu_1485_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln168_fu_1491_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal lshr_ln11_fu_1495_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal Aka_4_fu_1513_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln170_fu_1519_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal lshr_ln12_fu_1523_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal Ame_4_fu_1541_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln172_fu_1547_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal lshr_ln13_fu_1551_p4 : STD_LOGIC_VECTOR (44 downto 0);
    signal Asi_4_fu_1569_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln174_fu_1575_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln14_fu_1579_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal BCe_2_fu_1505_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_2_fu_1533_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln175_fu_1597_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln175_fu_1603_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_2_fu_1477_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_2_fu_1561_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln176_fu_1615_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln176_fu_1621_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_2_fu_1589_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln177_fu_1633_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln177_fu_1639_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln178_fu_1651_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln178_fu_1657_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln179_fu_1669_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln179_fu_1675_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Abe_4_fu_1687_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln182_fu_1693_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_16_fu_1697_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Agi_4_fu_1713_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln184_fu_1719_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal lshr_ln16_fu_1723_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal Ako_4_fu_1741_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln186_fu_1747_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal lshr_ln17_fu_1751_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal Amu_4_fu_1769_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln188_fu_1775_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal lshr_ln18_fu_1779_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal Asa_4_fu_1797_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln190_fu_1803_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal lshr_ln19_fu_1807_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal BCe_3_fu_1733_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_3_fu_1761_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln191_fu_1825_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln191_fu_1831_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_3_fu_1705_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_3_fu_1789_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln192_fu_1843_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln192_fu_1849_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_3_fu_1817_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln193_fu_1861_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln193_fu_1867_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln194_fu_1879_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln194_fu_1885_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln195_fu_1897_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln195_fu_1903_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Abu_4_fu_1915_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln198_fu_1921_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal lshr_ln20_fu_1925_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal Aga_4_fu_1943_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln200_fu_1949_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal lshr_ln21_fu_1953_p4 : STD_LOGIC_VECTOR (35 downto 0);
    signal Ake_4_fu_1971_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln202_fu_1977_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln22_fu_1981_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal Ami_4_fu_1999_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln204_fu_2005_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal lshr_ln23_fu_2009_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal Aso_4_fu_2027_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln206_fu_2033_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln24_fu_2037_p4 : STD_LOGIC_VECTOR (55 downto 0);
    signal BCe_4_fu_1963_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_4_fu_1991_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln207_fu_2055_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln207_fu_2061_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_4_fu_1935_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_4_fu_2019_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln208_fu_2073_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln208_fu_2079_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_4_fu_2047_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln209_fu_2091_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln209_fu_2097_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln210_fu_2109_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln210_fu_2115_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln211_fu_2127_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln211_fu_2133_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Abi_4_fu_2145_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln214_fu_2151_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lshr_ln25_fu_2155_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal Ago_4_fu_2173_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln216_fu_2179_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln26_fu_2183_p4 : STD_LOGIC_VECTOR (54 downto 0);
    signal Aku_4_fu_2201_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln218_fu_2207_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal lshr_ln27_fu_2211_p4 : STD_LOGIC_VECTOR (38 downto 0);
    signal Ama_4_fu_2229_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln220_fu_2235_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal lshr_ln28_fu_2239_p4 : STD_LOGIC_VECTOR (40 downto 0);
    signal Ase_4_fu_2257_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln222_fu_2263_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal lshr_ln29_fu_2267_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal BCe_5_fu_2193_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_5_fu_2221_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln223_fu_2285_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_5_fu_2165_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln223_fu_2291_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_5_fu_2249_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln224_fu_2303_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln224_fu_2309_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_5_fu_2277_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln225_fu_2321_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln225_fu_2327_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln226_fu_2339_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln226_fu_2345_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln227_fu_2357_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln227_fu_2363_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Esa_fu_2297_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eka_fu_1837_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ema_fu_2067_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eba_fu_1379_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln230_1_fu_2381_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ega_fu_1609_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln230_2_fu_2387_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln230_fu_2375_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ege_fu_1627_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ebe_fu_1397_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eke_fu_1855_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eme_fu_2085_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln231_fu_2405_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ese_fu_2315_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln231_2_fu_2411_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln231_1_fu_2399_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Esi_fu_2333_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Emi_fu_2103_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ebi_fu_1415_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Egi_fu_1645_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln232_fu_2429_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eki_fu_1873_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln232_2_fu_2435_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln232_1_fu_2423_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eko_fu_1891_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ego_fu_1663_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ebo_fu_1433_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eso_fu_2351_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln233_1_fu_2453_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Emo_fu_2121_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln233_2_fu_2459_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln233_fu_2447_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ebu_fu_1451_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Esu_fu_2369_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Egu_fu_1681_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eku_fu_1909_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln234_1_fu_2477_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Emu_fu_2139_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln234_2_fu_2483_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln234_fu_2471_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCe_12_fu_2417_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln237_fu_2495_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_17_fu_2499_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln5_fu_2507_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_12_fu_2489_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_12_fu_2441_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln238_fu_2521_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_18_fu_2525_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal BCa_13_fu_2393_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln6_fu_2533_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_12_fu_2465_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln239_fu_2547_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_19_fu_2551_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln7_fu_2559_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln240_fu_2573_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_20_fu_2577_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln8_fu_2585_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln241_fu_2599_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_21_fu_2603_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln9_fu_2611_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal Da_2_fu_2515_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal De_2_fu_2541_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ege_2_fu_2631_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Di_2_fu_2567_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eki_2_fu_2651_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Do_2_fu_2593_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Emo_2_fu_2671_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Du_2_fu_2619_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Esu_2_fu_2691_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ebo_2_fu_2711_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Egu_2_fu_2731_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eka_2_fu_2751_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eme_2_fu_2771_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Esi_2_fu_2791_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ebe_2_fu_2811_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Egi_2_fu_2829_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eko_2_fu_2849_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Emu_2_fu_2869_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Esa_2_fu_2889_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ebu_2_fu_2909_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ega_2_fu_2929_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eke_2_fu_2949_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Emi_2_fu_2969_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eso_2_fu_2989_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ebi_2_fu_3009_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ego_2_fu_3029_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eku_2_fu_3049_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ema_2_fu_3069_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ese_2_fu_3089_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCe_7_fu_3109_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_7_fu_3115_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln254_fu_3133_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln254_1_fu_3145_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln254_fu_3139_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_7_fu_3121_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln255_fu_3155_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln255_fu_3161_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_7_fu_3127_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln256_fu_3173_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln256_fu_3179_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln257_fu_3191_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln257_fu_3197_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln258_fu_3208_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln258_fu_3213_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCe_8_fu_3231_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_8_fu_3237_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln270_fu_3255_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln270_fu_3261_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_8_fu_3225_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_8_fu_3243_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln271_fu_3273_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln271_fu_3279_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_8_fu_3249_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln272_fu_3291_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln272_fu_3297_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln273_fu_3309_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln273_fu_3315_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln274_fu_3327_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln274_fu_3333_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCe_9_fu_3351_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_9_fu_3357_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln286_fu_3375_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_9_fu_3345_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln286_fu_3381_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_9_fu_3363_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln287_fu_3393_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln287_fu_3399_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_9_fu_3369_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln288_fu_3411_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln288_fu_3417_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln289_fu_3429_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln289_fu_3435_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln290_fu_3447_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln290_fu_3453_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCe_13_fu_3471_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_13_fu_3477_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln302_fu_3495_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_15_fu_3465_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln302_fu_3501_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_13_fu_3483_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln303_fu_3513_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln303_fu_3519_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_13_fu_3489_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln304_fu_3531_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln304_fu_3537_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln305_fu_3549_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln305_fu_3555_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln306_fu_3567_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln306_fu_3573_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCe_14_fu_3591_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_14_fu_3597_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln318_fu_3615_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln318_fu_3621_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_16_fu_3585_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_14_fu_3603_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln319_fu_3633_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln319_fu_3639_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_14_fu_3609_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln320_fu_3651_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln320_fu_3657_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln321_fu_3669_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln321_fu_3675_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln322_fu_3687_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln322_fu_3693_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sha3_256_hw_KeccakF1600_StatePermute_Pipeline_state_permute_KeccakF_RoundConstants_ROM_AUbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sha3_256_hw_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    KeccakF_RoundConstants_U : component sha3_256_hw_KeccakF1600_StatePermute_Pipeline_state_permute_KeccakF_RoundConstants_ROM_AUbkb
    generic map (
        DataWidth => 64,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => KeccakF_RoundConstants_address0,
        ce0 => KeccakF_RoundConstants_ce0_local,
        q0 => KeccakF_RoundConstants_q0,
        address1 => KeccakF_RoundConstants_address1,
        ce1 => KeccakF_RoundConstants_ce1_local,
        q1 => KeccakF_RoundConstants_q1);

    flow_control_loop_pipe_sequential_init_U : component sha3_256_hw_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    Aba_1_fu_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Aba_1_fu_378 <= Aba;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Aba_1_fu_378 <= Aba_6_fu_3149_p2;
                end if;
            end if; 
        end if;
    end process;

    Abe_1_fu_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Abe_1_fu_374 <= Abe;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Abe_1_fu_374 <= Abe_5_fu_3167_p2;
                end if;
            end if; 
        end if;
    end process;

    Abi_1_fu_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Abi_1_fu_370 <= Abi;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Abi_1_fu_370 <= Abi_5_fu_3185_p2;
                end if;
            end if; 
        end if;
    end process;

    Abo_1_fu_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Abo_1_fu_366 <= Abo;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Abo_1_fu_366 <= Abo_5_fu_3202_p2;
                end if;
            end if; 
        end if;
    end process;

    Abu_1_fu_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Abu_1_fu_362 <= Abu;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Abu_1_fu_362 <= Abu_5_fu_3219_p2;
                end if;
            end if; 
        end if;
    end process;

    Aga_1_fu_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Aga_1_fu_358 <= Aga;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Aga_1_fu_358 <= Aga_5_fu_3267_p2;
                end if;
            end if; 
        end if;
    end process;

    Age_1_fu_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Age_1_fu_354 <= Age;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Age_1_fu_354 <= Age_5_fu_3285_p2;
                end if;
            end if; 
        end if;
    end process;

    Agi_1_fu_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Agi_1_fu_350 <= Agi;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Agi_1_fu_350 <= Agi_5_fu_3303_p2;
                end if;
            end if; 
        end if;
    end process;

    Ago_1_fu_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Ago_1_fu_346 <= Ago;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Ago_1_fu_346 <= Ago_5_fu_3321_p2;
                end if;
            end if; 
        end if;
    end process;

    Agu_1_fu_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Agu_1_fu_342 <= Agu;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Agu_1_fu_342 <= Agu_5_fu_3339_p2;
                end if;
            end if; 
        end if;
    end process;

    Aka_1_fu_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Aka_1_fu_338 <= Aka;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Aka_1_fu_338 <= Aka_5_fu_3387_p2;
                end if;
            end if; 
        end if;
    end process;

    Ake_1_fu_334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Ake_1_fu_334 <= Ake;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Ake_1_fu_334 <= Ake_5_fu_3405_p2;
                end if;
            end if; 
        end if;
    end process;

    Aki_1_fu_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Aki_1_fu_330 <= Aki;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Aki_1_fu_330 <= Aki_5_fu_3423_p2;
                end if;
            end if; 
        end if;
    end process;

    Ako_1_fu_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Ako_1_fu_326 <= Ako;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Ako_1_fu_326 <= Ako_5_fu_3441_p2;
                end if;
            end if; 
        end if;
    end process;

    Aku_1_fu_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Aku_1_fu_322 <= Aku;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Aku_1_fu_322 <= Aku_5_fu_3459_p2;
                end if;
            end if; 
        end if;
    end process;

    Ama_1_fu_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Ama_1_fu_318 <= Ama;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Ama_1_fu_318 <= Ama_5_fu_3507_p2;
                end if;
            end if; 
        end if;
    end process;

    Ame_1_fu_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Ame_1_fu_314 <= Ame;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Ame_1_fu_314 <= Ame_5_fu_3525_p2;
                end if;
            end if; 
        end if;
    end process;

    Ami_1_fu_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Ami_1_fu_310 <= Ami;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Ami_1_fu_310 <= Ami_5_fu_3543_p2;
                end if;
            end if; 
        end if;
    end process;

    Amo_1_fu_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Amo_1_fu_306 <= Amo;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Amo_1_fu_306 <= Amo_5_fu_3561_p2;
                end if;
            end if; 
        end if;
    end process;

    Amu_1_fu_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Amu_1_fu_302 <= Amu;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Amu_1_fu_302 <= Amu_5_fu_3579_p2;
                end if;
            end if; 
        end if;
    end process;

    Asa_1_fu_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Asa_1_fu_298 <= Asa;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Asa_1_fu_298 <= Asa_5_fu_3627_p2;
                end if;
            end if; 
        end if;
    end process;

    Ase_1_fu_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Ase_1_fu_294 <= Ase;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Ase_1_fu_294 <= Ase_5_fu_3645_p2;
                end if;
            end if; 
        end if;
    end process;

    Asi_1_fu_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Asi_1_fu_290 <= Asi;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Asi_1_fu_290 <= Asi_5_fu_3663_p2;
                end if;
            end if; 
        end if;
    end process;

    Aso_1_fu_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Aso_1_fu_286 <= Aso;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Aso_1_fu_286 <= Aso_5_fu_3681_p2;
                end if;
            end if; 
        end if;
    end process;

    Asu_1_fu_382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Asu_1_fu_382 <= Asu;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Asu_1_fu_382 <= Asu_5_fu_3699_p2;
                end if;
            end if; 
        end if;
    end process;

    round_fu_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln131_fu_873_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    round_fu_386 <= add_ln131_fu_907_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    round_fu_386 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                Eba_4_reg_4151 <= Eba_4_fu_2625_p2;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                icmp_ln131_reg_4137 <= icmp_ln131_fu_873_p2;
                lshr_ln35_reg_4163 <= Ege_2_fu_2631_p2(63 downto 20);
                lshr_ln36_reg_4173 <= Eki_2_fu_2651_p2(63 downto 21);
                lshr_ln37_reg_4183 <= Emo_2_fu_2671_p2(63 downto 43);
                lshr_ln38_reg_4193 <= Esu_2_fu_2691_p2(63 downto 50);
                lshr_ln39_reg_4208 <= Ebo_2_fu_2711_p2(63 downto 36);
                lshr_ln40_reg_4218 <= Egu_2_fu_2731_p2(63 downto 44);
                lshr_ln41_reg_4228 <= Eka_2_fu_2751_p2(63 downto 61);
                lshr_ln42_reg_4238 <= Eme_2_fu_2771_p2(63 downto 19);
                lshr_ln43_reg_4248 <= Esi_2_fu_2791_p2(63 downto 3);
                lshr_ln45_reg_4268 <= Egi_2_fu_2829_p2(63 downto 58);
                lshr_ln46_reg_4288 <= Emu_2_fu_2869_p2(63 downto 56);
                lshr_ln47_reg_4298 <= Esa_2_fu_2889_p2(63 downto 46);
                lshr_ln48_reg_4308 <= Ebu_2_fu_2909_p2(63 downto 37);
                lshr_ln49_reg_4318 <= Ega_2_fu_2929_p2(63 downto 28);
                lshr_ln50_reg_4328 <= Eke_2_fu_2949_p2(63 downto 54);
                lshr_ln51_reg_4338 <= Emi_2_fu_2969_p2(63 downto 49);
                lshr_ln52_reg_4348 <= Eso_2_fu_2989_p2(63 downto 8);
                lshr_ln53_reg_4358 <= Ebi_2_fu_3009_p2(63 downto 2);
                lshr_ln54_reg_4368 <= Ego_2_fu_3029_p2(63 downto 9);
                lshr_ln55_reg_4378 <= Eku_2_fu_3049_p2(63 downto 25);
                lshr_ln56_reg_4388 <= Ema_2_fu_3069_p2(63 downto 23);
                lshr_ln57_reg_4398 <= Ese_2_fu_3089_p2(63 downto 62);
                lshr_ln_reg_4278 <= Eko_2_fu_2849_p2(63 downto 39);
                tmp_22_reg_4258 <= Ebe_2_fu_2811_p2(63 downto 63);
                trunc_ln246_reg_4158 <= trunc_ln246_fu_2637_p1;
                trunc_ln248_reg_4168 <= trunc_ln248_fu_2657_p1;
                trunc_ln250_reg_4178 <= trunc_ln250_fu_2677_p1;
                trunc_ln252_reg_4188 <= trunc_ln252_fu_2697_p1;
                trunc_ln261_reg_4203 <= trunc_ln261_fu_2717_p1;
                trunc_ln263_reg_4213 <= trunc_ln263_fu_2737_p1;
                trunc_ln265_reg_4223 <= trunc_ln265_fu_2757_p1;
                trunc_ln267_reg_4233 <= trunc_ln267_fu_2777_p1;
                trunc_ln269_reg_4243 <= trunc_ln269_fu_2797_p1;
                trunc_ln277_reg_4253 <= trunc_ln277_fu_2817_p1;
                trunc_ln279_reg_4263 <= trunc_ln279_fu_2835_p1;
                trunc_ln281_reg_4273 <= trunc_ln281_fu_2855_p1;
                trunc_ln283_reg_4283 <= trunc_ln283_fu_2875_p1;
                trunc_ln285_reg_4293 <= trunc_ln285_fu_2895_p1;
                trunc_ln293_reg_4303 <= trunc_ln293_fu_2915_p1;
                trunc_ln295_reg_4313 <= trunc_ln295_fu_2935_p1;
                trunc_ln297_reg_4323 <= trunc_ln297_fu_2955_p1;
                trunc_ln299_reg_4333 <= trunc_ln299_fu_2975_p1;
                trunc_ln301_reg_4343 <= trunc_ln301_fu_2995_p1;
                trunc_ln309_reg_4353 <= trunc_ln309_fu_3015_p1;
                trunc_ln311_reg_4363 <= trunc_ln311_fu_3035_p1;
                trunc_ln313_reg_4373 <= trunc_ln313_fu_3055_p1;
                trunc_ln315_reg_4383 <= trunc_ln315_fu_3075_p1;
                trunc_ln317_reg_4393 <= trunc_ln317_fu_3095_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                KeccakF_RoundConstants_load_1_reg_4198 <= KeccakF_RoundConstants_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Aba_1_out <= Aba_1_fu_378;

    Aba_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Aba_1_out_ap_vld <= ap_const_logic_1;
        else 
            Aba_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Aba_6_fu_3149_p2 <= (xor_ln254_1_fu_3145_p2 xor and_ln254_fu_3139_p2);
    Aba_7_fu_1243_p2 <= (ap_sig_allocacmp_Aba_1_load xor Da_fu_1133_p2);
    Abe_1_out <= Abe_1_fu_374;

    Abe_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Abe_1_out_ap_vld <= ap_const_logic_1;
        else 
            Abe_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Abe_4_fu_1687_p2 <= (ap_sig_allocacmp_Abe_1_load xor De_fu_1159_p2);
    Abe_5_fu_3167_p2 <= (and_ln255_fu_3161_p2 xor BCe_7_fu_3109_p3);
    Abi_1_out <= Abi_1_fu_370;

    Abi_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Abi_1_out_ap_vld <= ap_const_logic_1;
        else 
            Abi_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Abi_4_fu_2145_p2 <= (ap_sig_allocacmp_Abi_1_load xor Di_fu_1185_p2);
    Abi_5_fu_3185_p2 <= (and_ln256_fu_3179_p2 xor BCi_7_fu_3115_p3);
    Abo_1_out <= Abo_1_fu_366;

    Abo_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Abo_1_out_ap_vld <= ap_const_logic_1;
        else 
            Abo_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Abo_4_fu_1457_p2 <= (ap_sig_allocacmp_Abo_1_load xor Do_fu_1211_p2);
    Abo_5_fu_3202_p2 <= (and_ln257_fu_3197_p2 xor BCo_7_fu_3121_p3);
    Abu_1_out <= Abu_1_fu_362;

    Abu_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Abu_1_out_ap_vld <= ap_const_logic_1;
        else 
            Abu_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Abu_4_fu_1915_p2 <= (ap_sig_allocacmp_Abu_1_load xor Du_fu_1237_p2);
    Abu_5_fu_3219_p2 <= (and_ln258_fu_3213_p2 xor BCu_7_fu_3127_p3);
    Aga_1_out <= Aga_1_fu_358;

    Aga_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Aga_1_out_ap_vld <= ap_const_logic_1;
        else 
            Aga_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Aga_4_fu_1943_p2 <= (ap_sig_allocacmp_Aga_1_load xor Da_fu_1133_p2);
    Aga_5_fu_3267_p2 <= (and_ln270_fu_3261_p2 xor BCa_8_fu_3225_p3);
    Age_1_out <= Age_1_fu_354;

    Age_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Age_1_out_ap_vld <= ap_const_logic_1;
        else 
            Age_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Age_4_fu_1249_p2 <= (ap_sig_allocacmp_Age_1_load xor De_fu_1159_p2);
    Age_5_fu_3285_p2 <= (and_ln271_fu_3279_p2 xor BCe_8_fu_3231_p3);
    Agi_1_out <= Agi_1_fu_350;

    Agi_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Agi_1_out_ap_vld <= ap_const_logic_1;
        else 
            Agi_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Agi_4_fu_1713_p2 <= (ap_sig_allocacmp_Agi_1_load xor Di_fu_1185_p2);
    Agi_5_fu_3303_p2 <= (and_ln272_fu_3297_p2 xor BCi_8_fu_3237_p3);
    Ago_1_out <= Ago_1_fu_346;

    Ago_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Ago_1_out_ap_vld <= ap_const_logic_1;
        else 
            Ago_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Ago_4_fu_2173_p2 <= (ap_sig_allocacmp_Ago_1_load xor Do_fu_1211_p2);
    Ago_5_fu_3321_p2 <= (and_ln273_fu_3315_p2 xor BCo_8_fu_3243_p3);
    Agu_1_out <= Agu_1_fu_342;

    Agu_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Agu_1_out_ap_vld <= ap_const_logic_1;
        else 
            Agu_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Agu_4_fu_1485_p2 <= (ap_sig_allocacmp_Agu_1_load xor Du_fu_1237_p2);
    Agu_5_fu_3339_p2 <= (and_ln274_fu_3333_p2 xor BCu_8_fu_3249_p3);
    Aka_1_out <= Aka_1_fu_338;

    Aka_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Aka_1_out_ap_vld <= ap_const_logic_1;
        else 
            Aka_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Aka_4_fu_1513_p2 <= (ap_sig_allocacmp_Aka_1_load xor Da_fu_1133_p2);
    Aka_5_fu_3387_p2 <= (and_ln286_fu_3381_p2 xor BCa_9_fu_3345_p3);
    Ake_1_out <= Ake_1_fu_334;

    Ake_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Ake_1_out_ap_vld <= ap_const_logic_1;
        else 
            Ake_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Ake_4_fu_1971_p2 <= (ap_sig_allocacmp_Ake_1_load xor De_fu_1159_p2);
    Ake_5_fu_3405_p2 <= (and_ln287_fu_3399_p2 xor BCe_9_fu_3351_p3);
    Aki_1_out <= Aki_1_fu_330;

    Aki_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Aki_1_out_ap_vld <= ap_const_logic_1;
        else 
            Aki_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Aki_4_fu_1277_p2 <= (ap_sig_allocacmp_Aki_1_load xor Di_fu_1185_p2);
    Aki_5_fu_3423_p2 <= (and_ln288_fu_3417_p2 xor BCi_9_fu_3357_p3);
    Ako_1_out <= Ako_1_fu_326;

    Ako_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Ako_1_out_ap_vld <= ap_const_logic_1;
        else 
            Ako_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Ako_4_fu_1741_p2 <= (ap_sig_allocacmp_Ako_1_load xor Do_fu_1211_p2);
    Ako_5_fu_3441_p2 <= (and_ln289_fu_3435_p2 xor BCo_9_fu_3363_p3);
    Aku_1_out <= Aku_1_fu_322;

    Aku_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Aku_1_out_ap_vld <= ap_const_logic_1;
        else 
            Aku_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Aku_4_fu_2201_p2 <= (ap_sig_allocacmp_Aku_1_load xor Du_fu_1237_p2);
    Aku_5_fu_3459_p2 <= (and_ln290_fu_3453_p2 xor BCu_9_fu_3369_p3);
    Ama_1_out <= Ama_1_fu_318;

    Ama_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Ama_1_out_ap_vld <= ap_const_logic_1;
        else 
            Ama_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Ama_4_fu_2229_p2 <= (ap_sig_allocacmp_Ama_1_load xor Da_fu_1133_p2);
    Ama_5_fu_3507_p2 <= (and_ln302_fu_3501_p2 xor BCa_15_fu_3465_p3);
    Ame_1_out <= Ame_1_fu_314;

    Ame_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Ame_1_out_ap_vld <= ap_const_logic_1;
        else 
            Ame_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Ame_4_fu_1541_p2 <= (ap_sig_allocacmp_Ame_1_load xor De_fu_1159_p2);
    Ame_5_fu_3525_p2 <= (and_ln303_fu_3519_p2 xor BCe_13_fu_3471_p3);
    Ami_1_out <= Ami_1_fu_310;

    Ami_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Ami_1_out_ap_vld <= ap_const_logic_1;
        else 
            Ami_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Ami_4_fu_1999_p2 <= (ap_sig_allocacmp_Ami_1_load xor Di_fu_1185_p2);
    Ami_5_fu_3543_p2 <= (and_ln304_fu_3537_p2 xor BCi_13_fu_3477_p3);
    Amo_1_out <= Amo_1_fu_306;

    Amo_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Amo_1_out_ap_vld <= ap_const_logic_1;
        else 
            Amo_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Amo_4_fu_1305_p2 <= (ap_sig_allocacmp_Amo_1_load xor Do_fu_1211_p2);
    Amo_5_fu_3561_p2 <= (and_ln305_fu_3555_p2 xor BCo_13_fu_3483_p3);
    Amu_1_out <= Amu_1_fu_302;

    Amu_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Amu_1_out_ap_vld <= ap_const_logic_1;
        else 
            Amu_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Amu_4_fu_1769_p2 <= (ap_sig_allocacmp_Amu_1_load xor Du_fu_1237_p2);
    Amu_5_fu_3579_p2 <= (and_ln306_fu_3573_p2 xor BCu_13_fu_3489_p3);
    Asa_1_out <= Asa_1_fu_298;

    Asa_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Asa_1_out_ap_vld <= ap_const_logic_1;
        else 
            Asa_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Asa_4_fu_1797_p2 <= (ap_sig_allocacmp_Asa_1_load xor Da_fu_1133_p2);
    Asa_5_fu_3627_p2 <= (and_ln318_fu_3621_p2 xor BCa_16_fu_3585_p3);
    Ase_1_out <= Ase_1_fu_294;

    Ase_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Ase_1_out_ap_vld <= ap_const_logic_1;
        else 
            Ase_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Ase_4_fu_2257_p2 <= (ap_sig_allocacmp_Ase_1_load xor De_fu_1159_p2);
    Ase_5_fu_3645_p2 <= (and_ln319_fu_3639_p2 xor BCe_14_fu_3591_p3);
    Asi_1_out <= Asi_1_fu_290;

    Asi_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Asi_1_out_ap_vld <= ap_const_logic_1;
        else 
            Asi_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Asi_4_fu_1569_p2 <= (ap_sig_allocacmp_Asi_1_load xor Di_fu_1185_p2);
    Asi_5_fu_3663_p2 <= (and_ln320_fu_3657_p2 xor BCi_14_fu_3597_p3);
    Aso_1_out <= Aso_1_fu_286;

    Aso_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Aso_1_out_ap_vld <= ap_const_logic_1;
        else 
            Aso_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Aso_4_fu_2027_p2 <= (ap_sig_allocacmp_Aso_1_load xor Do_fu_1211_p2);
    Aso_5_fu_3681_p2 <= (and_ln321_fu_3675_p2 xor BCo_14_fu_3603_p3);
    Asu_1_out <= Asu_1_fu_382;

    Asu_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln131_reg_4137, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln131_reg_4137 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Asu_1_out_ap_vld <= ap_const_logic_1;
        else 
            Asu_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Asu_4_fu_1333_p2 <= (ap_sig_allocacmp_Asu_1_load xor Du_fu_1237_p2);
    Asu_5_fu_3699_p2 <= (and_ln322_fu_3693_p2 xor BCu_14_fu_3609_p3);
    BCa_13_fu_2393_p2 <= (xor_ln230_fu_2375_p2 xor xor_ln230_2_fu_2387_p2);
    BCa_15_fu_3465_p3 <= (trunc_ln293_reg_4303 & lshr_ln48_reg_4308);
    BCa_16_fu_3585_p3 <= (trunc_ln309_reg_4353 & lshr_ln53_reg_4358);
    BCa_2_fu_1477_p3 <= (trunc_ln166_fu_1463_p1 & lshr_ln10_fu_1467_p4);
    BCa_3_fu_1705_p3 <= (trunc_ln182_fu_1693_p1 & tmp_16_fu_1697_p3);
    BCa_4_fu_1935_p3 <= (trunc_ln198_fu_1921_p1 & lshr_ln20_fu_1925_p4);
    BCa_5_fu_2165_p3 <= (trunc_ln214_fu_2151_p1 & lshr_ln25_fu_2155_p4);
    BCa_8_fu_3225_p3 <= (trunc_ln261_reg_4203 & lshr_ln39_reg_4208);
    BCa_9_fu_3345_p3 <= (trunc_ln277_reg_4253 & tmp_22_reg_4258);
    BCa_fu_1011_p2 <= (xor_ln135_2_fu_999_p2 xor xor_ln135_1_fu_1005_p2);
    BCe_12_fu_2417_p2 <= (xor_ln231_2_fu_2411_p2 xor xor_ln231_1_fu_2399_p2);
    BCe_13_fu_3471_p3 <= (trunc_ln295_reg_4313 & lshr_ln49_reg_4318);
    BCe_14_fu_3591_p3 <= (trunc_ln311_reg_4363 & lshr_ln54_reg_4368);
    BCe_1_fu_1269_p3 <= (trunc_ln151_fu_1255_p1 & lshr_ln6_fu_1259_p4);
    BCe_2_fu_1505_p3 <= (trunc_ln168_fu_1491_p1 & lshr_ln11_fu_1495_p4);
    BCe_3_fu_1733_p3 <= (trunc_ln184_fu_1719_p1 & lshr_ln16_fu_1723_p4);
    BCe_4_fu_1963_p3 <= (trunc_ln200_fu_1949_p1 & lshr_ln21_fu_1953_p4);
    BCe_5_fu_2193_p3 <= (trunc_ln216_fu_2179_p1 & lshr_ln26_fu_2183_p4);
    BCe_7_fu_3109_p3 <= (trunc_ln246_reg_4158 & lshr_ln35_reg_4163);
    BCe_8_fu_3231_p3 <= (trunc_ln263_reg_4213 & lshr_ln40_reg_4218);
    BCe_9_fu_3351_p3 <= (trunc_ln279_reg_4263 & lshr_ln45_reg_4268);
    BCe_fu_1035_p2 <= (xor_ln136_2_fu_1023_p2 xor xor_ln136_1_fu_1029_p2);
    BCi_12_fu_2441_p2 <= (xor_ln232_2_fu_2435_p2 xor xor_ln232_1_fu_2423_p2);
    BCi_13_fu_3477_p3 <= (trunc_ln297_reg_4323 & lshr_ln50_reg_4328);
    BCi_14_fu_3597_p3 <= (trunc_ln313_reg_4373 & lshr_ln55_reg_4378);
    BCi_1_fu_1297_p3 <= (trunc_ln153_fu_1283_p1 & lshr_ln7_fu_1287_p4);
    BCi_2_fu_1533_p3 <= (trunc_ln170_fu_1519_p1 & lshr_ln12_fu_1523_p4);
    BCi_3_fu_1761_p3 <= (trunc_ln186_fu_1747_p1 & lshr_ln17_fu_1751_p4);
    BCi_4_fu_1991_p3 <= (trunc_ln202_fu_1977_p1 & lshr_ln22_fu_1981_p4);
    BCi_5_fu_2221_p3 <= (trunc_ln218_fu_2207_p1 & lshr_ln27_fu_2211_p4);
    BCi_7_fu_3115_p3 <= (trunc_ln248_reg_4168 & lshr_ln36_reg_4173);
    BCi_8_fu_3237_p3 <= (trunc_ln265_reg_4223 & lshr_ln41_reg_4228);
    BCi_9_fu_3357_p3 <= (trunc_ln281_reg_4273 & lshr_ln_reg_4278);
    BCi_fu_1059_p2 <= (xor_ln137_2_fu_1053_p2 xor ap_sig_allocacmp_Abi_1_load);
    BCo_12_fu_2465_p2 <= (xor_ln233_fu_2447_p2 xor xor_ln233_2_fu_2459_p2);
    BCo_13_fu_3483_p3 <= (trunc_ln299_reg_4333 & lshr_ln51_reg_4338);
    BCo_14_fu_3603_p3 <= (trunc_ln315_reg_4383 & lshr_ln56_reg_4388);
    BCo_1_fu_1325_p3 <= (trunc_ln155_fu_1311_p1 & lshr_ln8_fu_1315_p4);
    BCo_2_fu_1561_p3 <= (trunc_ln172_fu_1547_p1 & lshr_ln13_fu_1551_p4);
    BCo_3_fu_1789_p3 <= (trunc_ln188_fu_1775_p1 & lshr_ln18_fu_1779_p4);
    BCo_4_fu_2019_p3 <= (trunc_ln204_fu_2005_p1 & lshr_ln23_fu_2009_p4);
    BCo_5_fu_2249_p3 <= (trunc_ln220_fu_2235_p1 & lshr_ln28_fu_2239_p4);
    BCo_7_fu_3121_p3 <= (trunc_ln250_reg_4178 & lshr_ln37_reg_4183);
    BCo_8_fu_3243_p3 <= (trunc_ln267_reg_4233 & lshr_ln42_reg_4238);
    BCo_9_fu_3363_p3 <= (trunc_ln283_reg_4283 & lshr_ln46_reg_4288);
    BCo_fu_1083_p2 <= (xor_ln138_2_fu_1077_p2 xor ap_sig_allocacmp_Abo_1_load);
    BCu_12_fu_2489_p2 <= (xor_ln234_fu_2471_p2 xor xor_ln234_2_fu_2483_p2);
    BCu_13_fu_3489_p3 <= (trunc_ln301_reg_4343 & lshr_ln52_reg_4348);
    BCu_14_fu_3609_p3 <= (trunc_ln317_reg_4393 & lshr_ln57_reg_4398);
    BCu_1_fu_1353_p3 <= (trunc_ln157_fu_1339_p1 & lshr_ln9_fu_1343_p4);
    BCu_2_fu_1589_p3 <= (trunc_ln174_fu_1575_p1 & lshr_ln14_fu_1579_p4);
    BCu_3_fu_1817_p3 <= (trunc_ln190_fu_1803_p1 & lshr_ln19_fu_1807_p4);
    BCu_4_fu_2047_p3 <= (trunc_ln206_fu_2033_p1 & lshr_ln24_fu_2037_p4);
    BCu_5_fu_2277_p3 <= (trunc_ln222_fu_2263_p1 & lshr_ln29_fu_2267_p4);
    BCu_7_fu_3127_p3 <= (trunc_ln252_reg_4188 & lshr_ln38_reg_4193);
    BCu_8_fu_3249_p3 <= (trunc_ln269_reg_4243 & lshr_ln43_reg_4248);
    BCu_9_fu_3369_p3 <= (trunc_ln285_reg_4293 & lshr_ln47_reg_4298);
    BCu_fu_1107_p2 <= (xor_ln139_2_fu_1095_p2 xor xor_ln139_1_fu_1101_p2);
    Da_2_fu_2515_p2 <= (or_ln5_fu_2507_p3 xor BCu_12_fu_2489_p2);
    Da_fu_1133_p2 <= (or_ln_fu_1125_p3 xor BCu_fu_1107_p2);
    De_2_fu_2541_p2 <= (or_ln6_fu_2533_p3 xor BCa_13_fu_2393_p2);
    De_fu_1159_p2 <= (or_ln1_fu_1151_p3 xor BCa_fu_1011_p2);
    Di_2_fu_2567_p2 <= (or_ln7_fu_2559_p3 xor BCe_12_fu_2417_p2);
    Di_fu_1185_p2 <= (or_ln2_fu_1177_p3 xor BCe_fu_1035_p2);
    Do_2_fu_2593_p2 <= (or_ln8_fu_2585_p3 xor BCi_12_fu_2441_p2);
    Do_fu_1211_p2 <= (or_ln3_fu_1203_p3 xor BCi_fu_1059_p2);
    Du_2_fu_2619_p2 <= (or_ln9_fu_2611_p3 xor BCo_12_fu_2465_p2);
    Du_fu_1237_p2 <= (or_ln4_fu_1229_p3 xor BCo_fu_1083_p2);
    Eba_4_fu_2625_p2 <= (Eba_fu_1379_p2 xor Da_2_fu_2515_p2);
    Eba_fu_1379_p2 <= (xor_ln159_1_fu_1373_p2 xor and_ln159_fu_1367_p2);
    Ebe_2_fu_2811_p2 <= (Ebe_fu_1397_p2 xor De_2_fu_2541_p2);
    Ebe_fu_1397_p2 <= (and_ln160_fu_1391_p2 xor BCe_1_fu_1269_p3);
    Ebi_2_fu_3009_p2 <= (Ebi_fu_1415_p2 xor Di_2_fu_2567_p2);
    Ebi_fu_1415_p2 <= (and_ln161_fu_1409_p2 xor BCi_1_fu_1297_p3);
    Ebo_2_fu_2711_p2 <= (Ebo_fu_1433_p2 xor Do_2_fu_2593_p2);
    Ebo_fu_1433_p2 <= (and_ln162_fu_1427_p2 xor BCo_1_fu_1325_p3);
    Ebu_2_fu_2909_p2 <= (Ebu_fu_1451_p2 xor Du_2_fu_2619_p2);
    Ebu_fu_1451_p2 <= (and_ln163_fu_1445_p2 xor BCu_1_fu_1353_p3);
    Ega_2_fu_2929_p2 <= (Ega_fu_1609_p2 xor Da_2_fu_2515_p2);
    Ega_fu_1609_p2 <= (and_ln175_fu_1603_p2 xor BCa_2_fu_1477_p3);
    Ege_2_fu_2631_p2 <= (Ege_fu_1627_p2 xor De_2_fu_2541_p2);
    Ege_fu_1627_p2 <= (and_ln176_fu_1621_p2 xor BCe_2_fu_1505_p3);
    Egi_2_fu_2829_p2 <= (Egi_fu_1645_p2 xor Di_2_fu_2567_p2);
    Egi_fu_1645_p2 <= (and_ln177_fu_1639_p2 xor BCi_2_fu_1533_p3);
    Ego_2_fu_3029_p2 <= (Ego_fu_1663_p2 xor Do_2_fu_2593_p2);
    Ego_fu_1663_p2 <= (and_ln178_fu_1657_p2 xor BCo_2_fu_1561_p3);
    Egu_2_fu_2731_p2 <= (Egu_fu_1681_p2 xor Du_2_fu_2619_p2);
    Egu_fu_1681_p2 <= (and_ln179_fu_1675_p2 xor BCu_2_fu_1589_p3);
    Eka_2_fu_2751_p2 <= (Eka_fu_1837_p2 xor Da_2_fu_2515_p2);
    Eka_fu_1837_p2 <= (and_ln191_fu_1831_p2 xor BCa_3_fu_1705_p3);
    Eke_2_fu_2949_p2 <= (Eke_fu_1855_p2 xor De_2_fu_2541_p2);
    Eke_fu_1855_p2 <= (and_ln192_fu_1849_p2 xor BCe_3_fu_1733_p3);
    Eki_2_fu_2651_p2 <= (Eki_fu_1873_p2 xor Di_2_fu_2567_p2);
    Eki_fu_1873_p2 <= (and_ln193_fu_1867_p2 xor BCi_3_fu_1761_p3);
    Eko_2_fu_2849_p2 <= (Eko_fu_1891_p2 xor Do_2_fu_2593_p2);
    Eko_fu_1891_p2 <= (and_ln194_fu_1885_p2 xor BCo_3_fu_1789_p3);
    Eku_2_fu_3049_p2 <= (Eku_fu_1909_p2 xor Du_2_fu_2619_p2);
    Eku_fu_1909_p2 <= (and_ln195_fu_1903_p2 xor BCu_3_fu_1817_p3);
    Ema_2_fu_3069_p2 <= (Ema_fu_2067_p2 xor Da_2_fu_2515_p2);
    Ema_fu_2067_p2 <= (and_ln207_fu_2061_p2 xor BCa_4_fu_1935_p3);
    Eme_2_fu_2771_p2 <= (Eme_fu_2085_p2 xor De_2_fu_2541_p2);
    Eme_fu_2085_p2 <= (and_ln208_fu_2079_p2 xor BCe_4_fu_1963_p3);
    Emi_2_fu_2969_p2 <= (Emi_fu_2103_p2 xor Di_2_fu_2567_p2);
    Emi_fu_2103_p2 <= (and_ln209_fu_2097_p2 xor BCi_4_fu_1991_p3);
    Emo_2_fu_2671_p2 <= (Emo_fu_2121_p2 xor Do_2_fu_2593_p2);
    Emo_fu_2121_p2 <= (and_ln210_fu_2115_p2 xor BCo_4_fu_2019_p3);
    Emu_2_fu_2869_p2 <= (Emu_fu_2139_p2 xor Du_2_fu_2619_p2);
    Emu_fu_2139_p2 <= (and_ln211_fu_2133_p2 xor BCu_4_fu_2047_p3);
    Esa_2_fu_2889_p2 <= (Esa_fu_2297_p2 xor Da_2_fu_2515_p2);
    Esa_fu_2297_p2 <= (and_ln223_fu_2291_p2 xor BCa_5_fu_2165_p3);
    Ese_2_fu_3089_p2 <= (Ese_fu_2315_p2 xor De_2_fu_2541_p2);
    Ese_fu_2315_p2 <= (and_ln224_fu_2309_p2 xor BCe_5_fu_2193_p3);
    Esi_2_fu_2791_p2 <= (Esi_fu_2333_p2 xor Di_2_fu_2567_p2);
    Esi_fu_2333_p2 <= (and_ln225_fu_2327_p2 xor BCi_5_fu_2221_p3);
    Eso_2_fu_2989_p2 <= (Eso_fu_2351_p2 xor Do_2_fu_2593_p2);
    Eso_fu_2351_p2 <= (and_ln226_fu_2345_p2 xor BCo_5_fu_2249_p3);
    Esu_2_fu_2691_p2 <= (Esu_fu_2369_p2 xor Du_2_fu_2619_p2);
    Esu_fu_2369_p2 <= (and_ln227_fu_2363_p2 xor BCu_5_fu_2277_p3);
    KeccakF_RoundConstants_address0 <= zext_ln254_fu_902_p1(5 - 1 downto 0);
    KeccakF_RoundConstants_address1 <= zext_ln131_fu_879_p1(5 - 1 downto 0);

    KeccakF_RoundConstants_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            KeccakF_RoundConstants_ce0_local <= ap_const_logic_1;
        else 
            KeccakF_RoundConstants_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    KeccakF_RoundConstants_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            KeccakF_RoundConstants_ce1_local <= ap_const_logic_1;
        else 
            KeccakF_RoundConstants_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    add_ln131_fu_907_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_round_2) + unsigned(ap_const_lv5_2));
    and_ln159_fu_1367_p2 <= (xor_ln159_fu_1361_p2 and BCi_1_fu_1297_p3);
    and_ln160_fu_1391_p2 <= (xor_ln160_fu_1385_p2 and BCo_1_fu_1325_p3);
    and_ln161_fu_1409_p2 <= (xor_ln161_fu_1403_p2 and BCu_1_fu_1353_p3);
    and_ln162_fu_1427_p2 <= (xor_ln162_fu_1421_p2 and Aba_7_fu_1243_p2);
    and_ln163_fu_1445_p2 <= (xor_ln163_fu_1439_p2 and BCe_1_fu_1269_p3);
    and_ln175_fu_1603_p2 <= (xor_ln175_fu_1597_p2 and BCi_2_fu_1533_p3);
    and_ln176_fu_1621_p2 <= (xor_ln176_fu_1615_p2 and BCo_2_fu_1561_p3);
    and_ln177_fu_1639_p2 <= (xor_ln177_fu_1633_p2 and BCu_2_fu_1589_p3);
    and_ln178_fu_1657_p2 <= (xor_ln178_fu_1651_p2 and BCa_2_fu_1477_p3);
    and_ln179_fu_1675_p2 <= (xor_ln179_fu_1669_p2 and BCe_2_fu_1505_p3);
    and_ln191_fu_1831_p2 <= (xor_ln191_fu_1825_p2 and BCi_3_fu_1761_p3);
    and_ln192_fu_1849_p2 <= (xor_ln192_fu_1843_p2 and BCo_3_fu_1789_p3);
    and_ln193_fu_1867_p2 <= (xor_ln193_fu_1861_p2 and BCu_3_fu_1817_p3);
    and_ln194_fu_1885_p2 <= (xor_ln194_fu_1879_p2 and BCa_3_fu_1705_p3);
    and_ln195_fu_1903_p2 <= (xor_ln195_fu_1897_p2 and BCe_3_fu_1733_p3);
    and_ln207_fu_2061_p2 <= (xor_ln207_fu_2055_p2 and BCi_4_fu_1991_p3);
    and_ln208_fu_2079_p2 <= (xor_ln208_fu_2073_p2 and BCo_4_fu_2019_p3);
    and_ln209_fu_2097_p2 <= (xor_ln209_fu_2091_p2 and BCu_4_fu_2047_p3);
    and_ln210_fu_2115_p2 <= (xor_ln210_fu_2109_p2 and BCa_4_fu_1935_p3);
    and_ln211_fu_2133_p2 <= (xor_ln211_fu_2127_p2 and BCe_4_fu_1963_p3);
    and_ln223_fu_2291_p2 <= (xor_ln223_fu_2285_p2 and BCi_5_fu_2221_p3);
    and_ln224_fu_2309_p2 <= (xor_ln224_fu_2303_p2 and BCo_5_fu_2249_p3);
    and_ln225_fu_2327_p2 <= (xor_ln225_fu_2321_p2 and BCu_5_fu_2277_p3);
    and_ln226_fu_2345_p2 <= (xor_ln226_fu_2339_p2 and BCa_5_fu_2165_p3);
    and_ln227_fu_2363_p2 <= (xor_ln227_fu_2357_p2 and BCe_5_fu_2193_p3);
    and_ln254_fu_3139_p2 <= (xor_ln254_fu_3133_p2 and BCi_7_fu_3115_p3);
    and_ln255_fu_3161_p2 <= (xor_ln255_fu_3155_p2 and BCo_7_fu_3121_p3);
    and_ln256_fu_3179_p2 <= (xor_ln256_fu_3173_p2 and BCu_7_fu_3127_p3);
    and_ln257_fu_3197_p2 <= (xor_ln257_fu_3191_p2 and Eba_4_reg_4151);
    and_ln258_fu_3213_p2 <= (xor_ln258_fu_3208_p2 and BCe_7_fu_3109_p3);
    and_ln270_fu_3261_p2 <= (xor_ln270_fu_3255_p2 and BCi_8_fu_3237_p3);
    and_ln271_fu_3279_p2 <= (xor_ln271_fu_3273_p2 and BCo_8_fu_3243_p3);
    and_ln272_fu_3297_p2 <= (xor_ln272_fu_3291_p2 and BCu_8_fu_3249_p3);
    and_ln273_fu_3315_p2 <= (xor_ln273_fu_3309_p2 and BCa_8_fu_3225_p3);
    and_ln274_fu_3333_p2 <= (xor_ln274_fu_3327_p2 and BCe_8_fu_3231_p3);
    and_ln286_fu_3381_p2 <= (xor_ln286_fu_3375_p2 and BCi_9_fu_3357_p3);
    and_ln287_fu_3399_p2 <= (xor_ln287_fu_3393_p2 and BCo_9_fu_3363_p3);
    and_ln288_fu_3417_p2 <= (xor_ln288_fu_3411_p2 and BCu_9_fu_3369_p3);
    and_ln289_fu_3435_p2 <= (xor_ln289_fu_3429_p2 and BCa_9_fu_3345_p3);
    and_ln290_fu_3453_p2 <= (xor_ln290_fu_3447_p2 and BCe_9_fu_3351_p3);
    and_ln302_fu_3501_p2 <= (xor_ln302_fu_3495_p2 and BCi_13_fu_3477_p3);
    and_ln303_fu_3519_p2 <= (xor_ln303_fu_3513_p2 and BCo_13_fu_3483_p3);
    and_ln304_fu_3537_p2 <= (xor_ln304_fu_3531_p2 and BCu_13_fu_3489_p3);
    and_ln305_fu_3555_p2 <= (xor_ln305_fu_3549_p2 and BCa_15_fu_3465_p3);
    and_ln306_fu_3573_p2 <= (xor_ln306_fu_3567_p2 and BCe_13_fu_3471_p3);
    and_ln318_fu_3621_p2 <= (xor_ln318_fu_3615_p2 and BCi_14_fu_3597_p3);
    and_ln319_fu_3639_p2 <= (xor_ln319_fu_3633_p2 and BCo_14_fu_3603_p3);
    and_ln320_fu_3657_p2 <= (xor_ln320_fu_3651_p2 and BCu_14_fu_3609_p3);
    and_ln321_fu_3675_p2 <= (xor_ln321_fu_3669_p2 and BCa_16_fu_3585_p3);
    and_ln322_fu_3693_p2 <= (xor_ln322_fu_3687_p2 and BCe_14_fu_3591_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln131_fu_873_p2)
    begin
        if (((icmp_ln131_fu_873_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready_pp0_iter1_reg, ap_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_Aba_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Aba_1_fu_378, Aba_6_fu_3149_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Aba_1_load <= Aba_6_fu_3149_p2;
        else 
            ap_sig_allocacmp_Aba_1_load <= Aba_1_fu_378;
        end if; 
    end process;


    ap_sig_allocacmp_Abe_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Abe_1_fu_374, Abe_5_fu_3167_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Abe_1_load <= Abe_5_fu_3167_p2;
        else 
            ap_sig_allocacmp_Abe_1_load <= Abe_1_fu_374;
        end if; 
    end process;


    ap_sig_allocacmp_Abi_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Abi_1_fu_370, Abi_5_fu_3185_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Abi_1_load <= Abi_5_fu_3185_p2;
        else 
            ap_sig_allocacmp_Abi_1_load <= Abi_1_fu_370;
        end if; 
    end process;


    ap_sig_allocacmp_Abo_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Abo_1_fu_366, Abo_5_fu_3202_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Abo_1_load <= Abo_5_fu_3202_p2;
        else 
            ap_sig_allocacmp_Abo_1_load <= Abo_1_fu_366;
        end if; 
    end process;


    ap_sig_allocacmp_Abu_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Abu_1_fu_362, Abu_5_fu_3219_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Abu_1_load <= Abu_5_fu_3219_p2;
        else 
            ap_sig_allocacmp_Abu_1_load <= Abu_1_fu_362;
        end if; 
    end process;


    ap_sig_allocacmp_Aga_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Aga_1_fu_358, Aga_5_fu_3267_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Aga_1_load <= Aga_5_fu_3267_p2;
        else 
            ap_sig_allocacmp_Aga_1_load <= Aga_1_fu_358;
        end if; 
    end process;


    ap_sig_allocacmp_Age_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Age_1_fu_354, Age_5_fu_3285_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Age_1_load <= Age_5_fu_3285_p2;
        else 
            ap_sig_allocacmp_Age_1_load <= Age_1_fu_354;
        end if; 
    end process;


    ap_sig_allocacmp_Agi_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Agi_1_fu_350, Agi_5_fu_3303_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Agi_1_load <= Agi_5_fu_3303_p2;
        else 
            ap_sig_allocacmp_Agi_1_load <= Agi_1_fu_350;
        end if; 
    end process;


    ap_sig_allocacmp_Ago_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Ago_1_fu_346, Ago_5_fu_3321_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Ago_1_load <= Ago_5_fu_3321_p2;
        else 
            ap_sig_allocacmp_Ago_1_load <= Ago_1_fu_346;
        end if; 
    end process;


    ap_sig_allocacmp_Agu_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Agu_1_fu_342, Agu_5_fu_3339_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Agu_1_load <= Agu_5_fu_3339_p2;
        else 
            ap_sig_allocacmp_Agu_1_load <= Agu_1_fu_342;
        end if; 
    end process;


    ap_sig_allocacmp_Aka_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Aka_1_fu_338, Aka_5_fu_3387_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Aka_1_load <= Aka_5_fu_3387_p2;
        else 
            ap_sig_allocacmp_Aka_1_load <= Aka_1_fu_338;
        end if; 
    end process;


    ap_sig_allocacmp_Ake_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Ake_1_fu_334, Ake_5_fu_3405_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Ake_1_load <= Ake_5_fu_3405_p2;
        else 
            ap_sig_allocacmp_Ake_1_load <= Ake_1_fu_334;
        end if; 
    end process;


    ap_sig_allocacmp_Aki_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Aki_1_fu_330, Aki_5_fu_3423_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Aki_1_load <= Aki_5_fu_3423_p2;
        else 
            ap_sig_allocacmp_Aki_1_load <= Aki_1_fu_330;
        end if; 
    end process;


    ap_sig_allocacmp_Ako_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Ako_1_fu_326, Ako_5_fu_3441_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Ako_1_load <= Ako_5_fu_3441_p2;
        else 
            ap_sig_allocacmp_Ako_1_load <= Ako_1_fu_326;
        end if; 
    end process;


    ap_sig_allocacmp_Aku_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Aku_1_fu_322, Aku_5_fu_3459_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Aku_1_load <= Aku_5_fu_3459_p2;
        else 
            ap_sig_allocacmp_Aku_1_load <= Aku_1_fu_322;
        end if; 
    end process;


    ap_sig_allocacmp_Ama_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Ama_1_fu_318, Ama_5_fu_3507_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Ama_1_load <= Ama_5_fu_3507_p2;
        else 
            ap_sig_allocacmp_Ama_1_load <= Ama_1_fu_318;
        end if; 
    end process;


    ap_sig_allocacmp_Ame_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Ame_1_fu_314, Ame_5_fu_3525_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Ame_1_load <= Ame_5_fu_3525_p2;
        else 
            ap_sig_allocacmp_Ame_1_load <= Ame_1_fu_314;
        end if; 
    end process;


    ap_sig_allocacmp_Ami_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Ami_1_fu_310, Ami_5_fu_3543_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Ami_1_load <= Ami_5_fu_3543_p2;
        else 
            ap_sig_allocacmp_Ami_1_load <= Ami_1_fu_310;
        end if; 
    end process;


    ap_sig_allocacmp_Amo_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Amo_1_fu_306, Amo_5_fu_3561_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Amo_1_load <= Amo_5_fu_3561_p2;
        else 
            ap_sig_allocacmp_Amo_1_load <= Amo_1_fu_306;
        end if; 
    end process;


    ap_sig_allocacmp_Amu_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Amu_1_fu_302, Amu_5_fu_3579_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Amu_1_load <= Amu_5_fu_3579_p2;
        else 
            ap_sig_allocacmp_Amu_1_load <= Amu_1_fu_302;
        end if; 
    end process;


    ap_sig_allocacmp_Asa_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Asa_1_fu_298, Asa_5_fu_3627_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Asa_1_load <= Asa_5_fu_3627_p2;
        else 
            ap_sig_allocacmp_Asa_1_load <= Asa_1_fu_298;
        end if; 
    end process;


    ap_sig_allocacmp_Ase_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Ase_1_fu_294, Ase_5_fu_3645_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Ase_1_load <= Ase_5_fu_3645_p2;
        else 
            ap_sig_allocacmp_Ase_1_load <= Ase_1_fu_294;
        end if; 
    end process;


    ap_sig_allocacmp_Asi_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Asi_1_fu_290, Asi_5_fu_3663_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Asi_1_load <= Asi_5_fu_3663_p2;
        else 
            ap_sig_allocacmp_Asi_1_load <= Asi_1_fu_290;
        end if; 
    end process;


    ap_sig_allocacmp_Aso_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Aso_1_fu_286, Aso_5_fu_3681_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Aso_1_load <= Aso_5_fu_3681_p2;
        else 
            ap_sig_allocacmp_Aso_1_load <= Aso_1_fu_286;
        end if; 
    end process;


    ap_sig_allocacmp_Asu_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Asu_1_fu_382, Asu_5_fu_3699_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Asu_1_load <= Asu_5_fu_3699_p2;
        else 
            ap_sig_allocacmp_Asu_1_load <= Asu_1_fu_382;
        end if; 
    end process;


    ap_sig_allocacmp_round_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, round_fu_386)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_round_2 <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_round_2 <= round_fu_386;
        end if; 
    end process;

    icmp_ln131_fu_873_p2 <= "1" when (unsigned(ap_sig_allocacmp_round_2) < unsigned(ap_const_lv5_18)) else "0";
    lshr_ln10_fu_1467_p4 <= Abo_4_fu_1457_p2(63 downto 36);
    lshr_ln11_fu_1495_p4 <= Agu_4_fu_1485_p2(63 downto 44);
    lshr_ln12_fu_1523_p4 <= Aka_4_fu_1513_p2(63 downto 61);
    lshr_ln13_fu_1551_p4 <= Ame_4_fu_1541_p2(63 downto 19);
    lshr_ln14_fu_1579_p4 <= Asi_4_fu_1569_p2(63 downto 3);
    lshr_ln16_fu_1723_p4 <= Agi_4_fu_1713_p2(63 downto 58);
    lshr_ln17_fu_1751_p4 <= Ako_4_fu_1741_p2(63 downto 39);
    lshr_ln18_fu_1779_p4 <= Amu_4_fu_1769_p2(63 downto 56);
    lshr_ln19_fu_1807_p4 <= Asa_4_fu_1797_p2(63 downto 46);
    lshr_ln20_fu_1925_p4 <= Abu_4_fu_1915_p2(63 downto 37);
    lshr_ln21_fu_1953_p4 <= Aga_4_fu_1943_p2(63 downto 28);
    lshr_ln22_fu_1981_p4 <= Ake_4_fu_1971_p2(63 downto 54);
    lshr_ln23_fu_2009_p4 <= Ami_4_fu_1999_p2(63 downto 49);
    lshr_ln24_fu_2037_p4 <= Aso_4_fu_2027_p2(63 downto 8);
    lshr_ln25_fu_2155_p4 <= Abi_4_fu_2145_p2(63 downto 2);
    lshr_ln26_fu_2183_p4 <= Ago_4_fu_2173_p2(63 downto 9);
    lshr_ln27_fu_2211_p4 <= Aku_4_fu_2201_p2(63 downto 25);
    lshr_ln28_fu_2239_p4 <= Ama_4_fu_2229_p2(63 downto 23);
    lshr_ln29_fu_2267_p4 <= Ase_4_fu_2257_p2(63 downto 62);
    lshr_ln6_fu_1259_p4 <= Age_4_fu_1249_p2(63 downto 20);
    lshr_ln7_fu_1287_p4 <= Aki_4_fu_1277_p2(63 downto 21);
    lshr_ln8_fu_1315_p4 <= Amo_4_fu_1305_p2(63 downto 43);
    lshr_ln9_fu_1343_p4 <= Asu_4_fu_1333_p2(63 downto 50);
    or_ln10_fu_894_p3 <= (tmp_s_fu_884_p4 & ap_const_lv1_1);
    or_ln1_fu_1151_p3 <= (trunc_ln143_fu_1139_p1 & tmp_12_fu_1143_p3);
    or_ln2_fu_1177_p3 <= (trunc_ln144_fu_1165_p1 & tmp_13_fu_1169_p3);
    or_ln3_fu_1203_p3 <= (trunc_ln145_fu_1191_p1 & tmp_14_fu_1195_p3);
    or_ln4_fu_1229_p3 <= (trunc_ln146_fu_1217_p1 & tmp_15_fu_1221_p3);
    or_ln5_fu_2507_p3 <= (trunc_ln237_fu_2495_p1 & tmp_17_fu_2499_p3);
    or_ln6_fu_2533_p3 <= (trunc_ln238_fu_2521_p1 & tmp_18_fu_2525_p3);
    or_ln7_fu_2559_p3 <= (trunc_ln239_fu_2547_p1 & tmp_19_fu_2551_p3);
    or_ln8_fu_2585_p3 <= (trunc_ln240_fu_2573_p1 & tmp_20_fu_2577_p3);
    or_ln9_fu_2611_p3 <= (trunc_ln241_fu_2599_p1 & tmp_21_fu_2603_p3);
    or_ln_fu_1125_p3 <= (trunc_ln142_fu_1113_p1 & tmp_fu_1117_p3);
    tmp_12_fu_1143_p3 <= BCi_fu_1059_p2(63 downto 63);
    tmp_13_fu_1169_p3 <= BCo_fu_1083_p2(63 downto 63);
    tmp_14_fu_1195_p3 <= BCu_fu_1107_p2(63 downto 63);
    tmp_15_fu_1221_p3 <= BCa_fu_1011_p2(63 downto 63);
    tmp_16_fu_1697_p3 <= Abe_4_fu_1687_p2(63 downto 63);
    tmp_17_fu_2499_p3 <= BCe_12_fu_2417_p2(63 downto 63);
    tmp_18_fu_2525_p3 <= BCi_12_fu_2441_p2(63 downto 63);
    tmp_19_fu_2551_p3 <= BCo_12_fu_2465_p2(63 downto 63);
    tmp_20_fu_2577_p3 <= BCu_12_fu_2489_p2(63 downto 63);
    tmp_21_fu_2603_p3 <= BCa_13_fu_2393_p2(63 downto 63);
    tmp_fu_1117_p3 <= BCe_fu_1035_p2(63 downto 63);
    tmp_s_fu_884_p4 <= ap_sig_allocacmp_round_2(4 downto 1);
    trunc_ln142_fu_1113_p1 <= BCe_fu_1035_p2(63 - 1 downto 0);
    trunc_ln143_fu_1139_p1 <= BCi_fu_1059_p2(63 - 1 downto 0);
    trunc_ln144_fu_1165_p1 <= BCo_fu_1083_p2(63 - 1 downto 0);
    trunc_ln145_fu_1191_p1 <= BCu_fu_1107_p2(63 - 1 downto 0);
    trunc_ln146_fu_1217_p1 <= BCa_fu_1011_p2(63 - 1 downto 0);
    trunc_ln151_fu_1255_p1 <= Age_4_fu_1249_p2(20 - 1 downto 0);
    trunc_ln153_fu_1283_p1 <= Aki_4_fu_1277_p2(21 - 1 downto 0);
    trunc_ln155_fu_1311_p1 <= Amo_4_fu_1305_p2(43 - 1 downto 0);
    trunc_ln157_fu_1339_p1 <= Asu_4_fu_1333_p2(50 - 1 downto 0);
    trunc_ln166_fu_1463_p1 <= Abo_4_fu_1457_p2(36 - 1 downto 0);
    trunc_ln168_fu_1491_p1 <= Agu_4_fu_1485_p2(44 - 1 downto 0);
    trunc_ln170_fu_1519_p1 <= Aka_4_fu_1513_p2(61 - 1 downto 0);
    trunc_ln172_fu_1547_p1 <= Ame_4_fu_1541_p2(19 - 1 downto 0);
    trunc_ln174_fu_1575_p1 <= Asi_4_fu_1569_p2(3 - 1 downto 0);
    trunc_ln182_fu_1693_p1 <= Abe_4_fu_1687_p2(63 - 1 downto 0);
    trunc_ln184_fu_1719_p1 <= Agi_4_fu_1713_p2(58 - 1 downto 0);
    trunc_ln186_fu_1747_p1 <= Ako_4_fu_1741_p2(39 - 1 downto 0);
    trunc_ln188_fu_1775_p1 <= Amu_4_fu_1769_p2(56 - 1 downto 0);
    trunc_ln190_fu_1803_p1 <= Asa_4_fu_1797_p2(46 - 1 downto 0);
    trunc_ln198_fu_1921_p1 <= Abu_4_fu_1915_p2(37 - 1 downto 0);
    trunc_ln200_fu_1949_p1 <= Aga_4_fu_1943_p2(28 - 1 downto 0);
    trunc_ln202_fu_1977_p1 <= Ake_4_fu_1971_p2(54 - 1 downto 0);
    trunc_ln204_fu_2005_p1 <= Ami_4_fu_1999_p2(49 - 1 downto 0);
    trunc_ln206_fu_2033_p1 <= Aso_4_fu_2027_p2(8 - 1 downto 0);
    trunc_ln214_fu_2151_p1 <= Abi_4_fu_2145_p2(2 - 1 downto 0);
    trunc_ln216_fu_2179_p1 <= Ago_4_fu_2173_p2(9 - 1 downto 0);
    trunc_ln218_fu_2207_p1 <= Aku_4_fu_2201_p2(25 - 1 downto 0);
    trunc_ln220_fu_2235_p1 <= Ama_4_fu_2229_p2(23 - 1 downto 0);
    trunc_ln222_fu_2263_p1 <= Ase_4_fu_2257_p2(62 - 1 downto 0);
    trunc_ln237_fu_2495_p1 <= BCe_12_fu_2417_p2(63 - 1 downto 0);
    trunc_ln238_fu_2521_p1 <= BCi_12_fu_2441_p2(63 - 1 downto 0);
    trunc_ln239_fu_2547_p1 <= BCo_12_fu_2465_p2(63 - 1 downto 0);
    trunc_ln240_fu_2573_p1 <= BCu_12_fu_2489_p2(63 - 1 downto 0);
    trunc_ln241_fu_2599_p1 <= BCa_13_fu_2393_p2(63 - 1 downto 0);
    trunc_ln246_fu_2637_p1 <= Ege_2_fu_2631_p2(20 - 1 downto 0);
    trunc_ln248_fu_2657_p1 <= Eki_2_fu_2651_p2(21 - 1 downto 0);
    trunc_ln250_fu_2677_p1 <= Emo_2_fu_2671_p2(43 - 1 downto 0);
    trunc_ln252_fu_2697_p1 <= Esu_2_fu_2691_p2(50 - 1 downto 0);
    trunc_ln261_fu_2717_p1 <= Ebo_2_fu_2711_p2(36 - 1 downto 0);
    trunc_ln263_fu_2737_p1 <= Egu_2_fu_2731_p2(44 - 1 downto 0);
    trunc_ln265_fu_2757_p1 <= Eka_2_fu_2751_p2(61 - 1 downto 0);
    trunc_ln267_fu_2777_p1 <= Eme_2_fu_2771_p2(19 - 1 downto 0);
    trunc_ln269_fu_2797_p1 <= Esi_2_fu_2791_p2(3 - 1 downto 0);
    trunc_ln277_fu_2817_p1 <= Ebe_2_fu_2811_p2(63 - 1 downto 0);
    trunc_ln279_fu_2835_p1 <= Egi_2_fu_2829_p2(58 - 1 downto 0);
    trunc_ln281_fu_2855_p1 <= Eko_2_fu_2849_p2(39 - 1 downto 0);
    trunc_ln283_fu_2875_p1 <= Emu_2_fu_2869_p2(56 - 1 downto 0);
    trunc_ln285_fu_2895_p1 <= Esa_2_fu_2889_p2(46 - 1 downto 0);
    trunc_ln293_fu_2915_p1 <= Ebu_2_fu_2909_p2(37 - 1 downto 0);
    trunc_ln295_fu_2935_p1 <= Ega_2_fu_2929_p2(28 - 1 downto 0);
    trunc_ln297_fu_2955_p1 <= Eke_2_fu_2949_p2(54 - 1 downto 0);
    trunc_ln299_fu_2975_p1 <= Emi_2_fu_2969_p2(49 - 1 downto 0);
    trunc_ln301_fu_2995_p1 <= Eso_2_fu_2989_p2(8 - 1 downto 0);
    trunc_ln309_fu_3015_p1 <= Ebi_2_fu_3009_p2(2 - 1 downto 0);
    trunc_ln311_fu_3035_p1 <= Ego_2_fu_3029_p2(9 - 1 downto 0);
    trunc_ln313_fu_3055_p1 <= Eku_2_fu_3049_p2(25 - 1 downto 0);
    trunc_ln315_fu_3075_p1 <= Ema_2_fu_3069_p2(23 - 1 downto 0);
    trunc_ln317_fu_3095_p1 <= Ese_2_fu_3089_p2(62 - 1 downto 0);
    xor_ln135_1_fu_1005_p2 <= (ap_sig_allocacmp_Asa_1_load xor ap_sig_allocacmp_Aga_1_load);
    xor_ln135_2_fu_999_p2 <= (xor_ln135_fu_993_p2 xor ap_sig_allocacmp_Aba_1_load);
    xor_ln135_fu_993_p2 <= (ap_sig_allocacmp_Ama_1_load xor ap_sig_allocacmp_Aka_1_load);
    xor_ln136_1_fu_1029_p2 <= (ap_sig_allocacmp_Ase_1_load xor ap_sig_allocacmp_Age_1_load);
    xor_ln136_2_fu_1023_p2 <= (xor_ln136_fu_1017_p2 xor ap_sig_allocacmp_Abe_1_load);
    xor_ln136_fu_1017_p2 <= (ap_sig_allocacmp_Ame_1_load xor ap_sig_allocacmp_Ake_1_load);
    xor_ln137_1_fu_1047_p2 <= (ap_sig_allocacmp_Asi_1_load xor ap_sig_allocacmp_Agi_1_load);
    xor_ln137_2_fu_1053_p2 <= (xor_ln137_fu_1041_p2 xor xor_ln137_1_fu_1047_p2);
    xor_ln137_fu_1041_p2 <= (ap_sig_allocacmp_Ami_1_load xor ap_sig_allocacmp_Aki_1_load);
    xor_ln138_1_fu_1071_p2 <= (ap_sig_allocacmp_Aso_1_load xor ap_sig_allocacmp_Ago_1_load);
    xor_ln138_2_fu_1077_p2 <= (xor_ln138_fu_1065_p2 xor xor_ln138_1_fu_1071_p2);
    xor_ln138_fu_1065_p2 <= (ap_sig_allocacmp_Amo_1_load xor ap_sig_allocacmp_Ako_1_load);
    xor_ln139_1_fu_1101_p2 <= (ap_sig_allocacmp_Amu_1_load xor ap_sig_allocacmp_Abu_1_load);
    xor_ln139_2_fu_1095_p2 <= (xor_ln139_fu_1089_p2 xor ap_sig_allocacmp_Asu_1_load);
    xor_ln139_fu_1089_p2 <= (ap_sig_allocacmp_Aku_1_load xor ap_sig_allocacmp_Agu_1_load);
    xor_ln159_1_fu_1373_p2 <= (KeccakF_RoundConstants_q1 xor Aba_7_fu_1243_p2);
    xor_ln159_fu_1361_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_1_fu_1269_p3);
    xor_ln160_fu_1385_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_1_fu_1297_p3);
    xor_ln161_fu_1403_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_1_fu_1325_p3);
    xor_ln162_fu_1421_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_1_fu_1353_p3);
    xor_ln163_fu_1439_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor Aba_7_fu_1243_p2);
    xor_ln175_fu_1597_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_2_fu_1505_p3);
    xor_ln176_fu_1615_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_2_fu_1533_p3);
    xor_ln177_fu_1633_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_2_fu_1561_p3);
    xor_ln178_fu_1651_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_2_fu_1589_p3);
    xor_ln179_fu_1669_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCa_2_fu_1477_p3);
    xor_ln191_fu_1825_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_3_fu_1733_p3);
    xor_ln192_fu_1843_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_3_fu_1761_p3);
    xor_ln193_fu_1861_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_3_fu_1789_p3);
    xor_ln194_fu_1879_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_3_fu_1817_p3);
    xor_ln195_fu_1897_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCa_3_fu_1705_p3);
    xor_ln207_fu_2055_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_4_fu_1963_p3);
    xor_ln208_fu_2073_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_4_fu_1991_p3);
    xor_ln209_fu_2091_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_4_fu_2019_p3);
    xor_ln210_fu_2109_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_4_fu_2047_p3);
    xor_ln211_fu_2127_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCa_4_fu_1935_p3);
    xor_ln223_fu_2285_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_5_fu_2193_p3);
    xor_ln224_fu_2303_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_5_fu_2221_p3);
    xor_ln225_fu_2321_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_5_fu_2249_p3);
    xor_ln226_fu_2339_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_5_fu_2277_p3);
    xor_ln227_fu_2357_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCa_5_fu_2165_p3);
    xor_ln230_1_fu_2381_p2 <= (Ema_fu_2067_p2 xor Eba_fu_1379_p2);
    xor_ln230_2_fu_2387_p2 <= (xor_ln230_1_fu_2381_p2 xor Ega_fu_1609_p2);
    xor_ln230_fu_2375_p2 <= (Esa_fu_2297_p2 xor Eka_fu_1837_p2);
    xor_ln231_1_fu_2399_p2 <= (Ege_fu_1627_p2 xor Ebe_fu_1397_p2);
    xor_ln231_2_fu_2411_p2 <= (xor_ln231_fu_2405_p2 xor Ese_fu_2315_p2);
    xor_ln231_fu_2405_p2 <= (Eme_fu_2085_p2 xor Eke_fu_1855_p2);
    xor_ln232_1_fu_2423_p2 <= (Esi_fu_2333_p2 xor Emi_fu_2103_p2);
    xor_ln232_2_fu_2435_p2 <= (xor_ln232_fu_2429_p2 xor Eki_fu_1873_p2);
    xor_ln232_fu_2429_p2 <= (Egi_fu_1645_p2 xor Ebi_fu_1415_p2);
    xor_ln233_1_fu_2453_p2 <= (Eso_fu_2351_p2 xor Ebo_fu_1433_p2);
    xor_ln233_2_fu_2459_p2 <= (xor_ln233_1_fu_2453_p2 xor Emo_fu_2121_p2);
    xor_ln233_fu_2447_p2 <= (Eko_fu_1891_p2 xor Ego_fu_1663_p2);
    xor_ln234_1_fu_2477_p2 <= (Eku_fu_1909_p2 xor Egu_fu_1681_p2);
    xor_ln234_2_fu_2483_p2 <= (xor_ln234_1_fu_2477_p2 xor Emu_fu_2139_p2);
    xor_ln234_fu_2471_p2 <= (Esu_fu_2369_p2 xor Ebu_fu_1451_p2);
    xor_ln254_1_fu_3145_p2 <= (KeccakF_RoundConstants_load_1_reg_4198 xor Eba_4_reg_4151);
    xor_ln254_fu_3133_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_7_fu_3109_p3);
    xor_ln255_fu_3155_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_7_fu_3115_p3);
    xor_ln256_fu_3173_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_7_fu_3121_p3);
    xor_ln257_fu_3191_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_7_fu_3127_p3);
    xor_ln258_fu_3208_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor Eba_4_reg_4151);
    xor_ln270_fu_3255_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_8_fu_3231_p3);
    xor_ln271_fu_3273_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_8_fu_3237_p3);
    xor_ln272_fu_3291_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_8_fu_3243_p3);
    xor_ln273_fu_3309_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_8_fu_3249_p3);
    xor_ln274_fu_3327_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCa_8_fu_3225_p3);
    xor_ln286_fu_3375_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_9_fu_3351_p3);
    xor_ln287_fu_3393_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_9_fu_3357_p3);
    xor_ln288_fu_3411_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_9_fu_3363_p3);
    xor_ln289_fu_3429_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_9_fu_3369_p3);
    xor_ln290_fu_3447_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCa_9_fu_3345_p3);
    xor_ln302_fu_3495_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_13_fu_3471_p3);
    xor_ln303_fu_3513_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_13_fu_3477_p3);
    xor_ln304_fu_3531_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_13_fu_3483_p3);
    xor_ln305_fu_3549_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_13_fu_3489_p3);
    xor_ln306_fu_3567_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCa_15_fu_3465_p3);
    xor_ln318_fu_3615_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_14_fu_3591_p3);
    xor_ln319_fu_3633_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_14_fu_3597_p3);
    xor_ln320_fu_3651_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_14_fu_3603_p3);
    xor_ln321_fu_3669_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_14_fu_3609_p3);
    xor_ln322_fu_3687_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCa_16_fu_3585_p3);
    zext_ln131_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_round_2),64));
    zext_ln254_fu_902_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln10_fu_894_p3),64));
end behav;
