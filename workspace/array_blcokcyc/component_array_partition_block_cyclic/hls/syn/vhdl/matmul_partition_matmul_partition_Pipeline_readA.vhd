-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_partition_matmul_partition_Pipeline_readA is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_0_AWREADY : IN STD_LOGIC;
    m_axi_gmem_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_WVALID : OUT STD_LOGIC;
    m_axi_gmem_0_WREADY : IN STD_LOGIC;
    m_axi_gmem_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_WLAST : OUT STD_LOGIC;
    m_axi_gmem_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_0_ARREADY : IN STD_LOGIC;
    m_axi_gmem_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_RVALID : IN STD_LOGIC;
    m_axi_gmem_0_RREADY : OUT STD_LOGIC;
    m_axi_gmem_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_0_RLAST : IN STD_LOGIC;
    m_axi_gmem_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_BVALID : IN STD_LOGIC;
    m_axi_gmem_0_BREADY : OUT STD_LOGIC;
    m_axi_gmem_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    empty : IN STD_LOGIC_VECTOR (30 downto 0);
    sext_ln46 : IN STD_LOGIC_VECTOR (61 downto 0);
    A_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_15_ce0 : OUT STD_LOGIC;
    A_15_we0 : OUT STD_LOGIC;
    A_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_14_ce0 : OUT STD_LOGIC;
    A_14_we0 : OUT STD_LOGIC;
    A_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_13_ce0 : OUT STD_LOGIC;
    A_13_we0 : OUT STD_LOGIC;
    A_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_12_ce0 : OUT STD_LOGIC;
    A_12_we0 : OUT STD_LOGIC;
    A_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_11_ce0 : OUT STD_LOGIC;
    A_11_we0 : OUT STD_LOGIC;
    A_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_10_ce0 : OUT STD_LOGIC;
    A_10_we0 : OUT STD_LOGIC;
    A_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_9_ce0 : OUT STD_LOGIC;
    A_9_we0 : OUT STD_LOGIC;
    A_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_8_ce0 : OUT STD_LOGIC;
    A_8_we0 : OUT STD_LOGIC;
    A_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_7_ce0 : OUT STD_LOGIC;
    A_7_we0 : OUT STD_LOGIC;
    A_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_6_ce0 : OUT STD_LOGIC;
    A_6_we0 : OUT STD_LOGIC;
    A_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_5_ce0 : OUT STD_LOGIC;
    A_5_we0 : OUT STD_LOGIC;
    A_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_4_ce0 : OUT STD_LOGIC;
    A_4_we0 : OUT STD_LOGIC;
    A_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_3_ce0 : OUT STD_LOGIC;
    A_3_we0 : OUT STD_LOGIC;
    A_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_2_ce0 : OUT STD_LOGIC;
    A_2_we0 : OUT STD_LOGIC;
    A_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_1_ce0 : OUT STD_LOGIC;
    A_1_we0 : OUT STD_LOGIC;
    A_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_we0 : OUT STD_LOGIC;
    A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dim : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of matmul_partition_matmul_partition_Pipeline_readA is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln46_fu_389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage0_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln48_fu_437_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln48_reg_550 : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_addr_read_reg_554 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln_reg_574 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_6_fu_481_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_6_reg_579 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln52_fu_492_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_grp0 : BOOLEAN;
    signal j_fu_124 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_sig_allocacmp_j_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal i_fu_128 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal i_2_fu_445_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal itr_fu_132 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal add_ln46_fu_395_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_allocacmp_itr_2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal A_14_we0_local : STD_LOGIC;
    signal A_14_ce0_local : STD_LOGIC;
    signal A_13_we0_local : STD_LOGIC;
    signal A_13_ce0_local : STD_LOGIC;
    signal A_12_we0_local : STD_LOGIC;
    signal A_12_ce0_local : STD_LOGIC;
    signal A_11_we0_local : STD_LOGIC;
    signal A_11_ce0_local : STD_LOGIC;
    signal A_10_we0_local : STD_LOGIC;
    signal A_10_ce0_local : STD_LOGIC;
    signal A_9_we0_local : STD_LOGIC;
    signal A_9_ce0_local : STD_LOGIC;
    signal A_8_we0_local : STD_LOGIC;
    signal A_8_ce0_local : STD_LOGIC;
    signal A_7_we0_local : STD_LOGIC;
    signal A_7_ce0_local : STD_LOGIC;
    signal A_6_we0_local : STD_LOGIC;
    signal A_6_ce0_local : STD_LOGIC;
    signal A_5_we0_local : STD_LOGIC;
    signal A_5_ce0_local : STD_LOGIC;
    signal A_4_we0_local : STD_LOGIC;
    signal A_4_ce0_local : STD_LOGIC;
    signal A_3_we0_local : STD_LOGIC;
    signal A_3_ce0_local : STD_LOGIC;
    signal A_2_we0_local : STD_LOGIC;
    signal A_2_ce0_local : STD_LOGIC;
    signal A_1_we0_local : STD_LOGIC;
    signal A_1_ce0_local : STD_LOGIC;
    signal A_we0_local : STD_LOGIC;
    signal A_ce0_local : STD_LOGIC;
    signal A_15_we0_local : STD_LOGIC;
    signal A_15_ce0_local : STD_LOGIC;
    signal icmp_ln48_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_5_fu_429_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln50_fu_423_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln52_fu_453_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln_fu_457_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln48_1_fu_441_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln52_fu_465_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_condition_238 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component matmul_partition_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component matmul_partition_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0)) then 
                    ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_1;
                end if; 
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    i_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_238)) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_128 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    i_fu_128 <= i_2_fu_445_p3;
                end if;
            end if; 
        end if;
    end process;

    itr_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln46_fu_389_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    itr_fu_132 <= add_ln46_fu_395_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    itr_fu_132 <= ap_const_lv31_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0))) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    j_fu_124 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    j_fu_124 <= j_6_reg_579;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                gmem_addr_read_reg_554 <= m_axi_gmem_0_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                j_6_reg_579 <= j_6_fu_481_p2;
                lshr_ln_reg_574 <= add_ln52_fu_465_p2(7 downto 4);
                trunc_ln48_reg_550 <= trunc_ln48_fu_437_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    A_10_address0 <= zext_ln52_fu_492_p1(4 - 1 downto 0);
    A_10_ce0 <= A_10_ce0_local;

    A_10_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            A_10_ce0_local <= ap_const_logic_1;
        else 
            A_10_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_10_d0 <= gmem_addr_read_reg_554;
    A_10_we0 <= A_10_we0_local;

    A_10_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln48_reg_550)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln48_reg_550 = ap_const_lv4_A))) then 
            A_10_we0_local <= ap_const_logic_1;
        else 
            A_10_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_11_address0 <= zext_ln52_fu_492_p1(4 - 1 downto 0);
    A_11_ce0 <= A_11_ce0_local;

    A_11_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            A_11_ce0_local <= ap_const_logic_1;
        else 
            A_11_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_11_d0 <= gmem_addr_read_reg_554;
    A_11_we0 <= A_11_we0_local;

    A_11_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln48_reg_550)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln48_reg_550 = ap_const_lv4_B))) then 
            A_11_we0_local <= ap_const_logic_1;
        else 
            A_11_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_12_address0 <= zext_ln52_fu_492_p1(4 - 1 downto 0);
    A_12_ce0 <= A_12_ce0_local;

    A_12_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            A_12_ce0_local <= ap_const_logic_1;
        else 
            A_12_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_12_d0 <= gmem_addr_read_reg_554;
    A_12_we0 <= A_12_we0_local;

    A_12_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln48_reg_550)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln48_reg_550 = ap_const_lv4_C))) then 
            A_12_we0_local <= ap_const_logic_1;
        else 
            A_12_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_13_address0 <= zext_ln52_fu_492_p1(4 - 1 downto 0);
    A_13_ce0 <= A_13_ce0_local;

    A_13_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            A_13_ce0_local <= ap_const_logic_1;
        else 
            A_13_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_13_d0 <= gmem_addr_read_reg_554;
    A_13_we0 <= A_13_we0_local;

    A_13_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln48_reg_550)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln48_reg_550 = ap_const_lv4_D))) then 
            A_13_we0_local <= ap_const_logic_1;
        else 
            A_13_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_14_address0 <= zext_ln52_fu_492_p1(4 - 1 downto 0);
    A_14_ce0 <= A_14_ce0_local;

    A_14_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            A_14_ce0_local <= ap_const_logic_1;
        else 
            A_14_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_14_d0 <= gmem_addr_read_reg_554;
    A_14_we0 <= A_14_we0_local;

    A_14_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln48_reg_550)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln48_reg_550 = ap_const_lv4_E))) then 
            A_14_we0_local <= ap_const_logic_1;
        else 
            A_14_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_15_address0 <= zext_ln52_fu_492_p1(4 - 1 downto 0);
    A_15_ce0 <= A_15_ce0_local;

    A_15_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            A_15_ce0_local <= ap_const_logic_1;
        else 
            A_15_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_15_d0 <= gmem_addr_read_reg_554;
    A_15_we0 <= A_15_we0_local;

    A_15_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln48_reg_550)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln48_reg_550 = ap_const_lv4_F))) then 
            A_15_we0_local <= ap_const_logic_1;
        else 
            A_15_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_1_address0 <= zext_ln52_fu_492_p1(4 - 1 downto 0);
    A_1_ce0 <= A_1_ce0_local;

    A_1_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            A_1_ce0_local <= ap_const_logic_1;
        else 
            A_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_1_d0 <= gmem_addr_read_reg_554;
    A_1_we0 <= A_1_we0_local;

    A_1_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln48_reg_550)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln48_reg_550 = ap_const_lv4_1))) then 
            A_1_we0_local <= ap_const_logic_1;
        else 
            A_1_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_2_address0 <= zext_ln52_fu_492_p1(4 - 1 downto 0);
    A_2_ce0 <= A_2_ce0_local;

    A_2_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            A_2_ce0_local <= ap_const_logic_1;
        else 
            A_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_2_d0 <= gmem_addr_read_reg_554;
    A_2_we0 <= A_2_we0_local;

    A_2_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln48_reg_550)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln48_reg_550 = ap_const_lv4_2))) then 
            A_2_we0_local <= ap_const_logic_1;
        else 
            A_2_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_3_address0 <= zext_ln52_fu_492_p1(4 - 1 downto 0);
    A_3_ce0 <= A_3_ce0_local;

    A_3_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            A_3_ce0_local <= ap_const_logic_1;
        else 
            A_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_3_d0 <= gmem_addr_read_reg_554;
    A_3_we0 <= A_3_we0_local;

    A_3_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln48_reg_550)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln48_reg_550 = ap_const_lv4_3))) then 
            A_3_we0_local <= ap_const_logic_1;
        else 
            A_3_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_4_address0 <= zext_ln52_fu_492_p1(4 - 1 downto 0);
    A_4_ce0 <= A_4_ce0_local;

    A_4_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            A_4_ce0_local <= ap_const_logic_1;
        else 
            A_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_4_d0 <= gmem_addr_read_reg_554;
    A_4_we0 <= A_4_we0_local;

    A_4_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln48_reg_550)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln48_reg_550 = ap_const_lv4_4))) then 
            A_4_we0_local <= ap_const_logic_1;
        else 
            A_4_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_5_address0 <= zext_ln52_fu_492_p1(4 - 1 downto 0);
    A_5_ce0 <= A_5_ce0_local;

    A_5_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            A_5_ce0_local <= ap_const_logic_1;
        else 
            A_5_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_5_d0 <= gmem_addr_read_reg_554;
    A_5_we0 <= A_5_we0_local;

    A_5_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln48_reg_550)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln48_reg_550 = ap_const_lv4_5))) then 
            A_5_we0_local <= ap_const_logic_1;
        else 
            A_5_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_6_address0 <= zext_ln52_fu_492_p1(4 - 1 downto 0);
    A_6_ce0 <= A_6_ce0_local;

    A_6_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            A_6_ce0_local <= ap_const_logic_1;
        else 
            A_6_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_6_d0 <= gmem_addr_read_reg_554;
    A_6_we0 <= A_6_we0_local;

    A_6_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln48_reg_550)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln48_reg_550 = ap_const_lv4_6))) then 
            A_6_we0_local <= ap_const_logic_1;
        else 
            A_6_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_7_address0 <= zext_ln52_fu_492_p1(4 - 1 downto 0);
    A_7_ce0 <= A_7_ce0_local;

    A_7_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            A_7_ce0_local <= ap_const_logic_1;
        else 
            A_7_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_7_d0 <= gmem_addr_read_reg_554;
    A_7_we0 <= A_7_we0_local;

    A_7_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln48_reg_550)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln48_reg_550 = ap_const_lv4_7))) then 
            A_7_we0_local <= ap_const_logic_1;
        else 
            A_7_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_8_address0 <= zext_ln52_fu_492_p1(4 - 1 downto 0);
    A_8_ce0 <= A_8_ce0_local;

    A_8_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            A_8_ce0_local <= ap_const_logic_1;
        else 
            A_8_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_8_d0 <= gmem_addr_read_reg_554;
    A_8_we0 <= A_8_we0_local;

    A_8_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln48_reg_550)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln48_reg_550 = ap_const_lv4_8))) then 
            A_8_we0_local <= ap_const_logic_1;
        else 
            A_8_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_9_address0 <= zext_ln52_fu_492_p1(4 - 1 downto 0);
    A_9_ce0 <= A_9_ce0_local;

    A_9_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            A_9_ce0_local <= ap_const_logic_1;
        else 
            A_9_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_9_d0 <= gmem_addr_read_reg_554;
    A_9_we0 <= A_9_we0_local;

    A_9_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln48_reg_550)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln48_reg_550 = ap_const_lv4_9))) then 
            A_9_we0_local <= ap_const_logic_1;
        else 
            A_9_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_address0 <= zext_ln52_fu_492_p1(4 - 1 downto 0);
    A_ce0 <= A_ce0_local;

    A_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            A_ce0_local <= ap_const_logic_1;
        else 
            A_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    A_d0 <= gmem_addr_read_reg_554;
    A_we0 <= A_we0_local;

    A_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln48_reg_550)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln48_reg_550 = ap_const_lv4_0))) then 
            A_we0_local <= ap_const_logic_1;
        else 
            A_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    add_ln46_fu_395_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_itr_2) + unsigned(ap_const_lv31_1));
    add_ln50_fu_423_p2 <= std_logic_vector(unsigned(i_fu_128) + unsigned(ap_const_lv32_1));
    add_ln52_fu_465_p2 <= std_logic_vector(unsigned(shl_ln_fu_457_p3) + unsigned(trunc_ln48_1_fu_441_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_0_RVALID)
    begin
                ap_block_pp0_stage0_11001 <= ((m_axi_gmem_0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage0_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_grp1_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_0_RVALID)
    begin
                ap_block_pp0_stage0_11001_grp1 <= ((m_axi_gmem_0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage0_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_0_RVALID)
    begin
                ap_block_pp0_stage0_subdone <= ((m_axi_gmem_0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage0_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_238_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
                ap_condition_238 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln46_fu_389_p2)
    begin
        if (((icmp_ln46_fu_389_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_itr_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_loop_init, itr_fu_132, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_itr_2 <= ap_const_lv31_0;
        else 
            ap_sig_allocacmp_itr_2 <= itr_fu_132;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_assign_proc : process(ap_enable_reg_pp0_iter2, j_6_reg_579, ap_block_pp0_stage0_grp0, j_fu_124)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_j_load <= j_6_reg_579;
        else 
            ap_sig_allocacmp_j_load <= j_fu_124;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, m_axi_gmem_0_RVALID, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gmem_blk_n_R <= m_axi_gmem_0_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    i_2_fu_445_p3 <= 
        add_ln50_fu_423_p2 when (icmp_ln48_fu_418_p2(0) = '1') else 
        i_fu_128;
    icmp_ln46_fu_389_p2 <= "1" when (ap_sig_allocacmp_itr_2 = empty) else "0";
    icmp_ln48_fu_418_p2 <= "1" when (ap_sig_allocacmp_j_load = dim) else "0";
    j_5_fu_429_p3 <= 
        ap_const_lv32_0 when (icmp_ln48_fu_418_p2(0) = '1') else 
        ap_sig_allocacmp_j_load;
    j_6_fu_481_p2 <= std_logic_vector(unsigned(j_5_fu_429_p3) + unsigned(ap_const_lv32_1));
    m_axi_gmem_0_ARADDR <= ap_const_lv64_0;
    m_axi_gmem_0_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_0_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_0_ARID <= ap_const_lv1_0;
    m_axi_gmem_0_ARLEN <= ap_const_lv32_0;
    m_axi_gmem_0_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_0_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_0_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_0_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_0_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_0_ARUSER <= ap_const_lv1_0;
    m_axi_gmem_0_ARVALID <= ap_const_logic_0;
    m_axi_gmem_0_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_0_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_0_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_0_AWID <= ap_const_lv1_0;
    m_axi_gmem_0_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_0_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_0_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_0_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_0_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_0_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_0_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_0_AWVALID <= ap_const_logic_0;
    m_axi_gmem_0_BREADY <= ap_const_logic_0;

    m_axi_gmem_0_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axi_gmem_0_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_0_WDATA <= ap_const_lv32_0;
    m_axi_gmem_0_WID <= ap_const_lv1_0;
    m_axi_gmem_0_WLAST <= ap_const_logic_0;
    m_axi_gmem_0_WSTRB <= ap_const_lv4_0;
    m_axi_gmem_0_WUSER <= ap_const_lv1_0;
    m_axi_gmem_0_WVALID <= ap_const_logic_0;
    shl_ln_fu_457_p3 <= (trunc_ln52_fu_453_p1 & ap_const_lv4_0);
    trunc_ln48_1_fu_441_p1 <= j_5_fu_429_p3(8 - 1 downto 0);
    trunc_ln48_fu_437_p1 <= j_5_fu_429_p3(4 - 1 downto 0);
    trunc_ln52_fu_453_p1 <= i_2_fu_445_p3(4 - 1 downto 0);
    zext_ln52_fu_492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_reg_574),64));
end behav;
