// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module matmul_partition_matmul_partition_Pipeline_readB (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_0_AWVALID,
        m_axi_gmem_0_AWREADY,
        m_axi_gmem_0_AWADDR,
        m_axi_gmem_0_AWID,
        m_axi_gmem_0_AWLEN,
        m_axi_gmem_0_AWSIZE,
        m_axi_gmem_0_AWBURST,
        m_axi_gmem_0_AWLOCK,
        m_axi_gmem_0_AWCACHE,
        m_axi_gmem_0_AWPROT,
        m_axi_gmem_0_AWQOS,
        m_axi_gmem_0_AWREGION,
        m_axi_gmem_0_AWUSER,
        m_axi_gmem_0_WVALID,
        m_axi_gmem_0_WREADY,
        m_axi_gmem_0_WDATA,
        m_axi_gmem_0_WSTRB,
        m_axi_gmem_0_WLAST,
        m_axi_gmem_0_WID,
        m_axi_gmem_0_WUSER,
        m_axi_gmem_0_ARVALID,
        m_axi_gmem_0_ARREADY,
        m_axi_gmem_0_ARADDR,
        m_axi_gmem_0_ARID,
        m_axi_gmem_0_ARLEN,
        m_axi_gmem_0_ARSIZE,
        m_axi_gmem_0_ARBURST,
        m_axi_gmem_0_ARLOCK,
        m_axi_gmem_0_ARCACHE,
        m_axi_gmem_0_ARPROT,
        m_axi_gmem_0_ARQOS,
        m_axi_gmem_0_ARREGION,
        m_axi_gmem_0_ARUSER,
        m_axi_gmem_0_RVALID,
        m_axi_gmem_0_RREADY,
        m_axi_gmem_0_RDATA,
        m_axi_gmem_0_RLAST,
        m_axi_gmem_0_RID,
        m_axi_gmem_0_RFIFONUM,
        m_axi_gmem_0_RUSER,
        m_axi_gmem_0_RRESP,
        m_axi_gmem_0_BVALID,
        m_axi_gmem_0_BREADY,
        m_axi_gmem_0_BRESP,
        m_axi_gmem_0_BID,
        m_axi_gmem_0_BUSER,
        empty,
        sext_ln57,
        B_15_address0,
        B_15_ce0,
        B_15_we0,
        B_15_d0,
        B_14_address0,
        B_14_ce0,
        B_14_we0,
        B_14_d0,
        B_13_address0,
        B_13_ce0,
        B_13_we0,
        B_13_d0,
        B_12_address0,
        B_12_ce0,
        B_12_we0,
        B_12_d0,
        B_11_address0,
        B_11_ce0,
        B_11_we0,
        B_11_d0,
        B_10_address0,
        B_10_ce0,
        B_10_we0,
        B_10_d0,
        B_9_address0,
        B_9_ce0,
        B_9_we0,
        B_9_d0,
        B_8_address0,
        B_8_ce0,
        B_8_we0,
        B_8_d0,
        B_7_address0,
        B_7_ce0,
        B_7_we0,
        B_7_d0,
        B_6_address0,
        B_6_ce0,
        B_6_we0,
        B_6_d0,
        B_5_address0,
        B_5_ce0,
        B_5_we0,
        B_5_d0,
        B_4_address0,
        B_4_ce0,
        B_4_we0,
        B_4_d0,
        B_3_address0,
        B_3_ce0,
        B_3_we0,
        B_3_d0,
        B_2_address0,
        B_2_ce0,
        B_2_we0,
        B_2_d0,
        B_1_address0,
        B_1_ce0,
        B_1_we0,
        B_1_d0,
        B_address0,
        B_ce0,
        B_we0,
        B_d0,
        dim
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_0_AWVALID;
input   m_axi_gmem_0_AWREADY;
output  [63:0] m_axi_gmem_0_AWADDR;
output  [0:0] m_axi_gmem_0_AWID;
output  [31:0] m_axi_gmem_0_AWLEN;
output  [2:0] m_axi_gmem_0_AWSIZE;
output  [1:0] m_axi_gmem_0_AWBURST;
output  [1:0] m_axi_gmem_0_AWLOCK;
output  [3:0] m_axi_gmem_0_AWCACHE;
output  [2:0] m_axi_gmem_0_AWPROT;
output  [3:0] m_axi_gmem_0_AWQOS;
output  [3:0] m_axi_gmem_0_AWREGION;
output  [0:0] m_axi_gmem_0_AWUSER;
output   m_axi_gmem_0_WVALID;
input   m_axi_gmem_0_WREADY;
output  [31:0] m_axi_gmem_0_WDATA;
output  [3:0] m_axi_gmem_0_WSTRB;
output   m_axi_gmem_0_WLAST;
output  [0:0] m_axi_gmem_0_WID;
output  [0:0] m_axi_gmem_0_WUSER;
output   m_axi_gmem_0_ARVALID;
input   m_axi_gmem_0_ARREADY;
output  [63:0] m_axi_gmem_0_ARADDR;
output  [0:0] m_axi_gmem_0_ARID;
output  [31:0] m_axi_gmem_0_ARLEN;
output  [2:0] m_axi_gmem_0_ARSIZE;
output  [1:0] m_axi_gmem_0_ARBURST;
output  [1:0] m_axi_gmem_0_ARLOCK;
output  [3:0] m_axi_gmem_0_ARCACHE;
output  [2:0] m_axi_gmem_0_ARPROT;
output  [3:0] m_axi_gmem_0_ARQOS;
output  [3:0] m_axi_gmem_0_ARREGION;
output  [0:0] m_axi_gmem_0_ARUSER;
input   m_axi_gmem_0_RVALID;
output   m_axi_gmem_0_RREADY;
input  [31:0] m_axi_gmem_0_RDATA;
input   m_axi_gmem_0_RLAST;
input  [0:0] m_axi_gmem_0_RID;
input  [8:0] m_axi_gmem_0_RFIFONUM;
input  [0:0] m_axi_gmem_0_RUSER;
input  [1:0] m_axi_gmem_0_RRESP;
input   m_axi_gmem_0_BVALID;
output   m_axi_gmem_0_BREADY;
input  [1:0] m_axi_gmem_0_BRESP;
input  [0:0] m_axi_gmem_0_BID;
input  [0:0] m_axi_gmem_0_BUSER;
input  [30:0] empty;
input  [61:0] sext_ln57;
output  [3:0] B_15_address0;
output   B_15_ce0;
output   B_15_we0;
output  [31:0] B_15_d0;
output  [3:0] B_14_address0;
output   B_14_ce0;
output   B_14_we0;
output  [31:0] B_14_d0;
output  [3:0] B_13_address0;
output   B_13_ce0;
output   B_13_we0;
output  [31:0] B_13_d0;
output  [3:0] B_12_address0;
output   B_12_ce0;
output   B_12_we0;
output  [31:0] B_12_d0;
output  [3:0] B_11_address0;
output   B_11_ce0;
output   B_11_we0;
output  [31:0] B_11_d0;
output  [3:0] B_10_address0;
output   B_10_ce0;
output   B_10_we0;
output  [31:0] B_10_d0;
output  [3:0] B_9_address0;
output   B_9_ce0;
output   B_9_we0;
output  [31:0] B_9_d0;
output  [3:0] B_8_address0;
output   B_8_ce0;
output   B_8_we0;
output  [31:0] B_8_d0;
output  [3:0] B_7_address0;
output   B_7_ce0;
output   B_7_we0;
output  [31:0] B_7_d0;
output  [3:0] B_6_address0;
output   B_6_ce0;
output   B_6_we0;
output  [31:0] B_6_d0;
output  [3:0] B_5_address0;
output   B_5_ce0;
output   B_5_we0;
output  [31:0] B_5_d0;
output  [3:0] B_4_address0;
output   B_4_ce0;
output   B_4_we0;
output  [31:0] B_4_d0;
output  [3:0] B_3_address0;
output   B_3_ce0;
output   B_3_we0;
output  [31:0] B_3_d0;
output  [3:0] B_2_address0;
output   B_2_ce0;
output   B_2_we0;
output  [31:0] B_2_d0;
output  [3:0] B_1_address0;
output   B_1_ce0;
output   B_1_we0;
output  [31:0] B_1_d0;
output  [3:0] B_address0;
output   B_ce0;
output   B_we0;
output  [31:0] B_d0;
input  [31:0] dim;

reg ap_idle;
reg m_axi_gmem_0_RREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln57_fu_387_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_R;
wire    ap_block_pp0_stage0_grp1;
wire    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg;
wire    ap_block_pp0_stage0_subdone_grp0;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_pp0_stage0_11001_grp1;
wire   [0:0] icmp_ln59_fu_401_p2;
reg   [0:0] icmp_ln59_reg_540;
wire   [31:0] j_fu_406_p3;
reg   [31:0] j_reg_545;
wire   [3:0] trunc_ln59_fu_414_p1;
reg   [3:0] trunc_ln59_reg_551;
reg   [3:0] trunc_ln59_reg_551_pp0_iter2_reg;
reg   [31:0] gmem_addr_read_reg_556;
reg   [27:0] trunc_ln63_1_reg_576;
wire   [63:0] zext_ln63_fu_481_p1;
wire    ap_block_pp0_stage0_grp0;
reg   [31:0] j_2_fu_122;
wire   [31:0] j_3_fu_466_p2;
reg   [31:0] ap_sig_allocacmp_j_2_load;
wire    ap_loop_init;
reg   [31:0] i_1_fu_126;
wire   [31:0] i_fu_438_p3;
reg   [30:0] itr_fu_130;
wire   [30:0] add_ln57_fu_392_p2;
wire    ap_block_pp0_stage0;
reg    B_14_we0_local;
reg    B_14_ce0_local;
reg    B_13_we0_local;
reg    B_13_ce0_local;
reg    B_12_we0_local;
reg    B_12_ce0_local;
reg    B_11_we0_local;
reg    B_11_ce0_local;
reg    B_10_we0_local;
reg    B_10_ce0_local;
reg    B_9_we0_local;
reg    B_9_ce0_local;
reg    B_8_we0_local;
reg    B_8_ce0_local;
reg    B_7_we0_local;
reg    B_7_ce0_local;
reg    B_6_we0_local;
reg    B_6_ce0_local;
reg    B_5_we0_local;
reg    B_5_ce0_local;
reg    B_4_we0_local;
reg    B_4_ce0_local;
reg    B_3_we0_local;
reg    B_3_ce0_local;
reg    B_2_we0_local;
reg    B_2_ce0_local;
reg    B_1_we0_local;
reg    B_1_ce0_local;
reg    B_we0_local;
reg    B_ce0_local;
reg    B_15_we0_local;
reg    B_15_ce0_local;
wire   [31:0] add_ln61_fu_432_p2;
wire   [31:0] shl_ln63_fu_445_p2;
wire   [31:0] add_ln63_fu_451_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg = 1'b0;
#0 j_2_fu_122 = 32'd0;
#0 i_1_fu_126 = 32'd0;
#0 itr_fu_130 = 31'd0;
#0 ap_done_reg = 1'b0;
end

matmul_partition_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
            ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            i_1_fu_126 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            i_1_fu_126 <= i_fu_438_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            itr_fu_130 <= 31'd0;
        end else if (((icmp_ln57_fu_387_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            itr_fu_130 <= add_ln57_fu_392_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            j_2_fu_122 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            j_2_fu_122 <= j_3_fu_466_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        gmem_addr_read_reg_556 <= m_axi_gmem_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln59_reg_540 <= icmp_ln59_fu_401_p2;
        j_reg_545 <= j_fu_406_p3;
        trunc_ln59_reg_551 <= trunc_ln59_fu_414_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        trunc_ln59_reg_551_pp0_iter2_reg <= trunc_ln59_reg_551;
        trunc_ln63_1_reg_576 <= {{add_ln63_fu_451_p2[31:4]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        B_10_ce0_local = 1'b1;
    end else begin
        B_10_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln63_1_reg_576 == 28'd10))) begin
        B_10_we0_local = 1'b1;
    end else begin
        B_10_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        B_11_ce0_local = 1'b1;
    end else begin
        B_11_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln63_1_reg_576 == 28'd11))) begin
        B_11_we0_local = 1'b1;
    end else begin
        B_11_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        B_12_ce0_local = 1'b1;
    end else begin
        B_12_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln63_1_reg_576 == 28'd12))) begin
        B_12_we0_local = 1'b1;
    end else begin
        B_12_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        B_13_ce0_local = 1'b1;
    end else begin
        B_13_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln63_1_reg_576 == 28'd13))) begin
        B_13_we0_local = 1'b1;
    end else begin
        B_13_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        B_14_ce0_local = 1'b1;
    end else begin
        B_14_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln63_1_reg_576 == 28'd14))) begin
        B_14_we0_local = 1'b1;
    end else begin
        B_14_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        B_15_ce0_local = 1'b1;
    end else begin
        B_15_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln63_1_reg_576 == 28'd0) & ~(trunc_ln63_1_reg_576 == 28'd1) & ~(trunc_ln63_1_reg_576 == 28'd2) & ~(trunc_ln63_1_reg_576 == 28'd3) & ~(trunc_ln63_1_reg_576 == 28'd4) & ~(trunc_ln63_1_reg_576 == 28'd5) & ~(trunc_ln63_1_reg_576 == 28'd6) & ~(trunc_ln63_1_reg_576 == 28'd7) & ~(trunc_ln63_1_reg_576 == 28'd8) & ~(trunc_ln63_1_reg_576 == 28'd9) & ~(trunc_ln63_1_reg_576 == 28'd10) & ~(trunc_ln63_1_reg_576 == 28'd11) & ~(trunc_ln63_1_reg_576 == 28'd12) & ~(trunc_ln63_1_reg_576 == 28'd13) & ~(trunc_ln63_1_reg_576 == 28'd14) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        B_15_we0_local = 1'b1;
    end else begin
        B_15_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        B_1_ce0_local = 1'b1;
    end else begin
        B_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln63_1_reg_576 == 28'd1))) begin
        B_1_we0_local = 1'b1;
    end else begin
        B_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        B_2_ce0_local = 1'b1;
    end else begin
        B_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln63_1_reg_576 == 28'd2))) begin
        B_2_we0_local = 1'b1;
    end else begin
        B_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        B_3_ce0_local = 1'b1;
    end else begin
        B_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln63_1_reg_576 == 28'd3))) begin
        B_3_we0_local = 1'b1;
    end else begin
        B_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        B_4_ce0_local = 1'b1;
    end else begin
        B_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln63_1_reg_576 == 28'd4))) begin
        B_4_we0_local = 1'b1;
    end else begin
        B_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        B_5_ce0_local = 1'b1;
    end else begin
        B_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln63_1_reg_576 == 28'd5))) begin
        B_5_we0_local = 1'b1;
    end else begin
        B_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        B_6_ce0_local = 1'b1;
    end else begin
        B_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln63_1_reg_576 == 28'd6))) begin
        B_6_we0_local = 1'b1;
    end else begin
        B_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        B_7_ce0_local = 1'b1;
    end else begin
        B_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln63_1_reg_576 == 28'd7))) begin
        B_7_we0_local = 1'b1;
    end else begin
        B_7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        B_8_ce0_local = 1'b1;
    end else begin
        B_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln63_1_reg_576 == 28'd8))) begin
        B_8_we0_local = 1'b1;
    end else begin
        B_8_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        B_9_ce0_local = 1'b1;
    end else begin
        B_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln63_1_reg_576 == 28'd9))) begin
        B_9_we0_local = 1'b1;
    end else begin
        B_9_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        B_ce0_local = 1'b1;
    end else begin
        B_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln63_1_reg_576 == 28'd0))) begin
        B_we0_local = 1'b1;
    end else begin
        B_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln57_fu_387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_j_2_load = j_3_fu_466_p2;
    end else begin
        ap_sig_allocacmp_j_2_load = j_2_fu_122;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        gmem_blk_n_R = m_axi_gmem_0_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        m_axi_gmem_0_RREADY = 1'b1;
    end else begin
        m_axi_gmem_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_10_address0 = zext_ln63_fu_481_p1;

assign B_10_ce0 = B_10_ce0_local;

assign B_10_d0 = gmem_addr_read_reg_556;

assign B_10_we0 = B_10_we0_local;

assign B_11_address0 = zext_ln63_fu_481_p1;

assign B_11_ce0 = B_11_ce0_local;

assign B_11_d0 = gmem_addr_read_reg_556;

assign B_11_we0 = B_11_we0_local;

assign B_12_address0 = zext_ln63_fu_481_p1;

assign B_12_ce0 = B_12_ce0_local;

assign B_12_d0 = gmem_addr_read_reg_556;

assign B_12_we0 = B_12_we0_local;

assign B_13_address0 = zext_ln63_fu_481_p1;

assign B_13_ce0 = B_13_ce0_local;

assign B_13_d0 = gmem_addr_read_reg_556;

assign B_13_we0 = B_13_we0_local;

assign B_14_address0 = zext_ln63_fu_481_p1;

assign B_14_ce0 = B_14_ce0_local;

assign B_14_d0 = gmem_addr_read_reg_556;

assign B_14_we0 = B_14_we0_local;

assign B_15_address0 = zext_ln63_fu_481_p1;

assign B_15_ce0 = B_15_ce0_local;

assign B_15_d0 = gmem_addr_read_reg_556;

assign B_15_we0 = B_15_we0_local;

assign B_1_address0 = zext_ln63_fu_481_p1;

assign B_1_ce0 = B_1_ce0_local;

assign B_1_d0 = gmem_addr_read_reg_556;

assign B_1_we0 = B_1_we0_local;

assign B_2_address0 = zext_ln63_fu_481_p1;

assign B_2_ce0 = B_2_ce0_local;

assign B_2_d0 = gmem_addr_read_reg_556;

assign B_2_we0 = B_2_we0_local;

assign B_3_address0 = zext_ln63_fu_481_p1;

assign B_3_ce0 = B_3_ce0_local;

assign B_3_d0 = gmem_addr_read_reg_556;

assign B_3_we0 = B_3_we0_local;

assign B_4_address0 = zext_ln63_fu_481_p1;

assign B_4_ce0 = B_4_ce0_local;

assign B_4_d0 = gmem_addr_read_reg_556;

assign B_4_we0 = B_4_we0_local;

assign B_5_address0 = zext_ln63_fu_481_p1;

assign B_5_ce0 = B_5_ce0_local;

assign B_5_d0 = gmem_addr_read_reg_556;

assign B_5_we0 = B_5_we0_local;

assign B_6_address0 = zext_ln63_fu_481_p1;

assign B_6_ce0 = B_6_ce0_local;

assign B_6_d0 = gmem_addr_read_reg_556;

assign B_6_we0 = B_6_we0_local;

assign B_7_address0 = zext_ln63_fu_481_p1;

assign B_7_ce0 = B_7_ce0_local;

assign B_7_d0 = gmem_addr_read_reg_556;

assign B_7_we0 = B_7_we0_local;

assign B_8_address0 = zext_ln63_fu_481_p1;

assign B_8_ce0 = B_8_ce0_local;

assign B_8_d0 = gmem_addr_read_reg_556;

assign B_8_we0 = B_8_we0_local;

assign B_9_address0 = zext_ln63_fu_481_p1;

assign B_9_ce0 = B_9_ce0_local;

assign B_9_d0 = gmem_addr_read_reg_556;

assign B_9_we0 = B_9_we0_local;

assign B_address0 = zext_ln63_fu_481_p1;

assign B_ce0 = B_ce0_local;

assign B_d0 = gmem_addr_read_reg_556;

assign B_we0 = B_we0_local;

assign add_ln57_fu_392_p2 = (itr_fu_130 + 31'd1);

assign add_ln61_fu_432_p2 = (i_1_fu_126 + 32'd1);

assign add_ln63_fu_451_p2 = (shl_ln63_fu_445_p2 + j_reg_545);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((m_axi_gmem_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((m_axi_gmem_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage0_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((m_axi_gmem_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_ready = ap_ready_sig;

assign i_fu_438_p3 = ((icmp_ln59_reg_540[0:0] == 1'b1) ? add_ln61_fu_432_p2 : i_1_fu_126);

assign icmp_ln57_fu_387_p2 = ((itr_fu_130 == empty) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_401_p2 = ((ap_sig_allocacmp_j_2_load == dim) ? 1'b1 : 1'b0);

assign j_3_fu_466_p2 = (j_reg_545 + 32'd1);

assign j_fu_406_p3 = ((icmp_ln59_fu_401_p2[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_j_2_load);

assign m_axi_gmem_0_ARADDR = 64'd0;

assign m_axi_gmem_0_ARBURST = 2'd0;

assign m_axi_gmem_0_ARCACHE = 4'd0;

assign m_axi_gmem_0_ARID = 1'd0;

assign m_axi_gmem_0_ARLEN = 32'd0;

assign m_axi_gmem_0_ARLOCK = 2'd0;

assign m_axi_gmem_0_ARPROT = 3'd0;

assign m_axi_gmem_0_ARQOS = 4'd0;

assign m_axi_gmem_0_ARREGION = 4'd0;

assign m_axi_gmem_0_ARSIZE = 3'd0;

assign m_axi_gmem_0_ARUSER = 1'd0;

assign m_axi_gmem_0_ARVALID = 1'b0;

assign m_axi_gmem_0_AWADDR = 64'd0;

assign m_axi_gmem_0_AWBURST = 2'd0;

assign m_axi_gmem_0_AWCACHE = 4'd0;

assign m_axi_gmem_0_AWID = 1'd0;

assign m_axi_gmem_0_AWLEN = 32'd0;

assign m_axi_gmem_0_AWLOCK = 2'd0;

assign m_axi_gmem_0_AWPROT = 3'd0;

assign m_axi_gmem_0_AWQOS = 4'd0;

assign m_axi_gmem_0_AWREGION = 4'd0;

assign m_axi_gmem_0_AWSIZE = 3'd0;

assign m_axi_gmem_0_AWUSER = 1'd0;

assign m_axi_gmem_0_AWVALID = 1'b0;

assign m_axi_gmem_0_BREADY = 1'b0;

assign m_axi_gmem_0_WDATA = 32'd0;

assign m_axi_gmem_0_WID = 1'd0;

assign m_axi_gmem_0_WLAST = 1'b0;

assign m_axi_gmem_0_WSTRB = 4'd0;

assign m_axi_gmem_0_WUSER = 1'd0;

assign m_axi_gmem_0_WVALID = 1'b0;

assign shl_ln63_fu_445_p2 = i_fu_438_p3 << 32'd4;

assign trunc_ln59_fu_414_p1 = j_fu_406_p3[3:0];

assign zext_ln63_fu_481_p1 = trunc_ln59_reg_551_pp0_iter2_reg;

endmodule //matmul_partition_matmul_partition_Pipeline_readB
