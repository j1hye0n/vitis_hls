-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_partition_matmul_partition_Pipeline_readB is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_0_AWREADY : IN STD_LOGIC;
    m_axi_gmem_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_WVALID : OUT STD_LOGIC;
    m_axi_gmem_0_WREADY : IN STD_LOGIC;
    m_axi_gmem_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_WLAST : OUT STD_LOGIC;
    m_axi_gmem_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_0_ARREADY : IN STD_LOGIC;
    m_axi_gmem_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_RVALID : IN STD_LOGIC;
    m_axi_gmem_0_RREADY : OUT STD_LOGIC;
    m_axi_gmem_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_0_RLAST : IN STD_LOGIC;
    m_axi_gmem_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_BVALID : IN STD_LOGIC;
    m_axi_gmem_0_BREADY : OUT STD_LOGIC;
    m_axi_gmem_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    empty : IN STD_LOGIC_VECTOR (30 downto 0);
    sext_ln57 : IN STD_LOGIC_VECTOR (61 downto 0);
    B_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_15_ce0 : OUT STD_LOGIC;
    B_15_we0 : OUT STD_LOGIC;
    B_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_14_ce0 : OUT STD_LOGIC;
    B_14_we0 : OUT STD_LOGIC;
    B_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_13_ce0 : OUT STD_LOGIC;
    B_13_we0 : OUT STD_LOGIC;
    B_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_12_ce0 : OUT STD_LOGIC;
    B_12_we0 : OUT STD_LOGIC;
    B_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_11_ce0 : OUT STD_LOGIC;
    B_11_we0 : OUT STD_LOGIC;
    B_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_10_ce0 : OUT STD_LOGIC;
    B_10_we0 : OUT STD_LOGIC;
    B_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_9_ce0 : OUT STD_LOGIC;
    B_9_we0 : OUT STD_LOGIC;
    B_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_8_ce0 : OUT STD_LOGIC;
    B_8_we0 : OUT STD_LOGIC;
    B_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_7_ce0 : OUT STD_LOGIC;
    B_7_we0 : OUT STD_LOGIC;
    B_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_6_ce0 : OUT STD_LOGIC;
    B_6_we0 : OUT STD_LOGIC;
    B_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_5_ce0 : OUT STD_LOGIC;
    B_5_we0 : OUT STD_LOGIC;
    B_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_4_ce0 : OUT STD_LOGIC;
    B_4_we0 : OUT STD_LOGIC;
    B_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_3_ce0 : OUT STD_LOGIC;
    B_3_we0 : OUT STD_LOGIC;
    B_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_2_ce0 : OUT STD_LOGIC;
    B_2_we0 : OUT STD_LOGIC;
    B_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_1_ce0 : OUT STD_LOGIC;
    B_1_we0 : OUT STD_LOGIC;
    B_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_ce0 : OUT STD_LOGIC;
    B_we0 : OUT STD_LOGIC;
    B_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dim : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of matmul_partition_matmul_partition_Pipeline_readB is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv28_E : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000001110";
    constant ap_const_lv28_D : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000001101";
    constant ap_const_lv28_C : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000001100";
    constant ap_const_lv28_B : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000001011";
    constant ap_const_lv28_A : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000001010";
    constant ap_const_lv28_9 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000001001";
    constant ap_const_lv28_8 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000001000";
    constant ap_const_lv28_7 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000111";
    constant ap_const_lv28_6 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000110";
    constant ap_const_lv28_5 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000101";
    constant ap_const_lv28_4 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000100";
    constant ap_const_lv28_3 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000011";
    constant ap_const_lv28_2 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000010";
    constant ap_const_lv28_1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln57_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage0_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_grp1 : BOOLEAN;
    signal icmp_ln59_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln59_reg_540 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_406_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_545 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln59_fu_414_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln59_reg_551 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln59_reg_551_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_addr_read_reg_556 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln63_1_reg_576 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln63_fu_481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_grp0 : BOOLEAN;
    signal j_2_fu_122 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal j_3_fu_466_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_j_2_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal i_1_fu_126 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal i_fu_438_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal itr_fu_130 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal add_ln57_fu_392_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal B_14_we0_local : STD_LOGIC;
    signal B_14_ce0_local : STD_LOGIC;
    signal B_13_we0_local : STD_LOGIC;
    signal B_13_ce0_local : STD_LOGIC;
    signal B_12_we0_local : STD_LOGIC;
    signal B_12_ce0_local : STD_LOGIC;
    signal B_11_we0_local : STD_LOGIC;
    signal B_11_ce0_local : STD_LOGIC;
    signal B_10_we0_local : STD_LOGIC;
    signal B_10_ce0_local : STD_LOGIC;
    signal B_9_we0_local : STD_LOGIC;
    signal B_9_ce0_local : STD_LOGIC;
    signal B_8_we0_local : STD_LOGIC;
    signal B_8_ce0_local : STD_LOGIC;
    signal B_7_we0_local : STD_LOGIC;
    signal B_7_ce0_local : STD_LOGIC;
    signal B_6_we0_local : STD_LOGIC;
    signal B_6_ce0_local : STD_LOGIC;
    signal B_5_we0_local : STD_LOGIC;
    signal B_5_ce0_local : STD_LOGIC;
    signal B_4_we0_local : STD_LOGIC;
    signal B_4_ce0_local : STD_LOGIC;
    signal B_3_we0_local : STD_LOGIC;
    signal B_3_ce0_local : STD_LOGIC;
    signal B_2_we0_local : STD_LOGIC;
    signal B_2_ce0_local : STD_LOGIC;
    signal B_1_we0_local : STD_LOGIC;
    signal B_1_ce0_local : STD_LOGIC;
    signal B_we0_local : STD_LOGIC;
    signal B_ce0_local : STD_LOGIC;
    signal B_15_we0_local : STD_LOGIC;
    signal B_15_ce0_local : STD_LOGIC;
    signal add_ln61_fu_432_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln63_fu_445_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln63_fu_451_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component matmul_partition_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component matmul_partition_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0)) then 
                    ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_1;
                end if; 
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    i_1_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0))) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    i_1_fu_126 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    i_1_fu_126 <= i_fu_438_p3;
                end if;
            end if; 
        end if;
    end process;

    itr_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    itr_fu_130 <= ap_const_lv31_0;
                elsif (((icmp_ln57_fu_387_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    itr_fu_130 <= add_ln57_fu_392_p2;
                end if;
            end if; 
        end if;
    end process;

    j_2_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0))) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    j_2_fu_122 <= ap_const_lv32_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    j_2_fu_122 <= j_3_fu_466_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1)) then
                gmem_addr_read_reg_556 <= m_axi_gmem_0_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln59_reg_540 <= icmp_ln59_fu_401_p2;
                j_reg_545 <= j_fu_406_p3;
                trunc_ln59_reg_551 <= trunc_ln59_fu_414_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0))) then
                trunc_ln59_reg_551_pp0_iter2_reg <= trunc_ln59_reg_551;
                trunc_ln63_1_reg_576 <= add_ln63_fu_451_p2(31 downto 4);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    B_10_address0 <= zext_ln63_fu_481_p1(4 - 1 downto 0);
    B_10_ce0 <= B_10_ce0_local;

    B_10_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            B_10_ce0_local <= ap_const_logic_1;
        else 
            B_10_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_10_d0 <= gmem_addr_read_reg_556;
    B_10_we0 <= B_10_we0_local;

    B_10_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln63_1_reg_576)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln63_1_reg_576 = ap_const_lv28_A))) then 
            B_10_we0_local <= ap_const_logic_1;
        else 
            B_10_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_11_address0 <= zext_ln63_fu_481_p1(4 - 1 downto 0);
    B_11_ce0 <= B_11_ce0_local;

    B_11_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            B_11_ce0_local <= ap_const_logic_1;
        else 
            B_11_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_11_d0 <= gmem_addr_read_reg_556;
    B_11_we0 <= B_11_we0_local;

    B_11_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln63_1_reg_576)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln63_1_reg_576 = ap_const_lv28_B))) then 
            B_11_we0_local <= ap_const_logic_1;
        else 
            B_11_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_12_address0 <= zext_ln63_fu_481_p1(4 - 1 downto 0);
    B_12_ce0 <= B_12_ce0_local;

    B_12_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            B_12_ce0_local <= ap_const_logic_1;
        else 
            B_12_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_12_d0 <= gmem_addr_read_reg_556;
    B_12_we0 <= B_12_we0_local;

    B_12_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln63_1_reg_576)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln63_1_reg_576 = ap_const_lv28_C))) then 
            B_12_we0_local <= ap_const_logic_1;
        else 
            B_12_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_13_address0 <= zext_ln63_fu_481_p1(4 - 1 downto 0);
    B_13_ce0 <= B_13_ce0_local;

    B_13_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            B_13_ce0_local <= ap_const_logic_1;
        else 
            B_13_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_13_d0 <= gmem_addr_read_reg_556;
    B_13_we0 <= B_13_we0_local;

    B_13_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln63_1_reg_576)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln63_1_reg_576 = ap_const_lv28_D))) then 
            B_13_we0_local <= ap_const_logic_1;
        else 
            B_13_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_14_address0 <= zext_ln63_fu_481_p1(4 - 1 downto 0);
    B_14_ce0 <= B_14_ce0_local;

    B_14_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            B_14_ce0_local <= ap_const_logic_1;
        else 
            B_14_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_14_d0 <= gmem_addr_read_reg_556;
    B_14_we0 <= B_14_we0_local;

    B_14_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln63_1_reg_576)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln63_1_reg_576 = ap_const_lv28_E))) then 
            B_14_we0_local <= ap_const_logic_1;
        else 
            B_14_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_15_address0 <= zext_ln63_fu_481_p1(4 - 1 downto 0);
    B_15_ce0 <= B_15_ce0_local;

    B_15_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            B_15_ce0_local <= ap_const_logic_1;
        else 
            B_15_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_15_d0 <= gmem_addr_read_reg_556;
    B_15_we0 <= B_15_we0_local;

    B_15_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln63_1_reg_576)
    begin
        if ((not((trunc_ln63_1_reg_576 = ap_const_lv28_0)) and not((trunc_ln63_1_reg_576 = ap_const_lv28_1)) and not((trunc_ln63_1_reg_576 = ap_const_lv28_2)) and not((trunc_ln63_1_reg_576 = ap_const_lv28_3)) and not((trunc_ln63_1_reg_576 = ap_const_lv28_4)) and not((trunc_ln63_1_reg_576 = ap_const_lv28_5)) and not((trunc_ln63_1_reg_576 = ap_const_lv28_6)) and not((trunc_ln63_1_reg_576 = ap_const_lv28_7)) and not((trunc_ln63_1_reg_576 = ap_const_lv28_8)) and not((trunc_ln63_1_reg_576 = ap_const_lv28_9)) and not((trunc_ln63_1_reg_576 = ap_const_lv28_A)) and not((trunc_ln63_1_reg_576 = ap_const_lv28_B)) and not((trunc_ln63_1_reg_576 = ap_const_lv28_C)) and not((trunc_ln63_1_reg_576 = ap_const_lv28_D)) and not((trunc_ln63_1_reg_576 = ap_const_lv28_E)) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            B_15_we0_local <= ap_const_logic_1;
        else 
            B_15_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_1_address0 <= zext_ln63_fu_481_p1(4 - 1 downto 0);
    B_1_ce0 <= B_1_ce0_local;

    B_1_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            B_1_ce0_local <= ap_const_logic_1;
        else 
            B_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_1_d0 <= gmem_addr_read_reg_556;
    B_1_we0 <= B_1_we0_local;

    B_1_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln63_1_reg_576)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln63_1_reg_576 = ap_const_lv28_1))) then 
            B_1_we0_local <= ap_const_logic_1;
        else 
            B_1_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_2_address0 <= zext_ln63_fu_481_p1(4 - 1 downto 0);
    B_2_ce0 <= B_2_ce0_local;

    B_2_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            B_2_ce0_local <= ap_const_logic_1;
        else 
            B_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_2_d0 <= gmem_addr_read_reg_556;
    B_2_we0 <= B_2_we0_local;

    B_2_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln63_1_reg_576)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln63_1_reg_576 = ap_const_lv28_2))) then 
            B_2_we0_local <= ap_const_logic_1;
        else 
            B_2_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_3_address0 <= zext_ln63_fu_481_p1(4 - 1 downto 0);
    B_3_ce0 <= B_3_ce0_local;

    B_3_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            B_3_ce0_local <= ap_const_logic_1;
        else 
            B_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_3_d0 <= gmem_addr_read_reg_556;
    B_3_we0 <= B_3_we0_local;

    B_3_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln63_1_reg_576)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln63_1_reg_576 = ap_const_lv28_3))) then 
            B_3_we0_local <= ap_const_logic_1;
        else 
            B_3_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_4_address0 <= zext_ln63_fu_481_p1(4 - 1 downto 0);
    B_4_ce0 <= B_4_ce0_local;

    B_4_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            B_4_ce0_local <= ap_const_logic_1;
        else 
            B_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_4_d0 <= gmem_addr_read_reg_556;
    B_4_we0 <= B_4_we0_local;

    B_4_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln63_1_reg_576)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln63_1_reg_576 = ap_const_lv28_4))) then 
            B_4_we0_local <= ap_const_logic_1;
        else 
            B_4_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_5_address0 <= zext_ln63_fu_481_p1(4 - 1 downto 0);
    B_5_ce0 <= B_5_ce0_local;

    B_5_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            B_5_ce0_local <= ap_const_logic_1;
        else 
            B_5_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_5_d0 <= gmem_addr_read_reg_556;
    B_5_we0 <= B_5_we0_local;

    B_5_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln63_1_reg_576)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln63_1_reg_576 = ap_const_lv28_5))) then 
            B_5_we0_local <= ap_const_logic_1;
        else 
            B_5_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_6_address0 <= zext_ln63_fu_481_p1(4 - 1 downto 0);
    B_6_ce0 <= B_6_ce0_local;

    B_6_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            B_6_ce0_local <= ap_const_logic_1;
        else 
            B_6_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_6_d0 <= gmem_addr_read_reg_556;
    B_6_we0 <= B_6_we0_local;

    B_6_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln63_1_reg_576)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln63_1_reg_576 = ap_const_lv28_6))) then 
            B_6_we0_local <= ap_const_logic_1;
        else 
            B_6_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_7_address0 <= zext_ln63_fu_481_p1(4 - 1 downto 0);
    B_7_ce0 <= B_7_ce0_local;

    B_7_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            B_7_ce0_local <= ap_const_logic_1;
        else 
            B_7_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_7_d0 <= gmem_addr_read_reg_556;
    B_7_we0 <= B_7_we0_local;

    B_7_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln63_1_reg_576)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln63_1_reg_576 = ap_const_lv28_7))) then 
            B_7_we0_local <= ap_const_logic_1;
        else 
            B_7_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_8_address0 <= zext_ln63_fu_481_p1(4 - 1 downto 0);
    B_8_ce0 <= B_8_ce0_local;

    B_8_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            B_8_ce0_local <= ap_const_logic_1;
        else 
            B_8_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_8_d0 <= gmem_addr_read_reg_556;
    B_8_we0 <= B_8_we0_local;

    B_8_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln63_1_reg_576)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln63_1_reg_576 = ap_const_lv28_8))) then 
            B_8_we0_local <= ap_const_logic_1;
        else 
            B_8_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_9_address0 <= zext_ln63_fu_481_p1(4 - 1 downto 0);
    B_9_ce0 <= B_9_ce0_local;

    B_9_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            B_9_ce0_local <= ap_const_logic_1;
        else 
            B_9_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_9_d0 <= gmem_addr_read_reg_556;
    B_9_we0 <= B_9_we0_local;

    B_9_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln63_1_reg_576)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln63_1_reg_576 = ap_const_lv28_9))) then 
            B_9_we0_local <= ap_const_logic_1;
        else 
            B_9_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_address0 <= zext_ln63_fu_481_p1(4 - 1 downto 0);
    B_ce0 <= B_ce0_local;

    B_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            B_ce0_local <= ap_const_logic_1;
        else 
            B_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    B_d0 <= gmem_addr_read_reg_556;
    B_we0 <= B_we0_local;

    B_we0_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, trunc_ln63_1_reg_576)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (trunc_ln63_1_reg_576 = ap_const_lv28_0))) then 
            B_we0_local <= ap_const_logic_1;
        else 
            B_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    add_ln57_fu_392_p2 <= std_logic_vector(unsigned(itr_fu_130) + unsigned(ap_const_lv31_1));
    add_ln61_fu_432_p2 <= std_logic_vector(unsigned(i_1_fu_126) + unsigned(ap_const_lv32_1));
    add_ln63_fu_451_p2 <= std_logic_vector(unsigned(shl_ln63_fu_445_p2) + unsigned(j_reg_545));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, m_axi_gmem_0_RVALID)
    begin
                ap_block_pp0_stage0_11001 <= ((m_axi_gmem_0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage0_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_grp1_assign_proc : process(ap_enable_reg_pp0_iter2, m_axi_gmem_0_RVALID)
    begin
                ap_block_pp0_stage0_11001_grp1 <= ((m_axi_gmem_0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage0_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, m_axi_gmem_0_RVALID)
    begin
                ap_block_pp0_stage0_subdone <= ((m_axi_gmem_0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage0_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln57_fu_387_p2)
    begin
        if (((icmp_ln57_fu_387_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_2_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_grp0, j_2_fu_122, j_3_fu_466_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_j_2_load <= j_3_fu_466_p2;
        else 
            ap_sig_allocacmp_j_2_load <= j_2_fu_122;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(ap_enable_reg_pp0_iter2, m_axi_gmem_0_RVALID, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            gmem_blk_n_R <= m_axi_gmem_0_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    i_fu_438_p3 <= 
        add_ln61_fu_432_p2 when (icmp_ln59_reg_540(0) = '1') else 
        i_1_fu_126;
    icmp_ln57_fu_387_p2 <= "1" when (itr_fu_130 = empty) else "0";
    icmp_ln59_fu_401_p2 <= "1" when (ap_sig_allocacmp_j_2_load = dim) else "0";
    j_3_fu_466_p2 <= std_logic_vector(unsigned(j_reg_545) + unsigned(ap_const_lv32_1));
    j_fu_406_p3 <= 
        ap_const_lv32_0 when (icmp_ln59_fu_401_p2(0) = '1') else 
        ap_sig_allocacmp_j_2_load;
    m_axi_gmem_0_ARADDR <= ap_const_lv64_0;
    m_axi_gmem_0_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_0_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_0_ARID <= ap_const_lv1_0;
    m_axi_gmem_0_ARLEN <= ap_const_lv32_0;
    m_axi_gmem_0_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_0_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_0_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_0_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_0_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_0_ARUSER <= ap_const_lv1_0;
    m_axi_gmem_0_ARVALID <= ap_const_logic_0;
    m_axi_gmem_0_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_0_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_0_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_0_AWID <= ap_const_lv1_0;
    m_axi_gmem_0_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_0_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_0_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_0_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_0_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_0_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_0_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_0_AWVALID <= ap_const_logic_0;
    m_axi_gmem_0_BREADY <= ap_const_logic_0;

    m_axi_gmem_0_RREADY_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            m_axi_gmem_0_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_0_WDATA <= ap_const_lv32_0;
    m_axi_gmem_0_WID <= ap_const_lv1_0;
    m_axi_gmem_0_WLAST <= ap_const_logic_0;
    m_axi_gmem_0_WSTRB <= ap_const_lv4_0;
    m_axi_gmem_0_WUSER <= ap_const_lv1_0;
    m_axi_gmem_0_WVALID <= ap_const_logic_0;
    shl_ln63_fu_445_p2 <= std_logic_vector(shift_left(unsigned(i_fu_438_p3),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    trunc_ln59_fu_414_p1 <= j_fu_406_p3(4 - 1 downto 0);
    zext_ln63_fu_481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln59_reg_551_pp0_iter2_reg),64));
end behav;
