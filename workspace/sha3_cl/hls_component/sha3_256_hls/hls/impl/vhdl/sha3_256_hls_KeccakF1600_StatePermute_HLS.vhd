-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sha3_256_hls_KeccakF1600_StatePermute_HLS is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    state_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    state_0_ce0 : OUT STD_LOGIC;
    state_0_we0 : OUT STD_LOGIC;
    state_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    state_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    state_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    state_0_ce1 : OUT STD_LOGIC;
    state_0_we1 : OUT STD_LOGIC;
    state_0_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    state_0_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    state_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    state_1_ce0 : OUT STD_LOGIC;
    state_1_we0 : OUT STD_LOGIC;
    state_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    state_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    state_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    state_1_ce1 : OUT STD_LOGIC;
    state_1_we1 : OUT STD_LOGIC;
    state_1_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    state_1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    state_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    state_2_ce0 : OUT STD_LOGIC;
    state_2_we0 : OUT STD_LOGIC;
    state_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    state_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    state_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    state_2_ce1 : OUT STD_LOGIC;
    state_2_we1 : OUT STD_LOGIC;
    state_2_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    state_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    state_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    state_3_ce0 : OUT STD_LOGIC;
    state_3_we0 : OUT STD_LOGIC;
    state_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    state_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    state_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    state_3_ce1 : OUT STD_LOGIC;
    state_3_we1 : OUT STD_LOGIC;
    state_3_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    state_3_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    state_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    state_4_ce0 : OUT STD_LOGIC;
    state_4_we0 : OUT STD_LOGIC;
    state_4_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    state_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    state_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    state_4_ce1 : OUT STD_LOGIC;
    state_4_we1 : OUT STD_LOGIC;
    state_4_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    state_4_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of sha3_256_hls_KeccakF1600_StatePermute_HLS is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal state_0_addr_reg_706 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_1_addr_reg_711 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_2_addr_reg_716 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_3_addr_reg_721 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_4_addr_reg_726 : STD_LOGIC_VECTOR (2 downto 0);
    signal Aba_reg_731 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal Abe_reg_736 : STD_LOGIC_VECTOR (63 downto 0);
    signal Abi_reg_741 : STD_LOGIC_VECTOR (63 downto 0);
    signal Abo_reg_746 : STD_LOGIC_VECTOR (63 downto 0);
    signal Abu_reg_751 : STD_LOGIC_VECTOR (63 downto 0);
    signal state_0_addr_1_reg_756 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_1_addr_1_reg_761 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_2_addr_1_reg_766 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_3_addr_1_reg_771 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_4_addr_1_reg_776 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_0_addr_2_reg_781 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_1_addr_2_reg_786 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_2_addr_2_reg_791 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_3_addr_2_reg_796 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_4_addr_2_reg_801 : STD_LOGIC_VECTOR (2 downto 0);
    signal Aga_reg_806 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal Age_reg_811 : STD_LOGIC_VECTOR (63 downto 0);
    signal Agi_reg_816 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ago_reg_821 : STD_LOGIC_VECTOR (63 downto 0);
    signal Agu_reg_826 : STD_LOGIC_VECTOR (63 downto 0);
    signal Aka_reg_831 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ake_reg_836 : STD_LOGIC_VECTOR (63 downto 0);
    signal Aki_reg_841 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ako_reg_846 : STD_LOGIC_VECTOR (63 downto 0);
    signal Aku_reg_851 : STD_LOGIC_VECTOR (63 downto 0);
    signal state_0_addr_4_reg_886 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_1_addr_4_reg_891 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_2_addr_4_reg_896 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_3_addr_4_reg_901 : STD_LOGIC_VECTOR (2 downto 0);
    signal state_4_addr_4_reg_906 : STD_LOGIC_VECTOR (2 downto 0);
    signal Ama_reg_911 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal Ame_reg_916 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ami_reg_921 : STD_LOGIC_VECTOR (63 downto 0);
    signal Amo_reg_926 : STD_LOGIC_VECTOR (63 downto 0);
    signal Amu_reg_931 : STD_LOGIC_VECTOR (63 downto 0);
    signal Asa_reg_936 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ase_reg_941 : STD_LOGIC_VECTOR (63 downto 0);
    signal Asi_reg_946 : STD_LOGIC_VECTOR (63 downto 0);
    signal Aso_reg_951 : STD_LOGIC_VECTOR (63 downto 0);
    signal Asu_reg_956 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_start : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_done : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_idle : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_ready : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aba_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aba_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abe_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abe_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abi_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abi_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abo_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abo_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abu_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abu_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aga_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aga_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Age_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Age_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Agi_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Agi_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ago_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ago_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Agu_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Agu_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aka_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aka_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ake_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ake_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aki_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aki_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ako_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ako_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aku_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aku_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ama_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ama_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ame_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ame_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ami_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ami_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Amo_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Amo_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Amu_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Amu_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asa_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asa_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ase_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ase_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asi_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asi_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aso_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aso_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asu_1_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asu_1_out_ap_vld : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal state_0_ce0_local : STD_LOGIC;
    signal state_0_address0_local : STD_LOGIC_VECTOR (2 downto 0);
    signal state_0_ce1_local : STD_LOGIC;
    signal state_0_address1_local : STD_LOGIC_VECTOR (2 downto 0);
    signal state_0_we0_local : STD_LOGIC;
    signal state_0_d0_local : STD_LOGIC_VECTOR (63 downto 0);
    signal state_0_we1_local : STD_LOGIC;
    signal state_0_d1_local : STD_LOGIC_VECTOR (63 downto 0);
    signal state_1_ce0_local : STD_LOGIC;
    signal state_1_address0_local : STD_LOGIC_VECTOR (2 downto 0);
    signal state_1_ce1_local : STD_LOGIC;
    signal state_1_address1_local : STD_LOGIC_VECTOR (2 downto 0);
    signal state_1_we0_local : STD_LOGIC;
    signal state_1_d0_local : STD_LOGIC_VECTOR (63 downto 0);
    signal state_1_we1_local : STD_LOGIC;
    signal state_1_d1_local : STD_LOGIC_VECTOR (63 downto 0);
    signal state_2_ce0_local : STD_LOGIC;
    signal state_2_address0_local : STD_LOGIC_VECTOR (2 downto 0);
    signal state_2_ce1_local : STD_LOGIC;
    signal state_2_address1_local : STD_LOGIC_VECTOR (2 downto 0);
    signal state_2_we0_local : STD_LOGIC;
    signal state_2_d0_local : STD_LOGIC_VECTOR (63 downto 0);
    signal state_2_we1_local : STD_LOGIC;
    signal state_2_d1_local : STD_LOGIC_VECTOR (63 downto 0);
    signal state_3_ce0_local : STD_LOGIC;
    signal state_3_address0_local : STD_LOGIC_VECTOR (2 downto 0);
    signal state_3_ce1_local : STD_LOGIC;
    signal state_3_address1_local : STD_LOGIC_VECTOR (2 downto 0);
    signal state_3_we0_local : STD_LOGIC;
    signal state_3_d0_local : STD_LOGIC_VECTOR (63 downto 0);
    signal state_3_we1_local : STD_LOGIC;
    signal state_3_d1_local : STD_LOGIC_VECTOR (63 downto 0);
    signal state_4_ce0_local : STD_LOGIC;
    signal state_4_address0_local : STD_LOGIC_VECTOR (2 downto 0);
    signal state_4_ce1_local : STD_LOGIC;
    signal state_4_address1_local : STD_LOGIC_VECTOR (2 downto 0);
    signal state_4_we0_local : STD_LOGIC;
    signal state_4_d0_local : STD_LOGIC_VECTOR (63 downto 0);
    signal state_4_we1_local : STD_LOGIC;
    signal state_4_d1_local : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sha3_256_hls_KeccakF1600_StatePermute_HLS_Pipeline_state_permute IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Aba : IN STD_LOGIC_VECTOR (63 downto 0);
        Abe : IN STD_LOGIC_VECTOR (63 downto 0);
        Abi : IN STD_LOGIC_VECTOR (63 downto 0);
        Abo : IN STD_LOGIC_VECTOR (63 downto 0);
        Abu : IN STD_LOGIC_VECTOR (63 downto 0);
        Aga : IN STD_LOGIC_VECTOR (63 downto 0);
        Age : IN STD_LOGIC_VECTOR (63 downto 0);
        Agi : IN STD_LOGIC_VECTOR (63 downto 0);
        Ago : IN STD_LOGIC_VECTOR (63 downto 0);
        Agu : IN STD_LOGIC_VECTOR (63 downto 0);
        Aka : IN STD_LOGIC_VECTOR (63 downto 0);
        Ake : IN STD_LOGIC_VECTOR (63 downto 0);
        Aki : IN STD_LOGIC_VECTOR (63 downto 0);
        Ako : IN STD_LOGIC_VECTOR (63 downto 0);
        Aku : IN STD_LOGIC_VECTOR (63 downto 0);
        Ama : IN STD_LOGIC_VECTOR (63 downto 0);
        Ame : IN STD_LOGIC_VECTOR (63 downto 0);
        Ami : IN STD_LOGIC_VECTOR (63 downto 0);
        Amo : IN STD_LOGIC_VECTOR (63 downto 0);
        Amu : IN STD_LOGIC_VECTOR (63 downto 0);
        Asa : IN STD_LOGIC_VECTOR (63 downto 0);
        Ase : IN STD_LOGIC_VECTOR (63 downto 0);
        Asi : IN STD_LOGIC_VECTOR (63 downto 0);
        Aso : IN STD_LOGIC_VECTOR (63 downto 0);
        Asu : IN STD_LOGIC_VECTOR (63 downto 0);
        Aba_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Aba_1_out_ap_vld : OUT STD_LOGIC;
        Abe_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Abe_1_out_ap_vld : OUT STD_LOGIC;
        Abi_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Abi_1_out_ap_vld : OUT STD_LOGIC;
        Abo_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Abo_1_out_ap_vld : OUT STD_LOGIC;
        Abu_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Abu_1_out_ap_vld : OUT STD_LOGIC;
        Aga_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Aga_1_out_ap_vld : OUT STD_LOGIC;
        Age_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Age_1_out_ap_vld : OUT STD_LOGIC;
        Agi_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Agi_1_out_ap_vld : OUT STD_LOGIC;
        Ago_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Ago_1_out_ap_vld : OUT STD_LOGIC;
        Agu_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Agu_1_out_ap_vld : OUT STD_LOGIC;
        Aka_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Aka_1_out_ap_vld : OUT STD_LOGIC;
        Ake_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Ake_1_out_ap_vld : OUT STD_LOGIC;
        Aki_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Aki_1_out_ap_vld : OUT STD_LOGIC;
        Ako_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Ako_1_out_ap_vld : OUT STD_LOGIC;
        Aku_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Aku_1_out_ap_vld : OUT STD_LOGIC;
        Ama_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Ama_1_out_ap_vld : OUT STD_LOGIC;
        Ame_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Ame_1_out_ap_vld : OUT STD_LOGIC;
        Ami_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Ami_1_out_ap_vld : OUT STD_LOGIC;
        Amo_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Amo_1_out_ap_vld : OUT STD_LOGIC;
        Amu_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Amu_1_out_ap_vld : OUT STD_LOGIC;
        Asa_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Asa_1_out_ap_vld : OUT STD_LOGIC;
        Ase_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Ase_1_out_ap_vld : OUT STD_LOGIC;
        Asi_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Asi_1_out_ap_vld : OUT STD_LOGIC;
        Aso_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Aso_1_out_ap_vld : OUT STD_LOGIC;
        Asu_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        Asu_1_out_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392 : component sha3_256_hls_KeccakF1600_StatePermute_HLS_Pipeline_state_permute
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_start,
        ap_done => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_done,
        ap_idle => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_idle,
        ap_ready => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_ready,
        Aba => Aba_reg_731,
        Abe => Abe_reg_736,
        Abi => Abi_reg_741,
        Abo => Abo_reg_746,
        Abu => Abu_reg_751,
        Aga => Aga_reg_806,
        Age => Age_reg_811,
        Agi => Agi_reg_816,
        Ago => Ago_reg_821,
        Agu => Agu_reg_826,
        Aka => Aka_reg_831,
        Ake => Ake_reg_836,
        Aki => Aki_reg_841,
        Ako => Ako_reg_846,
        Aku => Aku_reg_851,
        Ama => Ama_reg_911,
        Ame => Ame_reg_916,
        Ami => Ami_reg_921,
        Amo => Amo_reg_926,
        Amu => Amu_reg_931,
        Asa => Asa_reg_936,
        Ase => Ase_reg_941,
        Asi => Asi_reg_946,
        Aso => Aso_reg_951,
        Asu => Asu_reg_956,
        Aba_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aba_1_out,
        Aba_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aba_1_out_ap_vld,
        Abe_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abe_1_out,
        Abe_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abe_1_out_ap_vld,
        Abi_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abi_1_out,
        Abi_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abi_1_out_ap_vld,
        Abo_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abo_1_out,
        Abo_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abo_1_out_ap_vld,
        Abu_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abu_1_out,
        Abu_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abu_1_out_ap_vld,
        Aga_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aga_1_out,
        Aga_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aga_1_out_ap_vld,
        Age_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Age_1_out,
        Age_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Age_1_out_ap_vld,
        Agi_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Agi_1_out,
        Agi_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Agi_1_out_ap_vld,
        Ago_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ago_1_out,
        Ago_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ago_1_out_ap_vld,
        Agu_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Agu_1_out,
        Agu_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Agu_1_out_ap_vld,
        Aka_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aka_1_out,
        Aka_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aka_1_out_ap_vld,
        Ake_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ake_1_out,
        Ake_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ake_1_out_ap_vld,
        Aki_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aki_1_out,
        Aki_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aki_1_out_ap_vld,
        Ako_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ako_1_out,
        Ako_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ako_1_out_ap_vld,
        Aku_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aku_1_out,
        Aku_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aku_1_out_ap_vld,
        Ama_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ama_1_out,
        Ama_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ama_1_out_ap_vld,
        Ame_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ame_1_out,
        Ame_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ame_1_out_ap_vld,
        Ami_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ami_1_out,
        Ami_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ami_1_out_ap_vld,
        Amo_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Amo_1_out,
        Amo_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Amo_1_out_ap_vld,
        Amu_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Amu_1_out,
        Amu_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Amu_1_out_ap_vld,
        Asa_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asa_1_out,
        Asa_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asa_1_out_ap_vld,
        Ase_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ase_1_out,
        Ase_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ase_1_out_ap_vld,
        Asi_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asi_1_out,
        Asi_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asi_1_out_ap_vld,
        Aso_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aso_1_out,
        Aso_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aso_1_out_ap_vld,
        Asu_1_out => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asu_1_out,
        Asu_1_out_ap_vld => grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asu_1_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                Aba_reg_731 <= state_0_q0;
                Abe_reg_736 <= state_1_q0;
                Abi_reg_741 <= state_2_q0;
                Abo_reg_746 <= state_3_q0;
                Abu_reg_751 <= state_4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                Aga_reg_806 <= state_0_q1;
                Age_reg_811 <= state_1_q1;
                Agi_reg_816 <= state_2_q1;
                Ago_reg_821 <= state_3_q1;
                Agu_reg_826 <= state_4_q1;
                Aka_reg_831 <= state_0_q0;
                Ake_reg_836 <= state_1_q0;
                Aki_reg_841 <= state_2_q0;
                Ako_reg_846 <= state_3_q0;
                Aku_reg_851 <= state_4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                Ama_reg_911 <= state_0_q0;
                Ame_reg_916 <= state_1_q0;
                Ami_reg_921 <= state_2_q0;
                Amo_reg_926 <= state_3_q0;
                Amu_reg_931 <= state_4_q0;
                Asa_reg_936 <= state_0_q1;
                Ase_reg_941 <= state_1_q1;
                Asi_reg_946 <= state_2_q1;
                Aso_reg_951 <= state_3_q1;
                Asu_reg_956 <= state_4_q1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_done, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_done)
    begin
        if ((grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_start <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_ap_start_reg;
    state_0_addr_1_reg_756 <= ap_const_lv64_1(3 - 1 downto 0);
    state_0_addr_2_reg_781 <= ap_const_lv64_2(3 - 1 downto 0);
    state_0_addr_4_reg_886 <= ap_const_lv64_4(3 - 1 downto 0);
    state_0_addr_reg_706 <= ap_const_lv64_0(3 - 1 downto 0);
    state_0_address0 <= state_0_address0_local;

    state_0_address0_local_assign_proc : process(ap_CS_fsm_state1, state_0_addr_reg_706, ap_CS_fsm_state2, state_0_addr_2_reg_781, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_0_address0_local <= state_0_addr_2_reg_781;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_0_address0_local <= state_0_addr_reg_706;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            state_0_address0_local <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            state_0_address0_local <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            state_0_address0_local <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            state_0_address0_local <= "XXX";
        end if; 
    end process;

    state_0_address1 <= state_0_address1_local;

    state_0_address1_local_assign_proc : process(ap_CS_fsm_state2, state_0_addr_1_reg_756, ap_CS_fsm_state3, state_0_addr_4_reg_886, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            state_0_address1_local <= state_0_addr_4_reg_886;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_0_address1_local <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_0_address1_local <= state_0_addr_1_reg_756;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            state_0_address1_local <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            state_0_address1_local <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            state_0_address1_local <= "XXX";
        end if; 
    end process;

    state_0_ce0 <= state_0_ce0_local;

    state_0_ce0_local_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            state_0_ce0_local <= ap_const_logic_1;
        else 
            state_0_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    state_0_ce1 <= state_0_ce1_local;

    state_0_ce1_local_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            state_0_ce1_local <= ap_const_logic_1;
        else 
            state_0_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    state_0_d0 <= state_0_d0_local;

    state_0_d0_local_assign_proc : process(grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aba_1_out, grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aka_1_out, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_0_d0_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aka_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_0_d0_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aba_1_out;
        else 
            state_0_d0_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    state_0_d1 <= state_0_d1_local;

    state_0_d1_local_assign_proc : process(grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aga_1_out, grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ama_1_out, grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asa_1_out, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            state_0_d1_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asa_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_0_d1_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ama_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_0_d1_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aga_1_out;
        else 
            state_0_d1_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    state_0_we0 <= state_0_we0_local;

    state_0_we0_local_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            state_0_we0_local <= ap_const_logic_1;
        else 
            state_0_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    state_0_we1 <= state_0_we1_local;

    state_0_we1_local_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            state_0_we1_local <= ap_const_logic_1;
        else 
            state_0_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    state_1_addr_1_reg_761 <= ap_const_lv64_1(3 - 1 downto 0);
    state_1_addr_2_reg_786 <= ap_const_lv64_2(3 - 1 downto 0);
    state_1_addr_4_reg_891 <= ap_const_lv64_4(3 - 1 downto 0);
    state_1_addr_reg_711 <= ap_const_lv64_0(3 - 1 downto 0);
    state_1_address0 <= state_1_address0_local;

    state_1_address0_local_assign_proc : process(ap_CS_fsm_state1, state_1_addr_reg_711, ap_CS_fsm_state2, state_1_addr_2_reg_786, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_1_address0_local <= state_1_addr_2_reg_786;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_1_address0_local <= state_1_addr_reg_711;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            state_1_address0_local <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            state_1_address0_local <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            state_1_address0_local <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            state_1_address0_local <= "XXX";
        end if; 
    end process;

    state_1_address1 <= state_1_address1_local;

    state_1_address1_local_assign_proc : process(ap_CS_fsm_state2, state_1_addr_1_reg_761, ap_CS_fsm_state3, state_1_addr_4_reg_891, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            state_1_address1_local <= state_1_addr_4_reg_891;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_1_address1_local <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_1_address1_local <= state_1_addr_1_reg_761;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            state_1_address1_local <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            state_1_address1_local <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            state_1_address1_local <= "XXX";
        end if; 
    end process;

    state_1_ce0 <= state_1_ce0_local;

    state_1_ce0_local_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            state_1_ce0_local <= ap_const_logic_1;
        else 
            state_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    state_1_ce1 <= state_1_ce1_local;

    state_1_ce1_local_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            state_1_ce1_local <= ap_const_logic_1;
        else 
            state_1_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    state_1_d0 <= state_1_d0_local;

    state_1_d0_local_assign_proc : process(grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abe_1_out, grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ake_1_out, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_1_d0_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ake_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_1_d0_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abe_1_out;
        else 
            state_1_d0_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    state_1_d1 <= state_1_d1_local;

    state_1_d1_local_assign_proc : process(grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Age_1_out, grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ame_1_out, grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ase_1_out, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            state_1_d1_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ase_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_1_d1_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ame_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_1_d1_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Age_1_out;
        else 
            state_1_d1_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    state_1_we0 <= state_1_we0_local;

    state_1_we0_local_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            state_1_we0_local <= ap_const_logic_1;
        else 
            state_1_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    state_1_we1 <= state_1_we1_local;

    state_1_we1_local_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            state_1_we1_local <= ap_const_logic_1;
        else 
            state_1_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    state_2_addr_1_reg_766 <= ap_const_lv64_1(3 - 1 downto 0);
    state_2_addr_2_reg_791 <= ap_const_lv64_2(3 - 1 downto 0);
    state_2_addr_4_reg_896 <= ap_const_lv64_4(3 - 1 downto 0);
    state_2_addr_reg_716 <= ap_const_lv64_0(3 - 1 downto 0);
    state_2_address0 <= state_2_address0_local;

    state_2_address0_local_assign_proc : process(ap_CS_fsm_state1, state_2_addr_reg_716, ap_CS_fsm_state2, state_2_addr_2_reg_791, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_2_address0_local <= state_2_addr_2_reg_791;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_2_address0_local <= state_2_addr_reg_716;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            state_2_address0_local <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            state_2_address0_local <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            state_2_address0_local <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            state_2_address0_local <= "XXX";
        end if; 
    end process;

    state_2_address1 <= state_2_address1_local;

    state_2_address1_local_assign_proc : process(ap_CS_fsm_state2, state_2_addr_1_reg_766, ap_CS_fsm_state3, state_2_addr_4_reg_896, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            state_2_address1_local <= state_2_addr_4_reg_896;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_2_address1_local <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_2_address1_local <= state_2_addr_1_reg_766;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            state_2_address1_local <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            state_2_address1_local <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            state_2_address1_local <= "XXX";
        end if; 
    end process;

    state_2_ce0 <= state_2_ce0_local;

    state_2_ce0_local_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            state_2_ce0_local <= ap_const_logic_1;
        else 
            state_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    state_2_ce1 <= state_2_ce1_local;

    state_2_ce1_local_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            state_2_ce1_local <= ap_const_logic_1;
        else 
            state_2_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    state_2_d0 <= state_2_d0_local;

    state_2_d0_local_assign_proc : process(grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abi_1_out, grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aki_1_out, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_2_d0_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aki_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_2_d0_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abi_1_out;
        else 
            state_2_d0_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    state_2_d1 <= state_2_d1_local;

    state_2_d1_local_assign_proc : process(grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Agi_1_out, grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ami_1_out, grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asi_1_out, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            state_2_d1_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asi_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_2_d1_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ami_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_2_d1_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Agi_1_out;
        else 
            state_2_d1_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    state_2_we0 <= state_2_we0_local;

    state_2_we0_local_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            state_2_we0_local <= ap_const_logic_1;
        else 
            state_2_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    state_2_we1 <= state_2_we1_local;

    state_2_we1_local_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            state_2_we1_local <= ap_const_logic_1;
        else 
            state_2_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    state_3_addr_1_reg_771 <= ap_const_lv64_1(3 - 1 downto 0);
    state_3_addr_2_reg_796 <= ap_const_lv64_2(3 - 1 downto 0);
    state_3_addr_4_reg_901 <= ap_const_lv64_4(3 - 1 downto 0);
    state_3_addr_reg_721 <= ap_const_lv64_0(3 - 1 downto 0);
    state_3_address0 <= state_3_address0_local;

    state_3_address0_local_assign_proc : process(ap_CS_fsm_state1, state_3_addr_reg_721, ap_CS_fsm_state2, state_3_addr_2_reg_796, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_3_address0_local <= state_3_addr_2_reg_796;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_3_address0_local <= state_3_addr_reg_721;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            state_3_address0_local <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            state_3_address0_local <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            state_3_address0_local <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            state_3_address0_local <= "XXX";
        end if; 
    end process;

    state_3_address1 <= state_3_address1_local;

    state_3_address1_local_assign_proc : process(ap_CS_fsm_state2, state_3_addr_1_reg_771, ap_CS_fsm_state3, state_3_addr_4_reg_901, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            state_3_address1_local <= state_3_addr_4_reg_901;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_3_address1_local <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_3_address1_local <= state_3_addr_1_reg_771;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            state_3_address1_local <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            state_3_address1_local <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            state_3_address1_local <= "XXX";
        end if; 
    end process;

    state_3_ce0 <= state_3_ce0_local;

    state_3_ce0_local_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            state_3_ce0_local <= ap_const_logic_1;
        else 
            state_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    state_3_ce1 <= state_3_ce1_local;

    state_3_ce1_local_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            state_3_ce1_local <= ap_const_logic_1;
        else 
            state_3_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    state_3_d0 <= state_3_d0_local;

    state_3_d0_local_assign_proc : process(grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abo_1_out, grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ako_1_out, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_3_d0_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ako_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_3_d0_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abo_1_out;
        else 
            state_3_d0_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    state_3_d1 <= state_3_d1_local;

    state_3_d1_local_assign_proc : process(grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ago_1_out, grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Amo_1_out, grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aso_1_out, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            state_3_d1_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aso_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_3_d1_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Amo_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_3_d1_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Ago_1_out;
        else 
            state_3_d1_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    state_3_we0 <= state_3_we0_local;

    state_3_we0_local_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            state_3_we0_local <= ap_const_logic_1;
        else 
            state_3_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    state_3_we1 <= state_3_we1_local;

    state_3_we1_local_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            state_3_we1_local <= ap_const_logic_1;
        else 
            state_3_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    state_4_addr_1_reg_776 <= ap_const_lv64_1(3 - 1 downto 0);
    state_4_addr_2_reg_801 <= ap_const_lv64_2(3 - 1 downto 0);
    state_4_addr_4_reg_906 <= ap_const_lv64_4(3 - 1 downto 0);
    state_4_addr_reg_726 <= ap_const_lv64_0(3 - 1 downto 0);
    state_4_address0 <= state_4_address0_local;

    state_4_address0_local_assign_proc : process(ap_CS_fsm_state1, state_4_addr_reg_726, ap_CS_fsm_state2, state_4_addr_2_reg_801, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_4_address0_local <= state_4_addr_2_reg_801;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_4_address0_local <= state_4_addr_reg_726;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            state_4_address0_local <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            state_4_address0_local <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            state_4_address0_local <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            state_4_address0_local <= "XXX";
        end if; 
    end process;

    state_4_address1 <= state_4_address1_local;

    state_4_address1_local_assign_proc : process(ap_CS_fsm_state2, state_4_addr_1_reg_776, ap_CS_fsm_state3, state_4_addr_4_reg_906, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            state_4_address1_local <= state_4_addr_4_reg_906;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_4_address1_local <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_4_address1_local <= state_4_addr_1_reg_776;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            state_4_address1_local <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            state_4_address1_local <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            state_4_address1_local <= "XXX";
        end if; 
    end process;

    state_4_ce0 <= state_4_ce0_local;

    state_4_ce0_local_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            state_4_ce0_local <= ap_const_logic_1;
        else 
            state_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    state_4_ce1 <= state_4_ce1_local;

    state_4_ce1_local_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            state_4_ce1_local <= ap_const_logic_1;
        else 
            state_4_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    state_4_d0 <= state_4_d0_local;

    state_4_d0_local_assign_proc : process(grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abu_1_out, grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aku_1_out, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_4_d0_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Aku_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_4_d0_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Abu_1_out;
        else 
            state_4_d0_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    state_4_d1 <= state_4_d1_local;

    state_4_d1_local_assign_proc : process(grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Agu_1_out, grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Amu_1_out, grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asu_1_out, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            state_4_d1_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Asu_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            state_4_d1_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Amu_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            state_4_d1_local <= grp_KeccakF1600_StatePermute_HLS_Pipeline_state_permute_fu_392_Agu_1_out;
        else 
            state_4_d1_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    state_4_we0 <= state_4_we0_local;

    state_4_we0_local_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            state_4_we0_local <= ap_const_logic_1;
        else 
            state_4_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    state_4_we1 <= state_4_we1_local;

    state_4_we1_local_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            state_4_we1_local <= ap_const_logic_1;
        else 
            state_4_we1_local <= ap_const_logic_0;
        end if; 
    end process;

end behav;
