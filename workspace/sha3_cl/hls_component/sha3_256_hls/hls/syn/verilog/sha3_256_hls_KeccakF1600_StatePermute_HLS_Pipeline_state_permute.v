// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sha3_256_hls_KeccakF1600_StatePermute_HLS_Pipeline_state_permute (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Aba,
        Abe,
        Abi,
        Abo,
        Abu,
        Aga,
        Age,
        Agi,
        Ago,
        Agu,
        Aka,
        Ake,
        Aki,
        Ako,
        Aku,
        Ama,
        Ame,
        Ami,
        Amo,
        Amu,
        Asa,
        Ase,
        Asi,
        Aso,
        Asu,
        Aba_1_out,
        Aba_1_out_ap_vld,
        Abe_1_out,
        Abe_1_out_ap_vld,
        Abi_1_out,
        Abi_1_out_ap_vld,
        Abo_1_out,
        Abo_1_out_ap_vld,
        Abu_1_out,
        Abu_1_out_ap_vld,
        Aga_1_out,
        Aga_1_out_ap_vld,
        Age_1_out,
        Age_1_out_ap_vld,
        Agi_1_out,
        Agi_1_out_ap_vld,
        Ago_1_out,
        Ago_1_out_ap_vld,
        Agu_1_out,
        Agu_1_out_ap_vld,
        Aka_1_out,
        Aka_1_out_ap_vld,
        Ake_1_out,
        Ake_1_out_ap_vld,
        Aki_1_out,
        Aki_1_out_ap_vld,
        Ako_1_out,
        Ako_1_out_ap_vld,
        Aku_1_out,
        Aku_1_out_ap_vld,
        Ama_1_out,
        Ama_1_out_ap_vld,
        Ame_1_out,
        Ame_1_out_ap_vld,
        Ami_1_out,
        Ami_1_out_ap_vld,
        Amo_1_out,
        Amo_1_out_ap_vld,
        Amu_1_out,
        Amu_1_out_ap_vld,
        Asa_1_out,
        Asa_1_out_ap_vld,
        Ase_1_out,
        Ase_1_out_ap_vld,
        Asi_1_out,
        Asi_1_out_ap_vld,
        Aso_1_out,
        Aso_1_out_ap_vld,
        Asu_1_out,
        Asu_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] Aba;
input  [63:0] Abe;
input  [63:0] Abi;
input  [63:0] Abo;
input  [63:0] Abu;
input  [63:0] Aga;
input  [63:0] Age;
input  [63:0] Agi;
input  [63:0] Ago;
input  [63:0] Agu;
input  [63:0] Aka;
input  [63:0] Ake;
input  [63:0] Aki;
input  [63:0] Ako;
input  [63:0] Aku;
input  [63:0] Ama;
input  [63:0] Ame;
input  [63:0] Ami;
input  [63:0] Amo;
input  [63:0] Amu;
input  [63:0] Asa;
input  [63:0] Ase;
input  [63:0] Asi;
input  [63:0] Aso;
input  [63:0] Asu;
output  [63:0] Aba_1_out;
output   Aba_1_out_ap_vld;
output  [63:0] Abe_1_out;
output   Abe_1_out_ap_vld;
output  [63:0] Abi_1_out;
output   Abi_1_out_ap_vld;
output  [63:0] Abo_1_out;
output   Abo_1_out_ap_vld;
output  [63:0] Abu_1_out;
output   Abu_1_out_ap_vld;
output  [63:0] Aga_1_out;
output   Aga_1_out_ap_vld;
output  [63:0] Age_1_out;
output   Age_1_out_ap_vld;
output  [63:0] Agi_1_out;
output   Agi_1_out_ap_vld;
output  [63:0] Ago_1_out;
output   Ago_1_out_ap_vld;
output  [63:0] Agu_1_out;
output   Agu_1_out_ap_vld;
output  [63:0] Aka_1_out;
output   Aka_1_out_ap_vld;
output  [63:0] Ake_1_out;
output   Ake_1_out_ap_vld;
output  [63:0] Aki_1_out;
output   Aki_1_out_ap_vld;
output  [63:0] Ako_1_out;
output   Ako_1_out_ap_vld;
output  [63:0] Aku_1_out;
output   Aku_1_out_ap_vld;
output  [63:0] Ama_1_out;
output   Ama_1_out_ap_vld;
output  [63:0] Ame_1_out;
output   Ame_1_out_ap_vld;
output  [63:0] Ami_1_out;
output   Ami_1_out_ap_vld;
output  [63:0] Amo_1_out;
output   Amo_1_out_ap_vld;
output  [63:0] Amu_1_out;
output   Amu_1_out_ap_vld;
output  [63:0] Asa_1_out;
output   Asa_1_out_ap_vld;
output  [63:0] Ase_1_out;
output   Ase_1_out_ap_vld;
output  [63:0] Asi_1_out;
output   Asi_1_out_ap_vld;
output  [63:0] Aso_1_out;
output   Aso_1_out_ap_vld;
output  [63:0] Asu_1_out;
output   Asu_1_out_ap_vld;

reg ap_idle;
reg Aba_1_out_ap_vld;
reg Abe_1_out_ap_vld;
reg Abi_1_out_ap_vld;
reg Abo_1_out_ap_vld;
reg Abu_1_out_ap_vld;
reg Aga_1_out_ap_vld;
reg Age_1_out_ap_vld;
reg Agi_1_out_ap_vld;
reg Ago_1_out_ap_vld;
reg Agu_1_out_ap_vld;
reg Aka_1_out_ap_vld;
reg Ake_1_out_ap_vld;
reg Aki_1_out_ap_vld;
reg Ako_1_out_ap_vld;
reg Aku_1_out_ap_vld;
reg Ama_1_out_ap_vld;
reg Ame_1_out_ap_vld;
reg Ami_1_out_ap_vld;
reg Amo_1_out_ap_vld;
reg Amu_1_out_ap_vld;
reg Asa_1_out_ap_vld;
reg Ase_1_out_ap_vld;
reg Asi_1_out_ap_vld;
reg Aso_1_out_ap_vld;
reg Asu_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [0:0] icmp_ln98_fu_902_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [4:0] round_1_reg_4254;
wire    ap_block_pp0_stage1_11001;
wire   [63:0] Ebe_fu_1443_p2;
reg   [63:0] Ebe_reg_4262;
wire   [63:0] Ebu_fu_1497_p2;
reg   [63:0] Ebu_reg_4267;
wire   [63:0] Ege_fu_1673_p2;
reg   [63:0] Ege_reg_4272;
wire   [63:0] Egu_fu_1727_p2;
reg   [63:0] Egu_reg_4277;
wire   [63:0] Eke_fu_1901_p2;
reg   [63:0] Eke_reg_4282;
wire   [63:0] Eku_fu_1955_p2;
reg   [63:0] Eku_reg_4287;
wire   [63:0] Eme_fu_2131_p2;
reg   [63:0] Eme_reg_4292;
wire   [63:0] Emu_fu_2185_p2;
reg   [63:0] Emu_reg_4297;
wire   [63:0] Ese_fu_2361_p2;
reg   [63:0] Ese_reg_4302;
wire   [63:0] Esu_fu_2415_p2;
reg   [63:0] Esu_reg_4307;
wire   [63:0] BCa_6_fu_2439_p2;
reg   [63:0] BCa_6_reg_4312;
wire   [63:0] BCo_6_fu_2511_p2;
reg   [63:0] BCo_6_reg_4317;
wire   [62:0] trunc_ln182_fu_2567_p1;
reg   [62:0] trunc_ln182_reg_4322;
reg   [0:0] tmp_13_reg_4327;
wire   [62:0] trunc_ln185_fu_2631_p1;
reg   [62:0] trunc_ln185_reg_4332;
reg   [0:0] tmp_16_reg_4337;
wire   [63:0] Eba_2_fu_2643_p2;
reg   [63:0] Eba_2_reg_4342;
wire   [20:0] trunc_ln189_fu_2655_p1;
reg   [20:0] trunc_ln189_reg_4349;
reg   [42:0] lshr_ln24_reg_4354;
wire   [42:0] trunc_ln190_fu_2675_p1;
reg   [42:0] trunc_ln190_reg_4359;
reg   [20:0] lshr_ln25_reg_4364;
wire   [35:0] trunc_ln198_fu_2695_p1;
reg   [35:0] trunc_ln198_reg_4369;
reg   [27:0] lshr_ln27_reg_4374;
wire   [60:0] trunc_ln200_fu_2715_p1;
reg   [60:0] trunc_ln200_reg_4379;
reg   [2:0] lshr_ln29_reg_4384;
wire   [2:0] trunc_ln202_fu_2735_p1;
reg   [2:0] trunc_ln202_reg_4389;
reg   [60:0] lshr_ln31_reg_4394;
wire   [57:0] trunc_ln210_fu_2755_p1;
reg   [57:0] trunc_ln210_reg_4399;
reg   [5:0] lshr_ln32_reg_4404;
wire   [38:0] trunc_ln211_fu_2775_p1;
reg   [38:0] trunc_ln211_reg_4409;
reg   [24:0] lshr_ln33_reg_4414;
wire   [45:0] trunc_ln213_fu_2795_p1;
reg   [45:0] trunc_ln213_reg_4419;
reg   [17:0] lshr_ln35_reg_4424;
wire   [27:0] trunc_ln221_fu_2815_p1;
reg   [27:0] trunc_ln221_reg_4429;
reg   [35:0] lshr_ln37_reg_4434;
wire   [48:0] trunc_ln223_fu_2835_p1;
reg   [48:0] trunc_ln223_reg_4439;
reg   [14:0] lshr_ln39_reg_4444;
wire   [7:0] trunc_ln224_fu_2855_p1;
reg   [7:0] trunc_ln224_reg_4449;
reg   [55:0] lshr_ln40_reg_4454;
wire   [1:0] trunc_ln231_fu_2875_p1;
reg   [1:0] trunc_ln231_reg_4459;
reg   [61:0] lshr_ln41_reg_4464;
wire   [8:0] trunc_ln232_fu_2895_p1;
reg   [8:0] trunc_ln232_reg_4469;
reg   [54:0] lshr_ln42_reg_4474;
wire   [22:0] trunc_ln234_fu_2915_p1;
reg   [22:0] trunc_ln234_reg_4479;
reg   [40:0] lshr_ln44_reg_4484;
wire    ap_block_pp0_stage0_subdone;
reg   [63:0] Asu_1_fu_340;
wire   [63:0] Asu_3_fu_3816_p2;
wire    ap_block_pp0_stage0_11001;
wire    ap_loop_init;
wire    ap_block_pp0_stage1;
reg   [63:0] Aso_1_fu_344;
wire   [63:0] Aso_3_fu_3798_p2;
reg   [63:0] Asi_1_fu_348;
wire   [63:0] Asi_3_fu_3780_p2;
reg   [63:0] Ase_1_fu_352;
wire   [63:0] Ase_3_fu_3762_p2;
reg   [63:0] Asa_1_fu_356;
wire   [63:0] Asa_3_fu_3744_p2;
reg   [63:0] Amu_1_fu_360;
wire   [63:0] Amu_3_fu_3654_p2;
reg   [63:0] Amo_1_fu_364;
wire   [63:0] Amo_3_fu_3636_p2;
reg   [63:0] Ami_1_fu_368;
wire   [63:0] Ami_3_fu_3618_p2;
reg   [63:0] Ame_1_fu_372;
wire   [63:0] Ame_3_fu_3600_p2;
reg   [63:0] Ama_1_fu_376;
wire   [63:0] Ama_3_fu_3582_p2;
reg   [63:0] Aku_1_fu_380;
wire   [63:0] Aku_3_fu_3492_p2;
reg   [63:0] Ako_1_fu_384;
wire   [63:0] Ako_3_fu_3474_p2;
reg   [63:0] Aki_1_fu_388;
wire   [63:0] Aki_3_fu_3456_p2;
reg   [63:0] Ake_1_fu_392;
wire   [63:0] Ake_3_fu_3438_p2;
reg   [63:0] Aka_1_fu_396;
wire   [63:0] Aka_3_fu_3420_p2;
reg   [63:0] Agu_1_fu_400;
wire   [63:0] Agu_3_fu_3332_p2;
reg   [63:0] Ago_1_fu_404;
wire   [63:0] Ago_3_fu_3314_p2;
reg   [63:0] Agi_1_fu_408;
wire   [63:0] Agi_3_fu_3296_p2;
reg   [63:0] Age_1_fu_412;
wire   [63:0] Age_3_fu_3278_p2;
reg   [63:0] Aga_1_fu_416;
wire   [63:0] Aga_3_fu_3260_p2;
reg   [63:0] Abo_1_fu_420;
wire   [63:0] Abo_3_fu_3153_p2;
reg   [63:0] Abu_1_fu_424;
wire   [63:0] Abu_3_fu_3170_p2;
reg   [63:0] Abi_1_fu_428;
wire   [63:0] Abi_3_fu_3136_p2;
reg   [63:0] Abe_1_fu_432;
wire   [63:0] Abe_3_fu_3118_p2;
reg   [63:0] Aba_1_fu_436;
wire   [63:0] Aba_3_fu_3101_p2;
reg   [4:0] round_fu_440;
wire   [4:0] add_ln98_fu_2929_p2;
wire    ap_block_pp0_stage1_01001;
wire   [63:0] xor_ln104_fu_983_p2;
wire   [63:0] xor_ln104_2_fu_995_p2;
wire   [63:0] xor_ln104_1_fu_989_p2;
wire   [63:0] xor_ln105_fu_1007_p2;
wire   [63:0] xor_ln105_2_fu_1019_p2;
wire   [63:0] xor_ln105_1_fu_1013_p2;
wire   [63:0] xor_ln106_fu_1031_p2;
wire   [63:0] xor_ln106_1_fu_1043_p2;
wire   [63:0] xor_ln106_2_fu_1037_p2;
wire   [63:0] xor_ln107_1_fu_1061_p2;
wire   [63:0] xor_ln107_2_fu_1067_p2;
wire   [63:0] xor_ln107_fu_1055_p2;
wire   [63:0] xor_ln108_fu_1079_p2;
wire   [63:0] xor_ln108_1_fu_1085_p2;
wire   [63:0] xor_ln108_2_fu_1091_p2;
wire   [63:0] BCe_fu_1025_p2;
wire   [62:0] trunc_ln111_fu_1103_p1;
wire   [0:0] tmp_6_fu_1107_p3;
wire   [63:0] BCu_fu_1097_p2;
wire   [63:0] or_ln_fu_1115_p3;
wire   [63:0] BCi_fu_1049_p2;
wire   [62:0] trunc_ln112_fu_1129_p1;
wire   [0:0] tmp_7_fu_1133_p3;
wire   [63:0] or_ln1_fu_1141_p3;
wire   [63:0] BCa_fu_1001_p2;
wire   [63:0] BCo_fu_1073_p2;
wire   [62:0] trunc_ln113_fu_1155_p1;
wire   [0:0] tmp_8_fu_1159_p3;
wire   [63:0] or_ln2_fu_1167_p3;
wire   [62:0] trunc_ln114_fu_1181_p1;
wire   [0:0] tmp_9_fu_1185_p3;
wire   [63:0] or_ln3_fu_1193_p3;
wire   [62:0] trunc_ln115_fu_1207_p1;
wire   [0:0] tmp_10_fu_1211_p3;
wire   [63:0] or_ln4_fu_1219_p3;
wire   [63:0] Da_fu_1123_p2;
wire   [63:0] De_fu_1149_p2;
wire   [63:0] Age_2_fu_1239_p2;
wire   [19:0] trunc_ln118_fu_1245_p1;
wire   [43:0] lshr_ln5_fu_1249_p4;
wire   [63:0] Di_fu_1175_p2;
wire   [63:0] Aki_2_fu_1267_p2;
wire   [20:0] trunc_ln119_fu_1273_p1;
wire   [42:0] lshr_ln6_fu_1277_p4;
wire   [63:0] Do_fu_1201_p2;
wire   [63:0] Amo_2_fu_1295_p2;
wire   [42:0] trunc_ln120_fu_1301_p1;
wire   [20:0] lshr_ln7_fu_1305_p4;
wire   [63:0] Du_fu_1227_p2;
wire   [63:0] Asu_2_fu_1323_p2;
wire   [49:0] trunc_ln121_fu_1329_p1;
wire   [13:0] lshr_ln8_fu_1333_p4;
wire   [63:0] tmp_fu_1351_p25;
wire   [63:0] BCe_1_fu_1259_p3;
wire   [63:0] BCi_1_fu_1287_p3;
wire   [63:0] xor_ln122_fu_1407_p2;
wire   [63:0] Aba_4_fu_1233_p2;
wire   [63:0] tmp_fu_1351_p27;
wire   [63:0] xor_ln122_1_fu_1419_p2;
wire   [63:0] and_ln122_fu_1413_p2;
wire   [63:0] BCo_1_fu_1315_p3;
wire   [63:0] xor_ln123_fu_1431_p2;
wire   [63:0] and_ln123_fu_1437_p2;
wire   [63:0] BCu_1_fu_1343_p3;
wire   [63:0] xor_ln124_fu_1449_p2;
wire   [63:0] and_ln124_fu_1455_p2;
wire   [63:0] xor_ln125_fu_1467_p2;
wire   [63:0] and_ln125_fu_1473_p2;
wire   [63:0] xor_ln126_fu_1485_p2;
wire   [63:0] and_ln126_fu_1491_p2;
wire   [63:0] Abo_2_fu_1503_p2;
wire   [35:0] trunc_ln128_fu_1509_p1;
wire   [27:0] lshr_ln9_fu_1513_p4;
wire   [63:0] Agu_2_fu_1531_p2;
wire   [43:0] trunc_ln129_fu_1537_p1;
wire   [19:0] lshr_ln_fu_1541_p4;
wire   [63:0] Aka_2_fu_1559_p2;
wire   [60:0] trunc_ln130_fu_1565_p1;
wire   [2:0] lshr_ln1_fu_1569_p4;
wire   [63:0] Ame_2_fu_1587_p2;
wire   [18:0] trunc_ln131_fu_1593_p1;
wire   [44:0] lshr_ln2_fu_1597_p4;
wire   [63:0] Asi_2_fu_1615_p2;
wire   [2:0] trunc_ln132_fu_1621_p1;
wire   [60:0] lshr_ln3_fu_1625_p4;
wire   [63:0] BCe_2_fu_1551_p3;
wire   [63:0] BCi_2_fu_1579_p3;
wire   [63:0] xor_ln133_fu_1643_p2;
wire   [63:0] BCa_2_fu_1523_p3;
wire   [63:0] and_ln133_fu_1649_p2;
wire   [63:0] BCo_2_fu_1607_p3;
wire   [63:0] xor_ln134_fu_1661_p2;
wire   [63:0] and_ln134_fu_1667_p2;
wire   [63:0] BCu_2_fu_1635_p3;
wire   [63:0] xor_ln135_fu_1679_p2;
wire   [63:0] and_ln135_fu_1685_p2;
wire   [63:0] xor_ln136_fu_1697_p2;
wire   [63:0] and_ln136_fu_1703_p2;
wire   [63:0] xor_ln137_fu_1715_p2;
wire   [63:0] and_ln137_fu_1721_p2;
wire   [63:0] Abe_2_fu_1733_p2;
wire   [62:0] trunc_ln139_fu_1739_p1;
wire   [0:0] tmp_11_fu_1743_p3;
wire   [63:0] Agi_2_fu_1759_p2;
wire   [57:0] trunc_ln140_fu_1765_p1;
wire   [5:0] lshr_ln4_fu_1769_p4;
wire   [63:0] Ako_2_fu_1787_p2;
wire   [38:0] trunc_ln141_fu_1793_p1;
wire   [24:0] lshr_ln10_fu_1797_p4;
wire   [63:0] Amu_2_fu_1815_p2;
wire   [55:0] trunc_ln142_fu_1821_p1;
wire   [7:0] lshr_ln11_fu_1825_p4;
wire   [63:0] Asa_2_fu_1843_p2;
wire   [45:0] trunc_ln143_fu_1849_p1;
wire   [17:0] lshr_ln12_fu_1853_p4;
wire   [63:0] BCe_3_fu_1779_p3;
wire   [63:0] BCi_3_fu_1807_p3;
wire   [63:0] xor_ln144_fu_1871_p2;
wire   [63:0] and_ln144_fu_1877_p2;
wire   [63:0] BCa_3_fu_1751_p3;
wire   [63:0] BCo_3_fu_1835_p3;
wire   [63:0] xor_ln145_fu_1889_p2;
wire   [63:0] and_ln145_fu_1895_p2;
wire   [63:0] BCu_3_fu_1863_p3;
wire   [63:0] xor_ln146_fu_1907_p2;
wire   [63:0] and_ln146_fu_1913_p2;
wire   [63:0] xor_ln147_fu_1925_p2;
wire   [63:0] and_ln147_fu_1931_p2;
wire   [63:0] xor_ln148_fu_1943_p2;
wire   [63:0] and_ln148_fu_1949_p2;
wire   [63:0] Abu_2_fu_1961_p2;
wire   [36:0] trunc_ln150_fu_1967_p1;
wire   [26:0] lshr_ln13_fu_1971_p4;
wire   [63:0] Aga_2_fu_1989_p2;
wire   [27:0] trunc_ln151_fu_1995_p1;
wire   [35:0] lshr_ln14_fu_1999_p4;
wire   [63:0] Ake_2_fu_2017_p2;
wire   [53:0] trunc_ln152_fu_2023_p1;
wire   [9:0] lshr_ln15_fu_2027_p4;
wire   [63:0] Ami_2_fu_2045_p2;
wire   [48:0] trunc_ln153_fu_2051_p1;
wire   [14:0] lshr_ln16_fu_2055_p4;
wire   [63:0] Aso_2_fu_2073_p2;
wire   [7:0] trunc_ln154_fu_2079_p1;
wire   [55:0] lshr_ln17_fu_2083_p4;
wire   [63:0] BCe_4_fu_2009_p3;
wire   [63:0] BCi_4_fu_2037_p3;
wire   [63:0] xor_ln155_fu_2101_p2;
wire   [63:0] and_ln155_fu_2107_p2;
wire   [63:0] BCa_4_fu_1981_p3;
wire   [63:0] BCo_4_fu_2065_p3;
wire   [63:0] xor_ln156_fu_2119_p2;
wire   [63:0] and_ln156_fu_2125_p2;
wire   [63:0] BCu_4_fu_2093_p3;
wire   [63:0] xor_ln157_fu_2137_p2;
wire   [63:0] and_ln157_fu_2143_p2;
wire   [63:0] xor_ln158_fu_2155_p2;
wire   [63:0] and_ln158_fu_2161_p2;
wire   [63:0] xor_ln159_fu_2173_p2;
wire   [63:0] and_ln159_fu_2179_p2;
wire   [63:0] Abi_2_fu_2191_p2;
wire   [1:0] trunc_ln161_fu_2197_p1;
wire   [61:0] lshr_ln18_fu_2201_p4;
wire   [63:0] Ago_2_fu_2219_p2;
wire   [8:0] trunc_ln162_fu_2225_p1;
wire   [54:0] lshr_ln19_fu_2229_p4;
wire   [63:0] Aku_2_fu_2247_p2;
wire   [24:0] trunc_ln163_fu_2253_p1;
wire   [38:0] lshr_ln20_fu_2257_p4;
wire   [63:0] Ama_2_fu_2275_p2;
wire   [22:0] trunc_ln164_fu_2281_p1;
wire   [40:0] lshr_ln21_fu_2285_p4;
wire   [63:0] Ase_2_fu_2303_p2;
wire   [61:0] trunc_ln165_fu_2309_p1;
wire   [1:0] lshr_ln22_fu_2313_p4;
wire   [63:0] BCe_5_fu_2239_p3;
wire   [63:0] BCi_5_fu_2267_p3;
wire   [63:0] xor_ln166_fu_2331_p2;
wire   [63:0] and_ln166_fu_2337_p2;
wire   [63:0] BCa_5_fu_2211_p3;
wire   [63:0] BCo_5_fu_2295_p3;
wire   [63:0] xor_ln167_fu_2349_p2;
wire   [63:0] and_ln167_fu_2355_p2;
wire   [63:0] BCu_5_fu_2323_p3;
wire   [63:0] xor_ln168_fu_2367_p2;
wire   [63:0] and_ln168_fu_2373_p2;
wire   [63:0] xor_ln169_fu_2385_p2;
wire   [63:0] and_ln169_fu_2391_p2;
wire   [63:0] xor_ln170_fu_2403_p2;
wire   [63:0] and_ln170_fu_2409_p2;
wire   [63:0] Esa_fu_2343_p2;
wire   [63:0] Eka_fu_1883_p2;
wire   [63:0] Ega_fu_1655_p2;
wire   [63:0] Eba_fu_1425_p2;
wire   [63:0] xor_ln174_1_fu_2427_p2;
wire   [63:0] Ema_fu_2113_p2;
wire   [63:0] xor_ln174_2_fu_2433_p2;
wire   [63:0] xor_ln174_fu_2421_p2;
wire   [63:0] xor_ln175_1_fu_2451_p2;
wire   [63:0] xor_ln175_2_fu_2457_p2;
wire   [63:0] xor_ln175_fu_2445_p2;
wire   [63:0] Eki_fu_1919_p2;
wire   [63:0] Emi_fu_2149_p2;
wire   [63:0] Egi_fu_1691_p2;
wire   [63:0] Ebi_fu_1461_p2;
wire   [63:0] xor_ln176_1_fu_2475_p2;
wire   [63:0] Esi_fu_2379_p2;
wire   [63:0] xor_ln176_2_fu_2481_p2;
wire   [63:0] xor_ln176_fu_2469_p2;
wire   [63:0] Ebo_fu_1479_p2;
wire   [63:0] Ego_fu_1709_p2;
wire   [63:0] Eso_fu_2397_p2;
wire   [63:0] Emo_fu_2167_p2;
wire   [63:0] xor_ln177_1_fu_2499_p2;
wire   [63:0] Eko_fu_1937_p2;
wire   [63:0] xor_ln177_2_fu_2505_p2;
wire   [63:0] xor_ln177_fu_2493_p2;
wire   [63:0] xor_ln178_1_fu_2523_p2;
wire   [63:0] xor_ln178_2_fu_2529_p2;
wire   [63:0] xor_ln178_fu_2517_p2;
wire   [63:0] BCe_6_fu_2463_p2;
wire   [62:0] trunc_ln181_fu_2541_p1;
wire   [0:0] tmp_12_fu_2545_p3;
wire   [63:0] or_ln5_fu_2553_p3;
wire   [63:0] BCu_6_fu_2535_p2;
wire   [63:0] BCi_6_fu_2487_p2;
wire   [62:0] trunc_ln183_fu_2579_p1;
wire   [0:0] tmp_14_fu_2583_p3;
wire   [63:0] or_ln7_fu_2591_p3;
wire   [62:0] trunc_ln184_fu_2605_p1;
wire   [0:0] tmp_15_fu_2609_p3;
wire   [63:0] or_ln8_fu_2617_p3;
wire   [63:0] Da_1_fu_2561_p2;
wire   [63:0] Di_1_fu_2599_p2;
wire   [63:0] Eki_1_fu_2649_p2;
wire   [63:0] Do_1_fu_2625_p2;
wire   [63:0] Emo_1_fu_2669_p2;
wire   [63:0] Ebo_1_fu_2689_p2;
wire   [63:0] Eka_1_fu_2709_p2;
wire   [63:0] Esi_1_fu_2729_p2;
wire   [63:0] Egi_1_fu_2749_p2;
wire   [63:0] Eko_1_fu_2769_p2;
wire   [63:0] Esa_1_fu_2789_p2;
wire   [63:0] Ega_1_fu_2809_p2;
wire   [63:0] Emi_1_fu_2829_p2;
wire   [63:0] Eso_1_fu_2849_p2;
wire   [63:0] Ebi_1_fu_2869_p2;
wire   [63:0] Ego_1_fu_2889_p2;
wire   [63:0] Ema_1_fu_2909_p2;
wire    ap_block_pp0_stage0;
wire   [63:0] or_ln6_fu_2940_p3;
wire   [63:0] or_ln9_fu_2951_p3;
wire   [63:0] De_1_fu_2946_p2;
wire   [63:0] Ege_1_fu_2962_p2;
wire   [19:0] trunc_ln188_fu_2967_p1;
wire   [43:0] lshr_ln23_fu_2971_p4;
wire   [63:0] Du_1_fu_2957_p2;
wire   [63:0] Esu_1_fu_3001_p2;
wire   [49:0] trunc_ln191_fu_3006_p1;
wire   [13:0] lshr_ln26_fu_3010_p4;
wire   [63:0] tmp_3_fu_3028_p25;
wire   [63:0] BCe_7_fu_2981_p3;
wire   [63:0] BCi_7_fu_2989_p3;
wire   [63:0] xor_ln192_fu_3083_p2;
wire   [63:0] and_ln192_fu_3089_p2;
wire   [63:0] tmp_3_fu_3028_p27;
wire   [63:0] xor_ln192_1_fu_3095_p2;
wire   [63:0] BCo_7_fu_2995_p3;
wire   [63:0] xor_ln193_fu_3106_p2;
wire   [63:0] and_ln193_fu_3112_p2;
wire   [63:0] BCu_7_fu_3020_p3;
wire   [63:0] xor_ln194_fu_3124_p2;
wire   [63:0] and_ln194_fu_3130_p2;
wire   [63:0] xor_ln195_fu_3142_p2;
wire   [63:0] and_ln195_fu_3148_p2;
wire   [63:0] xor_ln196_fu_3159_p2;
wire   [63:0] and_ln196_fu_3164_p2;
wire   [63:0] Egu_1_fu_3182_p2;
wire   [43:0] trunc_ln199_fu_3187_p1;
wire   [19:0] lshr_ln28_fu_3191_p4;
wire   [63:0] Eme_1_fu_3215_p2;
wire   [18:0] trunc_ln201_fu_3220_p1;
wire   [44:0] lshr_ln30_fu_3224_p4;
wire   [63:0] BCe_8_fu_3201_p3;
wire   [63:0] BCi_8_fu_3209_p3;
wire   [63:0] xor_ln203_fu_3248_p2;
wire   [63:0] and_ln203_fu_3254_p2;
wire   [63:0] BCa_8_fu_3176_p3;
wire   [63:0] BCo_8_fu_3234_p3;
wire   [63:0] xor_ln204_fu_3266_p2;
wire   [63:0] and_ln204_fu_3272_p2;
wire   [63:0] BCu_8_fu_3242_p3;
wire   [63:0] xor_ln205_fu_3284_p2;
wire   [63:0] and_ln205_fu_3290_p2;
wire   [63:0] xor_ln206_fu_3302_p2;
wire   [63:0] and_ln206_fu_3308_p2;
wire   [63:0] xor_ln207_fu_3320_p2;
wire   [63:0] and_ln207_fu_3326_p2;
wire   [63:0] Ebe_1_fu_3338_p2;
wire   [62:0] trunc_ln209_fu_3343_p1;
wire   [0:0] tmp_17_fu_3347_p3;
wire   [63:0] Emu_1_fu_3375_p2;
wire   [55:0] trunc_ln212_fu_3380_p1;
wire   [7:0] lshr_ln34_fu_3384_p4;
wire   [63:0] BCe_9_fu_3363_p3;
wire   [63:0] BCi_9_fu_3369_p3;
wire   [63:0] xor_ln214_fu_3408_p2;
wire   [63:0] BCa_9_fu_3355_p3;
wire   [63:0] and_ln214_fu_3414_p2;
wire   [63:0] BCo_9_fu_3394_p3;
wire   [63:0] xor_ln215_fu_3426_p2;
wire   [63:0] and_ln215_fu_3432_p2;
wire   [63:0] BCu_9_fu_3402_p3;
wire   [63:0] xor_ln216_fu_3444_p2;
wire   [63:0] and_ln216_fu_3450_p2;
wire   [63:0] xor_ln217_fu_3462_p2;
wire   [63:0] and_ln217_fu_3468_p2;
wire   [63:0] xor_ln218_fu_3480_p2;
wire   [63:0] and_ln218_fu_3486_p2;
wire   [63:0] Ebu_1_fu_3498_p2;
wire   [36:0] trunc_ln220_fu_3503_p1;
wire   [26:0] lshr_ln36_fu_3507_p4;
wire   [63:0] Eke_1_fu_3531_p2;
wire   [53:0] trunc_ln222_fu_3536_p1;
wire   [9:0] lshr_ln38_fu_3540_p4;
wire   [63:0] BCe_10_fu_3525_p3;
wire   [63:0] BCi_10_fu_3550_p3;
wire   [63:0] xor_ln225_fu_3570_p2;
wire   [63:0] BCa_10_fu_3517_p3;
wire   [63:0] and_ln225_fu_3576_p2;
wire   [63:0] BCo_10_fu_3558_p3;
wire   [63:0] xor_ln226_fu_3588_p2;
wire   [63:0] and_ln226_fu_3594_p2;
wire   [63:0] BCu_10_fu_3564_p3;
wire   [63:0] xor_ln227_fu_3606_p2;
wire   [63:0] and_ln227_fu_3612_p2;
wire   [63:0] xor_ln228_fu_3624_p2;
wire   [63:0] and_ln228_fu_3630_p2;
wire   [63:0] xor_ln229_fu_3642_p2;
wire   [63:0] and_ln229_fu_3648_p2;
wire   [63:0] Eku_1_fu_3672_p2;
wire   [24:0] trunc_ln233_fu_3677_p1;
wire   [38:0] lshr_ln43_fu_3681_p4;
wire   [63:0] Ese_1_fu_3705_p2;
wire   [61:0] trunc_ln235_fu_3710_p1;
wire   [1:0] lshr_ln45_fu_3714_p4;
wire   [63:0] BCe_11_fu_3666_p3;
wire   [63:0] BCi_11_fu_3691_p3;
wire   [63:0] xor_ln236_fu_3732_p2;
wire   [63:0] and_ln236_fu_3738_p2;
wire   [63:0] BCa_11_fu_3660_p3;
wire   [63:0] BCo_11_fu_3699_p3;
wire   [63:0] xor_ln237_fu_3750_p2;
wire   [63:0] and_ln237_fu_3756_p2;
wire   [63:0] BCu_11_fu_3724_p3;
wire   [63:0] xor_ln238_fu_3768_p2;
wire   [63:0] and_ln238_fu_3774_p2;
wire   [63:0] xor_ln239_fu_3786_p2;
wire   [63:0] and_ln239_fu_3792_p2;
wire   [63:0] xor_ln240_fu_3804_p2;
wire   [63:0] and_ln240_fu_3810_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [4:0] tmp_fu_1351_p1;
wire   [4:0] tmp_fu_1351_p3;
wire   [4:0] tmp_fu_1351_p5;
wire   [4:0] tmp_fu_1351_p7;
wire   [4:0] tmp_fu_1351_p9;
wire   [4:0] tmp_fu_1351_p11;
wire   [4:0] tmp_fu_1351_p13;
wire   [4:0] tmp_fu_1351_p15;
wire  signed [4:0] tmp_fu_1351_p17;
wire  signed [4:0] tmp_fu_1351_p19;
wire  signed [4:0] tmp_fu_1351_p21;
wire  signed [4:0] tmp_fu_1351_p23;
wire   [4:0] tmp_3_fu_3028_p1;
wire   [4:0] tmp_3_fu_3028_p3;
wire   [4:0] tmp_3_fu_3028_p5;
wire   [4:0] tmp_3_fu_3028_p7;
wire   [4:0] tmp_3_fu_3028_p9;
wire   [4:0] tmp_3_fu_3028_p11;
wire   [4:0] tmp_3_fu_3028_p13;
wire   [4:0] tmp_3_fu_3028_p15;
wire  signed [4:0] tmp_3_fu_3028_p17;
wire  signed [4:0] tmp_3_fu_3028_p19;
wire  signed [4:0] tmp_3_fu_3028_p21;
wire  signed [4:0] tmp_3_fu_3028_p23;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 Asu_1_fu_340 = 64'd0;
#0 Aso_1_fu_344 = 64'd0;
#0 Asi_1_fu_348 = 64'd0;
#0 Ase_1_fu_352 = 64'd0;
#0 Asa_1_fu_356 = 64'd0;
#0 Amu_1_fu_360 = 64'd0;
#0 Amo_1_fu_364 = 64'd0;
#0 Ami_1_fu_368 = 64'd0;
#0 Ame_1_fu_372 = 64'd0;
#0 Ama_1_fu_376 = 64'd0;
#0 Aku_1_fu_380 = 64'd0;
#0 Ako_1_fu_384 = 64'd0;
#0 Aki_1_fu_388 = 64'd0;
#0 Ake_1_fu_392 = 64'd0;
#0 Aka_1_fu_396 = 64'd0;
#0 Agu_1_fu_400 = 64'd0;
#0 Ago_1_fu_404 = 64'd0;
#0 Agi_1_fu_408 = 64'd0;
#0 Age_1_fu_412 = 64'd0;
#0 Aga_1_fu_416 = 64'd0;
#0 Abo_1_fu_420 = 64'd0;
#0 Abu_1_fu_424 = 64'd0;
#0 Abi_1_fu_428 = 64'd0;
#0 Abe_1_fu_432 = 64'd0;
#0 Aba_1_fu_436 = 64'd0;
#0 round_fu_440 = 5'd0;
#0 ap_done_reg = 1'b0;
end

(* dissolve_hierarchy = "yes" *) sha3_256_hls_sparsemux_25_5_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 5'h0 ),
    .din0_WIDTH( 64 ),
    .CASE1( 5'h2 ),
    .din1_WIDTH( 64 ),
    .CASE2( 5'h4 ),
    .din2_WIDTH( 64 ),
    .CASE3( 5'h6 ),
    .din3_WIDTH( 64 ),
    .CASE4( 5'h8 ),
    .din4_WIDTH( 64 ),
    .CASE5( 5'hA ),
    .din5_WIDTH( 64 ),
    .CASE6( 5'hC ),
    .din6_WIDTH( 64 ),
    .CASE7( 5'hE ),
    .din7_WIDTH( 64 ),
    .CASE8( 5'h10 ),
    .din8_WIDTH( 64 ),
    .CASE9( 5'h12 ),
    .din9_WIDTH( 64 ),
    .CASE10( 5'h14 ),
    .din10_WIDTH( 64 ),
    .CASE11( 5'h16 ),
    .din11_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 5 ),
    .dout_WIDTH( 64 ))
sparsemux_25_5_64_1_1_U15(
    .din0(64'd1),
    .din1(64'd9223372036854808714),
    .din2(64'd32907),
    .din3(64'd9223372039002292353),
    .din4(64'd138),
    .din5(64'd2147516425),
    .din6(64'd2147516555),
    .din7(64'd9223372036854808713),
    .din8(64'd9223372036854808578),
    .din9(64'd32778),
    .din10(64'd9223372039002292353),
    .din11(64'd2147483649),
    .def(tmp_fu_1351_p25),
    .sel(round_fu_440),
    .dout(tmp_fu_1351_p27)
);

(* dissolve_hierarchy = "yes" *) sha3_256_hls_sparsemux_25_5_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 5'h0 ),
    .din0_WIDTH( 64 ),
    .CASE1( 5'h2 ),
    .din1_WIDTH( 64 ),
    .CASE2( 5'h4 ),
    .din2_WIDTH( 64 ),
    .CASE3( 5'h6 ),
    .din3_WIDTH( 64 ),
    .CASE4( 5'h8 ),
    .din4_WIDTH( 64 ),
    .CASE5( 5'hA ),
    .din5_WIDTH( 64 ),
    .CASE6( 5'hC ),
    .din6_WIDTH( 64 ),
    .CASE7( 5'hE ),
    .din7_WIDTH( 64 ),
    .CASE8( 5'h10 ),
    .din8_WIDTH( 64 ),
    .CASE9( 5'h12 ),
    .din9_WIDTH( 64 ),
    .CASE10( 5'h14 ),
    .din10_WIDTH( 64 ),
    .CASE11( 5'h16 ),
    .din11_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 5 ),
    .dout_WIDTH( 64 ))
sparsemux_25_5_64_1_1_U16(
    .din0(64'd32898),
    .din1(64'd9223372039002292224),
    .din2(64'd2147483649),
    .din3(64'd9223372036854808585),
    .din4(64'd136),
    .din5(64'd2147483658),
    .din6(64'd9223372036854775947),
    .din7(64'd9223372036854808579),
    .din8(64'd9223372036854775936),
    .din9(64'd9223372039002259466),
    .din10(64'd9223372036854808704),
    .din11(64'd9223372039002292232),
    .def(tmp_3_fu_3028_p25),
    .sel(round_1_reg_4254),
    .dout(tmp_3_fu_3028_p27)
);

sha3_256_hls_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter0_stage1) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Aba_1_fu_436 <= Aba;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Aba_1_fu_436 <= Aba_3_fu_3101_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Abe_1_fu_432 <= Abe;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Abe_1_fu_432 <= Abe_3_fu_3118_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Abi_1_fu_428 <= Abi;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Abi_1_fu_428 <= Abi_3_fu_3136_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Abo_1_fu_420 <= Abo;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Abo_1_fu_420 <= Abo_3_fu_3153_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Abu_1_fu_424 <= Abu;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Abu_1_fu_424 <= Abu_3_fu_3170_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Aga_1_fu_416 <= Aga;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Aga_1_fu_416 <= Aga_3_fu_3260_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Age_1_fu_412 <= Age;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Age_1_fu_412 <= Age_3_fu_3278_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Agi_1_fu_408 <= Agi;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Agi_1_fu_408 <= Agi_3_fu_3296_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Ago_1_fu_404 <= Ago;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Ago_1_fu_404 <= Ago_3_fu_3314_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Agu_1_fu_400 <= Agu;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Agu_1_fu_400 <= Agu_3_fu_3332_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Aka_1_fu_396 <= Aka;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Aka_1_fu_396 <= Aka_3_fu_3420_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Ake_1_fu_392 <= Ake;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Ake_1_fu_392 <= Ake_3_fu_3438_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Aki_1_fu_388 <= Aki;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Aki_1_fu_388 <= Aki_3_fu_3456_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Ako_1_fu_384 <= Ako;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Ako_1_fu_384 <= Ako_3_fu_3474_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Aku_1_fu_380 <= Aku;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Aku_1_fu_380 <= Aku_3_fu_3492_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Ama_1_fu_376 <= Ama;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Ama_1_fu_376 <= Ama_3_fu_3582_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Ame_1_fu_372 <= Ame;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Ame_1_fu_372 <= Ame_3_fu_3600_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Ami_1_fu_368 <= Ami;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Ami_1_fu_368 <= Ami_3_fu_3618_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Amo_1_fu_364 <= Amo;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Amo_1_fu_364 <= Amo_3_fu_3636_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Amu_1_fu_360 <= Amu;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Amu_1_fu_360 <= Amu_3_fu_3654_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Asa_1_fu_356 <= Asa;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Asa_1_fu_356 <= Asa_3_fu_3744_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Ase_1_fu_352 <= Ase;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Ase_1_fu_352 <= Ase_3_fu_3762_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Asi_1_fu_348 <= Asi;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Asi_1_fu_348 <= Asi_3_fu_3780_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Aso_1_fu_344 <= Aso;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Aso_1_fu_344 <= Aso_3_fu_3798_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Asu_1_fu_340 <= Asu;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            Asu_1_fu_340 <= Asu_3_fu_3816_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        round_fu_440 <= 5'd0;
    end else if (((icmp_ln98_fu_902_p2 == 1'd1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        round_fu_440 <= add_ln98_fu_2929_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        BCa_6_reg_4312 <= BCa_6_fu_2439_p2;
        BCo_6_reg_4317 <= BCo_6_fu_2511_p2;
        Eba_2_reg_4342 <= Eba_2_fu_2643_p2;
        Ebe_reg_4262 <= Ebe_fu_1443_p2;
        Ebu_reg_4267 <= Ebu_fu_1497_p2;
        Ege_reg_4272 <= Ege_fu_1673_p2;
        Egu_reg_4277 <= Egu_fu_1727_p2;
        Eke_reg_4282 <= Eke_fu_1901_p2;
        Eku_reg_4287 <= Eku_fu_1955_p2;
        Eme_reg_4292 <= Eme_fu_2131_p2;
        Emu_reg_4297 <= Emu_fu_2185_p2;
        Ese_reg_4302 <= Ese_fu_2361_p2;
        Esu_reg_4307 <= Esu_fu_2415_p2;
        lshr_ln24_reg_4354 <= {{Eki_1_fu_2649_p2[63:21]}};
        lshr_ln25_reg_4364 <= {{Emo_1_fu_2669_p2[63:43]}};
        lshr_ln27_reg_4374 <= {{Ebo_1_fu_2689_p2[63:36]}};
        lshr_ln29_reg_4384 <= {{Eka_1_fu_2709_p2[63:61]}};
        lshr_ln31_reg_4394 <= {{Esi_1_fu_2729_p2[63:3]}};
        lshr_ln32_reg_4404 <= {{Egi_1_fu_2749_p2[63:58]}};
        lshr_ln33_reg_4414 <= {{Eko_1_fu_2769_p2[63:39]}};
        lshr_ln35_reg_4424 <= {{Esa_1_fu_2789_p2[63:46]}};
        lshr_ln37_reg_4434 <= {{Ega_1_fu_2809_p2[63:28]}};
        lshr_ln39_reg_4444 <= {{Emi_1_fu_2829_p2[63:49]}};
        lshr_ln40_reg_4454 <= {{Eso_1_fu_2849_p2[63:8]}};
        lshr_ln41_reg_4464 <= {{Ebi_1_fu_2869_p2[63:2]}};
        lshr_ln42_reg_4474 <= {{Ego_1_fu_2889_p2[63:9]}};
        lshr_ln44_reg_4484 <= {{Ema_1_fu_2909_p2[63:23]}};
        round_1_reg_4254 <= round_fu_440;
        tmp_13_reg_4327 <= BCi_6_fu_2487_p2[32'd63];
        tmp_16_reg_4337 <= BCa_6_fu_2439_p2[32'd63];
        trunc_ln182_reg_4322 <= trunc_ln182_fu_2567_p1;
        trunc_ln185_reg_4332 <= trunc_ln185_fu_2631_p1;
        trunc_ln189_reg_4349 <= trunc_ln189_fu_2655_p1;
        trunc_ln190_reg_4359 <= trunc_ln190_fu_2675_p1;
        trunc_ln198_reg_4369 <= trunc_ln198_fu_2695_p1;
        trunc_ln200_reg_4379 <= trunc_ln200_fu_2715_p1;
        trunc_ln202_reg_4389 <= trunc_ln202_fu_2735_p1;
        trunc_ln210_reg_4399 <= trunc_ln210_fu_2755_p1;
        trunc_ln211_reg_4409 <= trunc_ln211_fu_2775_p1;
        trunc_ln213_reg_4419 <= trunc_ln213_fu_2795_p1;
        trunc_ln221_reg_4429 <= trunc_ln221_fu_2815_p1;
        trunc_ln223_reg_4439 <= trunc_ln223_fu_2835_p1;
        trunc_ln224_reg_4449 <= trunc_ln224_fu_2855_p1;
        trunc_ln231_reg_4459 <= trunc_ln231_fu_2875_p1;
        trunc_ln232_reg_4469 <= trunc_ln232_fu_2895_p1;
        trunc_ln234_reg_4479 <= trunc_ln234_fu_2915_p1;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Aba_1_out_ap_vld = 1'b1;
    end else begin
        Aba_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Abe_1_out_ap_vld = 1'b1;
    end else begin
        Abe_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Abi_1_out_ap_vld = 1'b1;
    end else begin
        Abi_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Abo_1_out_ap_vld = 1'b1;
    end else begin
        Abo_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Abu_1_out_ap_vld = 1'b1;
    end else begin
        Abu_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Aga_1_out_ap_vld = 1'b1;
    end else begin
        Aga_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Age_1_out_ap_vld = 1'b1;
    end else begin
        Age_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Agi_1_out_ap_vld = 1'b1;
    end else begin
        Agi_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Ago_1_out_ap_vld = 1'b1;
    end else begin
        Ago_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Agu_1_out_ap_vld = 1'b1;
    end else begin
        Agu_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Aka_1_out_ap_vld = 1'b1;
    end else begin
        Aka_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Ake_1_out_ap_vld = 1'b1;
    end else begin
        Ake_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Aki_1_out_ap_vld = 1'b1;
    end else begin
        Aki_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Ako_1_out_ap_vld = 1'b1;
    end else begin
        Ako_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Aku_1_out_ap_vld = 1'b1;
    end else begin
        Aku_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Ama_1_out_ap_vld = 1'b1;
    end else begin
        Ama_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Ame_1_out_ap_vld = 1'b1;
    end else begin
        Ame_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Ami_1_out_ap_vld = 1'b1;
    end else begin
        Ami_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Amo_1_out_ap_vld = 1'b1;
    end else begin
        Amo_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Amu_1_out_ap_vld = 1'b1;
    end else begin
        Amu_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Asa_1_out_ap_vld = 1'b1;
    end else begin
        Asa_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Ase_1_out_ap_vld = 1'b1;
    end else begin
        Ase_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Asi_1_out_ap_vld = 1'b1;
    end else begin
        Asi_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Aso_1_out_ap_vld = 1'b1;
    end else begin
        Aso_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln98_fu_902_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Asu_1_out_ap_vld = 1'b1;
    end else begin
        Asu_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln98_fu_902_p2 == 1'd0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Aba_1_out = Aba_1_fu_436;

assign Aba_3_fu_3101_p2 = (xor_ln192_1_fu_3095_p2 ^ Eba_2_reg_4342);

assign Aba_4_fu_1233_p2 = (Da_fu_1123_p2 ^ Aba_1_fu_436);

assign Abe_1_out = Abe_1_fu_432;

assign Abe_2_fu_1733_p2 = (De_fu_1149_p2 ^ Abe_1_fu_432);

assign Abe_3_fu_3118_p2 = (and_ln193_fu_3112_p2 ^ BCe_7_fu_2981_p3);

assign Abi_1_out = Abi_1_fu_428;

assign Abi_2_fu_2191_p2 = (Di_fu_1175_p2 ^ Abi_1_fu_428);

assign Abi_3_fu_3136_p2 = (and_ln194_fu_3130_p2 ^ BCi_7_fu_2989_p3);

assign Abo_1_out = Abo_1_fu_420;

assign Abo_2_fu_1503_p2 = (Do_fu_1201_p2 ^ Abo_1_fu_420);

assign Abo_3_fu_3153_p2 = (and_ln195_fu_3148_p2 ^ BCo_7_fu_2995_p3);

assign Abu_1_out = Abu_1_fu_424;

assign Abu_2_fu_1961_p2 = (Du_fu_1227_p2 ^ Abu_1_fu_424);

assign Abu_3_fu_3170_p2 = (and_ln196_fu_3164_p2 ^ BCu_7_fu_3020_p3);

assign Aga_1_out = Aga_1_fu_416;

assign Aga_2_fu_1989_p2 = (Da_fu_1123_p2 ^ Aga_1_fu_416);

assign Aga_3_fu_3260_p2 = (and_ln203_fu_3254_p2 ^ BCa_8_fu_3176_p3);

assign Age_1_out = Age_1_fu_412;

assign Age_2_fu_1239_p2 = (De_fu_1149_p2 ^ Age_1_fu_412);

assign Age_3_fu_3278_p2 = (and_ln204_fu_3272_p2 ^ BCe_8_fu_3201_p3);

assign Agi_1_out = Agi_1_fu_408;

assign Agi_2_fu_1759_p2 = (Di_fu_1175_p2 ^ Agi_1_fu_408);

assign Agi_3_fu_3296_p2 = (and_ln205_fu_3290_p2 ^ BCi_8_fu_3209_p3);

assign Ago_1_out = Ago_1_fu_404;

assign Ago_2_fu_2219_p2 = (Do_fu_1201_p2 ^ Ago_1_fu_404);

assign Ago_3_fu_3314_p2 = (and_ln206_fu_3308_p2 ^ BCo_8_fu_3234_p3);

assign Agu_1_out = Agu_1_fu_400;

assign Agu_2_fu_1531_p2 = (Du_fu_1227_p2 ^ Agu_1_fu_400);

assign Agu_3_fu_3332_p2 = (and_ln207_fu_3326_p2 ^ BCu_8_fu_3242_p3);

assign Aka_1_out = Aka_1_fu_396;

assign Aka_2_fu_1559_p2 = (Da_fu_1123_p2 ^ Aka_1_fu_396);

assign Aka_3_fu_3420_p2 = (and_ln214_fu_3414_p2 ^ BCa_9_fu_3355_p3);

assign Ake_1_out = Ake_1_fu_392;

assign Ake_2_fu_2017_p2 = (De_fu_1149_p2 ^ Ake_1_fu_392);

assign Ake_3_fu_3438_p2 = (and_ln215_fu_3432_p2 ^ BCe_9_fu_3363_p3);

assign Aki_1_out = Aki_1_fu_388;

assign Aki_2_fu_1267_p2 = (Di_fu_1175_p2 ^ Aki_1_fu_388);

assign Aki_3_fu_3456_p2 = (and_ln216_fu_3450_p2 ^ BCi_9_fu_3369_p3);

assign Ako_1_out = Ako_1_fu_384;

assign Ako_2_fu_1787_p2 = (Do_fu_1201_p2 ^ Ako_1_fu_384);

assign Ako_3_fu_3474_p2 = (and_ln217_fu_3468_p2 ^ BCo_9_fu_3394_p3);

assign Aku_1_out = Aku_1_fu_380;

assign Aku_2_fu_2247_p2 = (Du_fu_1227_p2 ^ Aku_1_fu_380);

assign Aku_3_fu_3492_p2 = (and_ln218_fu_3486_p2 ^ BCu_9_fu_3402_p3);

assign Ama_1_out = Ama_1_fu_376;

assign Ama_2_fu_2275_p2 = (Da_fu_1123_p2 ^ Ama_1_fu_376);

assign Ama_3_fu_3582_p2 = (and_ln225_fu_3576_p2 ^ BCa_10_fu_3517_p3);

assign Ame_1_out = Ame_1_fu_372;

assign Ame_2_fu_1587_p2 = (De_fu_1149_p2 ^ Ame_1_fu_372);

assign Ame_3_fu_3600_p2 = (and_ln226_fu_3594_p2 ^ BCe_10_fu_3525_p3);

assign Ami_1_out = Ami_1_fu_368;

assign Ami_2_fu_2045_p2 = (Di_fu_1175_p2 ^ Ami_1_fu_368);

assign Ami_3_fu_3618_p2 = (and_ln227_fu_3612_p2 ^ BCi_10_fu_3550_p3);

assign Amo_1_out = Amo_1_fu_364;

assign Amo_2_fu_1295_p2 = (Do_fu_1201_p2 ^ Amo_1_fu_364);

assign Amo_3_fu_3636_p2 = (and_ln228_fu_3630_p2 ^ BCo_10_fu_3558_p3);

assign Amu_1_out = Amu_1_fu_360;

assign Amu_2_fu_1815_p2 = (Du_fu_1227_p2 ^ Amu_1_fu_360);

assign Amu_3_fu_3654_p2 = (and_ln229_fu_3648_p2 ^ BCu_10_fu_3564_p3);

assign Asa_1_out = Asa_1_fu_356;

assign Asa_2_fu_1843_p2 = (Da_fu_1123_p2 ^ Asa_1_fu_356);

assign Asa_3_fu_3744_p2 = (and_ln236_fu_3738_p2 ^ BCa_11_fu_3660_p3);

assign Ase_1_out = Ase_1_fu_352;

assign Ase_2_fu_2303_p2 = (De_fu_1149_p2 ^ Ase_1_fu_352);

assign Ase_3_fu_3762_p2 = (and_ln237_fu_3756_p2 ^ BCe_11_fu_3666_p3);

assign Asi_1_out = Asi_1_fu_348;

assign Asi_2_fu_1615_p2 = (Di_fu_1175_p2 ^ Asi_1_fu_348);

assign Asi_3_fu_3780_p2 = (and_ln238_fu_3774_p2 ^ BCi_11_fu_3691_p3);

assign Aso_1_out = Aso_1_fu_344;

assign Aso_2_fu_2073_p2 = (Do_fu_1201_p2 ^ Aso_1_fu_344);

assign Aso_3_fu_3798_p2 = (and_ln239_fu_3792_p2 ^ BCo_11_fu_3699_p3);

assign Asu_1_out = Asu_1_fu_340;

assign Asu_2_fu_1323_p2 = (Du_fu_1227_p2 ^ Asu_1_fu_340);

assign Asu_3_fu_3816_p2 = (and_ln240_fu_3810_p2 ^ BCu_11_fu_3724_p3);

assign BCa_10_fu_3517_p3 = {{trunc_ln220_fu_3503_p1}, {lshr_ln36_fu_3507_p4}};

assign BCa_11_fu_3660_p3 = {{trunc_ln231_reg_4459}, {lshr_ln41_reg_4464}};

assign BCa_2_fu_1523_p3 = {{trunc_ln128_fu_1509_p1}, {lshr_ln9_fu_1513_p4}};

assign BCa_3_fu_1751_p3 = {{trunc_ln139_fu_1739_p1}, {tmp_11_fu_1743_p3}};

assign BCa_4_fu_1981_p3 = {{trunc_ln150_fu_1967_p1}, {lshr_ln13_fu_1971_p4}};

assign BCa_5_fu_2211_p3 = {{trunc_ln161_fu_2197_p1}, {lshr_ln18_fu_2201_p4}};

assign BCa_6_fu_2439_p2 = (xor_ln174_fu_2421_p2 ^ xor_ln174_2_fu_2433_p2);

assign BCa_8_fu_3176_p3 = {{trunc_ln198_reg_4369}, {lshr_ln27_reg_4374}};

assign BCa_9_fu_3355_p3 = {{trunc_ln209_fu_3343_p1}, {tmp_17_fu_3347_p3}};

assign BCa_fu_1001_p2 = (xor_ln104_2_fu_995_p2 ^ xor_ln104_1_fu_989_p2);

assign BCe_10_fu_3525_p3 = {{trunc_ln221_reg_4429}, {lshr_ln37_reg_4434}};

assign BCe_11_fu_3666_p3 = {{trunc_ln232_reg_4469}, {lshr_ln42_reg_4474}};

assign BCe_1_fu_1259_p3 = {{trunc_ln118_fu_1245_p1}, {lshr_ln5_fu_1249_p4}};

assign BCe_2_fu_1551_p3 = {{trunc_ln129_fu_1537_p1}, {lshr_ln_fu_1541_p4}};

assign BCe_3_fu_1779_p3 = {{trunc_ln140_fu_1765_p1}, {lshr_ln4_fu_1769_p4}};

assign BCe_4_fu_2009_p3 = {{trunc_ln151_fu_1995_p1}, {lshr_ln14_fu_1999_p4}};

assign BCe_5_fu_2239_p3 = {{trunc_ln162_fu_2225_p1}, {lshr_ln19_fu_2229_p4}};

assign BCe_6_fu_2463_p2 = (xor_ln175_fu_2445_p2 ^ xor_ln175_2_fu_2457_p2);

assign BCe_7_fu_2981_p3 = {{trunc_ln188_fu_2967_p1}, {lshr_ln23_fu_2971_p4}};

assign BCe_8_fu_3201_p3 = {{trunc_ln199_fu_3187_p1}, {lshr_ln28_fu_3191_p4}};

assign BCe_9_fu_3363_p3 = {{trunc_ln210_reg_4399}, {lshr_ln32_reg_4404}};

assign BCe_fu_1025_p2 = (xor_ln105_2_fu_1019_p2 ^ xor_ln105_1_fu_1013_p2);

assign BCi_10_fu_3550_p3 = {{trunc_ln222_fu_3536_p1}, {lshr_ln38_fu_3540_p4}};

assign BCi_11_fu_3691_p3 = {{trunc_ln233_fu_3677_p1}, {lshr_ln43_fu_3681_p4}};

assign BCi_1_fu_1287_p3 = {{trunc_ln119_fu_1273_p1}, {lshr_ln6_fu_1277_p4}};

assign BCi_2_fu_1579_p3 = {{trunc_ln130_fu_1565_p1}, {lshr_ln1_fu_1569_p4}};

assign BCi_3_fu_1807_p3 = {{trunc_ln141_fu_1793_p1}, {lshr_ln10_fu_1797_p4}};

assign BCi_4_fu_2037_p3 = {{trunc_ln152_fu_2023_p1}, {lshr_ln15_fu_2027_p4}};

assign BCi_5_fu_2267_p3 = {{trunc_ln163_fu_2253_p1}, {lshr_ln20_fu_2257_p4}};

assign BCi_6_fu_2487_p2 = (xor_ln176_fu_2469_p2 ^ xor_ln176_2_fu_2481_p2);

assign BCi_7_fu_2989_p3 = {{trunc_ln189_reg_4349}, {lshr_ln24_reg_4354}};

assign BCi_8_fu_3209_p3 = {{trunc_ln200_reg_4379}, {lshr_ln29_reg_4384}};

assign BCi_9_fu_3369_p3 = {{trunc_ln211_reg_4409}, {lshr_ln33_reg_4414}};

assign BCi_fu_1049_p2 = (xor_ln106_2_fu_1037_p2 ^ xor_ln106_1_fu_1043_p2);

assign BCo_10_fu_3558_p3 = {{trunc_ln223_reg_4439}, {lshr_ln39_reg_4444}};

assign BCo_11_fu_3699_p3 = {{trunc_ln234_reg_4479}, {lshr_ln44_reg_4484}};

assign BCo_1_fu_1315_p3 = {{trunc_ln120_fu_1301_p1}, {lshr_ln7_fu_1305_p4}};

assign BCo_2_fu_1607_p3 = {{trunc_ln131_fu_1593_p1}, {lshr_ln2_fu_1597_p4}};

assign BCo_3_fu_1835_p3 = {{trunc_ln142_fu_1821_p1}, {lshr_ln11_fu_1825_p4}};

assign BCo_4_fu_2065_p3 = {{trunc_ln153_fu_2051_p1}, {lshr_ln16_fu_2055_p4}};

assign BCo_5_fu_2295_p3 = {{trunc_ln164_fu_2281_p1}, {lshr_ln21_fu_2285_p4}};

assign BCo_6_fu_2511_p2 = (xor_ln177_fu_2493_p2 ^ xor_ln177_2_fu_2505_p2);

assign BCo_7_fu_2995_p3 = {{trunc_ln190_reg_4359}, {lshr_ln25_reg_4364}};

assign BCo_8_fu_3234_p3 = {{trunc_ln201_fu_3220_p1}, {lshr_ln30_fu_3224_p4}};

assign BCo_9_fu_3394_p3 = {{trunc_ln212_fu_3380_p1}, {lshr_ln34_fu_3384_p4}};

assign BCo_fu_1073_p2 = (xor_ln107_fu_1055_p2 ^ xor_ln107_2_fu_1067_p2);

assign BCu_10_fu_3564_p3 = {{trunc_ln224_reg_4449}, {lshr_ln40_reg_4454}};

assign BCu_11_fu_3724_p3 = {{trunc_ln235_fu_3710_p1}, {lshr_ln45_fu_3714_p4}};

assign BCu_1_fu_1343_p3 = {{trunc_ln121_fu_1329_p1}, {lshr_ln8_fu_1333_p4}};

assign BCu_2_fu_1635_p3 = {{trunc_ln132_fu_1621_p1}, {lshr_ln3_fu_1625_p4}};

assign BCu_3_fu_1863_p3 = {{trunc_ln143_fu_1849_p1}, {lshr_ln12_fu_1853_p4}};

assign BCu_4_fu_2093_p3 = {{trunc_ln154_fu_2079_p1}, {lshr_ln17_fu_2083_p4}};

assign BCu_5_fu_2323_p3 = {{trunc_ln165_fu_2309_p1}, {lshr_ln22_fu_2313_p4}};

assign BCu_6_fu_2535_p2 = (xor_ln178_fu_2517_p2 ^ xor_ln178_2_fu_2529_p2);

assign BCu_7_fu_3020_p3 = {{trunc_ln191_fu_3006_p1}, {lshr_ln26_fu_3010_p4}};

assign BCu_8_fu_3242_p3 = {{trunc_ln202_reg_4389}, {lshr_ln31_reg_4394}};

assign BCu_9_fu_3402_p3 = {{trunc_ln213_reg_4419}, {lshr_ln35_reg_4424}};

assign BCu_fu_1097_p2 = (xor_ln108_2_fu_1091_p2 ^ Abu_1_fu_424);

assign Da_1_fu_2561_p2 = (or_ln5_fu_2553_p3 ^ BCu_6_fu_2535_p2);

assign Da_fu_1123_p2 = (or_ln_fu_1115_p3 ^ BCu_fu_1097_p2);

assign De_1_fu_2946_p2 = (or_ln6_fu_2940_p3 ^ BCa_6_reg_4312);

assign De_fu_1149_p2 = (or_ln1_fu_1141_p3 ^ BCa_fu_1001_p2);

assign Di_1_fu_2599_p2 = (or_ln7_fu_2591_p3 ^ BCe_6_fu_2463_p2);

assign Di_fu_1175_p2 = (or_ln2_fu_1167_p3 ^ BCe_fu_1025_p2);

assign Do_1_fu_2625_p2 = (or_ln8_fu_2617_p3 ^ BCi_6_fu_2487_p2);

assign Do_fu_1201_p2 = (or_ln3_fu_1193_p3 ^ BCi_fu_1049_p2);

assign Du_1_fu_2957_p2 = (or_ln9_fu_2951_p3 ^ BCo_6_reg_4317);

assign Du_fu_1227_p2 = (or_ln4_fu_1219_p3 ^ BCo_fu_1073_p2);

assign Eba_2_fu_2643_p2 = (Eba_fu_1425_p2 ^ Da_1_fu_2561_p2);

assign Eba_fu_1425_p2 = (xor_ln122_1_fu_1419_p2 ^ and_ln122_fu_1413_p2);

assign Ebe_1_fu_3338_p2 = (Ebe_reg_4262 ^ De_1_fu_2946_p2);

assign Ebe_fu_1443_p2 = (and_ln123_fu_1437_p2 ^ BCe_1_fu_1259_p3);

assign Ebi_1_fu_2869_p2 = (Ebi_fu_1461_p2 ^ Di_1_fu_2599_p2);

assign Ebi_fu_1461_p2 = (and_ln124_fu_1455_p2 ^ BCi_1_fu_1287_p3);

assign Ebo_1_fu_2689_p2 = (Ebo_fu_1479_p2 ^ Do_1_fu_2625_p2);

assign Ebo_fu_1479_p2 = (and_ln125_fu_1473_p2 ^ BCo_1_fu_1315_p3);

assign Ebu_1_fu_3498_p2 = (Ebu_reg_4267 ^ Du_1_fu_2957_p2);

assign Ebu_fu_1497_p2 = (and_ln126_fu_1491_p2 ^ BCu_1_fu_1343_p3);

assign Ega_1_fu_2809_p2 = (Ega_fu_1655_p2 ^ Da_1_fu_2561_p2);

assign Ega_fu_1655_p2 = (and_ln133_fu_1649_p2 ^ BCa_2_fu_1523_p3);

assign Ege_1_fu_2962_p2 = (Ege_reg_4272 ^ De_1_fu_2946_p2);

assign Ege_fu_1673_p2 = (and_ln134_fu_1667_p2 ^ BCe_2_fu_1551_p3);

assign Egi_1_fu_2749_p2 = (Egi_fu_1691_p2 ^ Di_1_fu_2599_p2);

assign Egi_fu_1691_p2 = (and_ln135_fu_1685_p2 ^ BCi_2_fu_1579_p3);

assign Ego_1_fu_2889_p2 = (Ego_fu_1709_p2 ^ Do_1_fu_2625_p2);

assign Ego_fu_1709_p2 = (and_ln136_fu_1703_p2 ^ BCo_2_fu_1607_p3);

assign Egu_1_fu_3182_p2 = (Egu_reg_4277 ^ Du_1_fu_2957_p2);

assign Egu_fu_1727_p2 = (and_ln137_fu_1721_p2 ^ BCu_2_fu_1635_p3);

assign Eka_1_fu_2709_p2 = (Eka_fu_1883_p2 ^ Da_1_fu_2561_p2);

assign Eka_fu_1883_p2 = (and_ln144_fu_1877_p2 ^ BCa_3_fu_1751_p3);

assign Eke_1_fu_3531_p2 = (Eke_reg_4282 ^ De_1_fu_2946_p2);

assign Eke_fu_1901_p2 = (and_ln145_fu_1895_p2 ^ BCe_3_fu_1779_p3);

assign Eki_1_fu_2649_p2 = (Eki_fu_1919_p2 ^ Di_1_fu_2599_p2);

assign Eki_fu_1919_p2 = (and_ln146_fu_1913_p2 ^ BCi_3_fu_1807_p3);

assign Eko_1_fu_2769_p2 = (Eko_fu_1937_p2 ^ Do_1_fu_2625_p2);

assign Eko_fu_1937_p2 = (and_ln147_fu_1931_p2 ^ BCo_3_fu_1835_p3);

assign Eku_1_fu_3672_p2 = (Eku_reg_4287 ^ Du_1_fu_2957_p2);

assign Eku_fu_1955_p2 = (and_ln148_fu_1949_p2 ^ BCu_3_fu_1863_p3);

assign Ema_1_fu_2909_p2 = (Ema_fu_2113_p2 ^ Da_1_fu_2561_p2);

assign Ema_fu_2113_p2 = (and_ln155_fu_2107_p2 ^ BCa_4_fu_1981_p3);

assign Eme_1_fu_3215_p2 = (Eme_reg_4292 ^ De_1_fu_2946_p2);

assign Eme_fu_2131_p2 = (and_ln156_fu_2125_p2 ^ BCe_4_fu_2009_p3);

assign Emi_1_fu_2829_p2 = (Emi_fu_2149_p2 ^ Di_1_fu_2599_p2);

assign Emi_fu_2149_p2 = (and_ln157_fu_2143_p2 ^ BCi_4_fu_2037_p3);

assign Emo_1_fu_2669_p2 = (Emo_fu_2167_p2 ^ Do_1_fu_2625_p2);

assign Emo_fu_2167_p2 = (and_ln158_fu_2161_p2 ^ BCo_4_fu_2065_p3);

assign Emu_1_fu_3375_p2 = (Emu_reg_4297 ^ Du_1_fu_2957_p2);

assign Emu_fu_2185_p2 = (and_ln159_fu_2179_p2 ^ BCu_4_fu_2093_p3);

assign Esa_1_fu_2789_p2 = (Esa_fu_2343_p2 ^ Da_1_fu_2561_p2);

assign Esa_fu_2343_p2 = (and_ln166_fu_2337_p2 ^ BCa_5_fu_2211_p3);

assign Ese_1_fu_3705_p2 = (Ese_reg_4302 ^ De_1_fu_2946_p2);

assign Ese_fu_2361_p2 = (and_ln167_fu_2355_p2 ^ BCe_5_fu_2239_p3);

assign Esi_1_fu_2729_p2 = (Esi_fu_2379_p2 ^ Di_1_fu_2599_p2);

assign Esi_fu_2379_p2 = (and_ln168_fu_2373_p2 ^ BCi_5_fu_2267_p3);

assign Eso_1_fu_2849_p2 = (Eso_fu_2397_p2 ^ Do_1_fu_2625_p2);

assign Eso_fu_2397_p2 = (and_ln169_fu_2391_p2 ^ BCo_5_fu_2295_p3);

assign Esu_1_fu_3001_p2 = (Esu_reg_4307 ^ Du_1_fu_2957_p2);

assign Esu_fu_2415_p2 = (and_ln170_fu_2409_p2 ^ BCu_5_fu_2323_p3);

assign add_ln98_fu_2929_p2 = (round_fu_440 + 5'd2);

assign and_ln122_fu_1413_p2 = (xor_ln122_fu_1407_p2 & BCi_1_fu_1287_p3);

assign and_ln123_fu_1437_p2 = (xor_ln123_fu_1431_p2 & BCo_1_fu_1315_p3);

assign and_ln124_fu_1455_p2 = (xor_ln124_fu_1449_p2 & BCu_1_fu_1343_p3);

assign and_ln125_fu_1473_p2 = (xor_ln125_fu_1467_p2 & Aba_4_fu_1233_p2);

assign and_ln126_fu_1491_p2 = (xor_ln126_fu_1485_p2 & BCe_1_fu_1259_p3);

assign and_ln133_fu_1649_p2 = (xor_ln133_fu_1643_p2 & BCi_2_fu_1579_p3);

assign and_ln134_fu_1667_p2 = (xor_ln134_fu_1661_p2 & BCo_2_fu_1607_p3);

assign and_ln135_fu_1685_p2 = (xor_ln135_fu_1679_p2 & BCu_2_fu_1635_p3);

assign and_ln136_fu_1703_p2 = (xor_ln136_fu_1697_p2 & BCa_2_fu_1523_p3);

assign and_ln137_fu_1721_p2 = (xor_ln137_fu_1715_p2 & BCe_2_fu_1551_p3);

assign and_ln144_fu_1877_p2 = (xor_ln144_fu_1871_p2 & BCi_3_fu_1807_p3);

assign and_ln145_fu_1895_p2 = (xor_ln145_fu_1889_p2 & BCo_3_fu_1835_p3);

assign and_ln146_fu_1913_p2 = (xor_ln146_fu_1907_p2 & BCu_3_fu_1863_p3);

assign and_ln147_fu_1931_p2 = (xor_ln147_fu_1925_p2 & BCa_3_fu_1751_p3);

assign and_ln148_fu_1949_p2 = (xor_ln148_fu_1943_p2 & BCe_3_fu_1779_p3);

assign and_ln155_fu_2107_p2 = (xor_ln155_fu_2101_p2 & BCi_4_fu_2037_p3);

assign and_ln156_fu_2125_p2 = (xor_ln156_fu_2119_p2 & BCo_4_fu_2065_p3);

assign and_ln157_fu_2143_p2 = (xor_ln157_fu_2137_p2 & BCu_4_fu_2093_p3);

assign and_ln158_fu_2161_p2 = (xor_ln158_fu_2155_p2 & BCa_4_fu_1981_p3);

assign and_ln159_fu_2179_p2 = (xor_ln159_fu_2173_p2 & BCe_4_fu_2009_p3);

assign and_ln166_fu_2337_p2 = (xor_ln166_fu_2331_p2 & BCi_5_fu_2267_p3);

assign and_ln167_fu_2355_p2 = (xor_ln167_fu_2349_p2 & BCo_5_fu_2295_p3);

assign and_ln168_fu_2373_p2 = (xor_ln168_fu_2367_p2 & BCu_5_fu_2323_p3);

assign and_ln169_fu_2391_p2 = (xor_ln169_fu_2385_p2 & BCa_5_fu_2211_p3);

assign and_ln170_fu_2409_p2 = (xor_ln170_fu_2403_p2 & BCe_5_fu_2239_p3);

assign and_ln192_fu_3089_p2 = (xor_ln192_fu_3083_p2 & BCi_7_fu_2989_p3);

assign and_ln193_fu_3112_p2 = (xor_ln193_fu_3106_p2 & BCo_7_fu_2995_p3);

assign and_ln194_fu_3130_p2 = (xor_ln194_fu_3124_p2 & BCu_7_fu_3020_p3);

assign and_ln195_fu_3148_p2 = (xor_ln195_fu_3142_p2 & Eba_2_reg_4342);

assign and_ln196_fu_3164_p2 = (xor_ln196_fu_3159_p2 & BCe_7_fu_2981_p3);

assign and_ln203_fu_3254_p2 = (xor_ln203_fu_3248_p2 & BCi_8_fu_3209_p3);

assign and_ln204_fu_3272_p2 = (xor_ln204_fu_3266_p2 & BCo_8_fu_3234_p3);

assign and_ln205_fu_3290_p2 = (xor_ln205_fu_3284_p2 & BCu_8_fu_3242_p3);

assign and_ln206_fu_3308_p2 = (xor_ln206_fu_3302_p2 & BCa_8_fu_3176_p3);

assign and_ln207_fu_3326_p2 = (xor_ln207_fu_3320_p2 & BCe_8_fu_3201_p3);

assign and_ln214_fu_3414_p2 = (xor_ln214_fu_3408_p2 & BCi_9_fu_3369_p3);

assign and_ln215_fu_3432_p2 = (xor_ln215_fu_3426_p2 & BCo_9_fu_3394_p3);

assign and_ln216_fu_3450_p2 = (xor_ln216_fu_3444_p2 & BCu_9_fu_3402_p3);

assign and_ln217_fu_3468_p2 = (xor_ln217_fu_3462_p2 & BCa_9_fu_3355_p3);

assign and_ln218_fu_3486_p2 = (xor_ln218_fu_3480_p2 & BCe_9_fu_3363_p3);

assign and_ln225_fu_3576_p2 = (xor_ln225_fu_3570_p2 & BCi_10_fu_3550_p3);

assign and_ln226_fu_3594_p2 = (xor_ln226_fu_3588_p2 & BCo_10_fu_3558_p3);

assign and_ln227_fu_3612_p2 = (xor_ln227_fu_3606_p2 & BCu_10_fu_3564_p3);

assign and_ln228_fu_3630_p2 = (xor_ln228_fu_3624_p2 & BCa_10_fu_3517_p3);

assign and_ln229_fu_3648_p2 = (xor_ln229_fu_3642_p2 & BCe_10_fu_3525_p3);

assign and_ln236_fu_3738_p2 = (xor_ln236_fu_3732_p2 & BCi_11_fu_3691_p3);

assign and_ln237_fu_3756_p2 = (xor_ln237_fu_3750_p2 & BCo_11_fu_3699_p3);

assign and_ln238_fu_3774_p2 = (xor_ln238_fu_3768_p2 & BCu_11_fu_3724_p3);

assign and_ln239_fu_3792_p2 = (xor_ln239_fu_3786_p2 & BCa_11_fu_3660_p3);

assign and_ln240_fu_3810_p2 = (xor_ln240_fu_3804_p2 & BCe_11_fu_3666_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_ready = ap_ready_sig;

assign icmp_ln98_fu_902_p2 = ((round_fu_440 < 5'd24) ? 1'b1 : 1'b0);

assign lshr_ln10_fu_1797_p4 = {{Ako_2_fu_1787_p2[63:39]}};

assign lshr_ln11_fu_1825_p4 = {{Amu_2_fu_1815_p2[63:56]}};

assign lshr_ln12_fu_1853_p4 = {{Asa_2_fu_1843_p2[63:46]}};

assign lshr_ln13_fu_1971_p4 = {{Abu_2_fu_1961_p2[63:37]}};

assign lshr_ln14_fu_1999_p4 = {{Aga_2_fu_1989_p2[63:28]}};

assign lshr_ln15_fu_2027_p4 = {{Ake_2_fu_2017_p2[63:54]}};

assign lshr_ln16_fu_2055_p4 = {{Ami_2_fu_2045_p2[63:49]}};

assign lshr_ln17_fu_2083_p4 = {{Aso_2_fu_2073_p2[63:8]}};

assign lshr_ln18_fu_2201_p4 = {{Abi_2_fu_2191_p2[63:2]}};

assign lshr_ln19_fu_2229_p4 = {{Ago_2_fu_2219_p2[63:9]}};

assign lshr_ln1_fu_1569_p4 = {{Aka_2_fu_1559_p2[63:61]}};

assign lshr_ln20_fu_2257_p4 = {{Aku_2_fu_2247_p2[63:25]}};

assign lshr_ln21_fu_2285_p4 = {{Ama_2_fu_2275_p2[63:23]}};

assign lshr_ln22_fu_2313_p4 = {{Ase_2_fu_2303_p2[63:62]}};

assign lshr_ln23_fu_2971_p4 = {{Ege_1_fu_2962_p2[63:20]}};

assign lshr_ln26_fu_3010_p4 = {{Esu_1_fu_3001_p2[63:50]}};

assign lshr_ln28_fu_3191_p4 = {{Egu_1_fu_3182_p2[63:44]}};

assign lshr_ln2_fu_1597_p4 = {{Ame_2_fu_1587_p2[63:19]}};

assign lshr_ln30_fu_3224_p4 = {{Eme_1_fu_3215_p2[63:19]}};

assign lshr_ln34_fu_3384_p4 = {{Emu_1_fu_3375_p2[63:56]}};

assign lshr_ln36_fu_3507_p4 = {{Ebu_1_fu_3498_p2[63:37]}};

assign lshr_ln38_fu_3540_p4 = {{Eke_1_fu_3531_p2[63:54]}};

assign lshr_ln3_fu_1625_p4 = {{Asi_2_fu_1615_p2[63:3]}};

assign lshr_ln43_fu_3681_p4 = {{Eku_1_fu_3672_p2[63:25]}};

assign lshr_ln45_fu_3714_p4 = {{Ese_1_fu_3705_p2[63:62]}};

assign lshr_ln4_fu_1769_p4 = {{Agi_2_fu_1759_p2[63:58]}};

assign lshr_ln5_fu_1249_p4 = {{Age_2_fu_1239_p2[63:20]}};

assign lshr_ln6_fu_1277_p4 = {{Aki_2_fu_1267_p2[63:21]}};

assign lshr_ln7_fu_1305_p4 = {{Amo_2_fu_1295_p2[63:43]}};

assign lshr_ln8_fu_1333_p4 = {{Asu_2_fu_1323_p2[63:50]}};

assign lshr_ln9_fu_1513_p4 = {{Abo_2_fu_1503_p2[63:36]}};

assign lshr_ln_fu_1541_p4 = {{Agu_2_fu_1531_p2[63:44]}};

assign or_ln1_fu_1141_p3 = {{trunc_ln112_fu_1129_p1}, {tmp_7_fu_1133_p3}};

assign or_ln2_fu_1167_p3 = {{trunc_ln113_fu_1155_p1}, {tmp_8_fu_1159_p3}};

assign or_ln3_fu_1193_p3 = {{trunc_ln114_fu_1181_p1}, {tmp_9_fu_1185_p3}};

assign or_ln4_fu_1219_p3 = {{trunc_ln115_fu_1207_p1}, {tmp_10_fu_1211_p3}};

assign or_ln5_fu_2553_p3 = {{trunc_ln181_fu_2541_p1}, {tmp_12_fu_2545_p3}};

assign or_ln6_fu_2940_p3 = {{trunc_ln182_reg_4322}, {tmp_13_reg_4327}};

assign or_ln7_fu_2591_p3 = {{trunc_ln183_fu_2579_p1}, {tmp_14_fu_2583_p3}};

assign or_ln8_fu_2617_p3 = {{trunc_ln184_fu_2605_p1}, {tmp_15_fu_2609_p3}};

assign or_ln9_fu_2951_p3 = {{trunc_ln185_reg_4332}, {tmp_16_reg_4337}};

assign or_ln_fu_1115_p3 = {{trunc_ln111_fu_1103_p1}, {tmp_6_fu_1107_p3}};

assign tmp_10_fu_1211_p3 = BCa_fu_1001_p2[32'd63];

assign tmp_11_fu_1743_p3 = Abe_2_fu_1733_p2[32'd63];

assign tmp_12_fu_2545_p3 = BCe_6_fu_2463_p2[32'd63];

assign tmp_14_fu_2583_p3 = BCo_6_fu_2511_p2[32'd63];

assign tmp_15_fu_2609_p3 = BCu_6_fu_2535_p2[32'd63];

assign tmp_17_fu_3347_p3 = Ebe_1_fu_3338_p2[32'd63];

assign tmp_3_fu_3028_p25 = 'bx;

assign tmp_6_fu_1107_p3 = BCe_fu_1025_p2[32'd63];

assign tmp_7_fu_1133_p3 = BCi_fu_1049_p2[32'd63];

assign tmp_8_fu_1159_p3 = BCo_fu_1073_p2[32'd63];

assign tmp_9_fu_1185_p3 = BCu_fu_1097_p2[32'd63];

assign tmp_fu_1351_p25 = 'bx;

assign trunc_ln111_fu_1103_p1 = BCe_fu_1025_p2[62:0];

assign trunc_ln112_fu_1129_p1 = BCi_fu_1049_p2[62:0];

assign trunc_ln113_fu_1155_p1 = BCo_fu_1073_p2[62:0];

assign trunc_ln114_fu_1181_p1 = BCu_fu_1097_p2[62:0];

assign trunc_ln115_fu_1207_p1 = BCa_fu_1001_p2[62:0];

assign trunc_ln118_fu_1245_p1 = Age_2_fu_1239_p2[19:0];

assign trunc_ln119_fu_1273_p1 = Aki_2_fu_1267_p2[20:0];

assign trunc_ln120_fu_1301_p1 = Amo_2_fu_1295_p2[42:0];

assign trunc_ln121_fu_1329_p1 = Asu_2_fu_1323_p2[49:0];

assign trunc_ln128_fu_1509_p1 = Abo_2_fu_1503_p2[35:0];

assign trunc_ln129_fu_1537_p1 = Agu_2_fu_1531_p2[43:0];

assign trunc_ln130_fu_1565_p1 = Aka_2_fu_1559_p2[60:0];

assign trunc_ln131_fu_1593_p1 = Ame_2_fu_1587_p2[18:0];

assign trunc_ln132_fu_1621_p1 = Asi_2_fu_1615_p2[2:0];

assign trunc_ln139_fu_1739_p1 = Abe_2_fu_1733_p2[62:0];

assign trunc_ln140_fu_1765_p1 = Agi_2_fu_1759_p2[57:0];

assign trunc_ln141_fu_1793_p1 = Ako_2_fu_1787_p2[38:0];

assign trunc_ln142_fu_1821_p1 = Amu_2_fu_1815_p2[55:0];

assign trunc_ln143_fu_1849_p1 = Asa_2_fu_1843_p2[45:0];

assign trunc_ln150_fu_1967_p1 = Abu_2_fu_1961_p2[36:0];

assign trunc_ln151_fu_1995_p1 = Aga_2_fu_1989_p2[27:0];

assign trunc_ln152_fu_2023_p1 = Ake_2_fu_2017_p2[53:0];

assign trunc_ln153_fu_2051_p1 = Ami_2_fu_2045_p2[48:0];

assign trunc_ln154_fu_2079_p1 = Aso_2_fu_2073_p2[7:0];

assign trunc_ln161_fu_2197_p1 = Abi_2_fu_2191_p2[1:0];

assign trunc_ln162_fu_2225_p1 = Ago_2_fu_2219_p2[8:0];

assign trunc_ln163_fu_2253_p1 = Aku_2_fu_2247_p2[24:0];

assign trunc_ln164_fu_2281_p1 = Ama_2_fu_2275_p2[22:0];

assign trunc_ln165_fu_2309_p1 = Ase_2_fu_2303_p2[61:0];

assign trunc_ln181_fu_2541_p1 = BCe_6_fu_2463_p2[62:0];

assign trunc_ln182_fu_2567_p1 = BCi_6_fu_2487_p2[62:0];

assign trunc_ln183_fu_2579_p1 = BCo_6_fu_2511_p2[62:0];

assign trunc_ln184_fu_2605_p1 = BCu_6_fu_2535_p2[62:0];

assign trunc_ln185_fu_2631_p1 = BCa_6_fu_2439_p2[62:0];

assign trunc_ln188_fu_2967_p1 = Ege_1_fu_2962_p2[19:0];

assign trunc_ln189_fu_2655_p1 = Eki_1_fu_2649_p2[20:0];

assign trunc_ln190_fu_2675_p1 = Emo_1_fu_2669_p2[42:0];

assign trunc_ln191_fu_3006_p1 = Esu_1_fu_3001_p2[49:0];

assign trunc_ln198_fu_2695_p1 = Ebo_1_fu_2689_p2[35:0];

assign trunc_ln199_fu_3187_p1 = Egu_1_fu_3182_p2[43:0];

assign trunc_ln200_fu_2715_p1 = Eka_1_fu_2709_p2[60:0];

assign trunc_ln201_fu_3220_p1 = Eme_1_fu_3215_p2[18:0];

assign trunc_ln202_fu_2735_p1 = Esi_1_fu_2729_p2[2:0];

assign trunc_ln209_fu_3343_p1 = Ebe_1_fu_3338_p2[62:0];

assign trunc_ln210_fu_2755_p1 = Egi_1_fu_2749_p2[57:0];

assign trunc_ln211_fu_2775_p1 = Eko_1_fu_2769_p2[38:0];

assign trunc_ln212_fu_3380_p1 = Emu_1_fu_3375_p2[55:0];

assign trunc_ln213_fu_2795_p1 = Esa_1_fu_2789_p2[45:0];

assign trunc_ln220_fu_3503_p1 = Ebu_1_fu_3498_p2[36:0];

assign trunc_ln221_fu_2815_p1 = Ega_1_fu_2809_p2[27:0];

assign trunc_ln222_fu_3536_p1 = Eke_1_fu_3531_p2[53:0];

assign trunc_ln223_fu_2835_p1 = Emi_1_fu_2829_p2[48:0];

assign trunc_ln224_fu_2855_p1 = Eso_1_fu_2849_p2[7:0];

assign trunc_ln231_fu_2875_p1 = Ebi_1_fu_2869_p2[1:0];

assign trunc_ln232_fu_2895_p1 = Ego_1_fu_2889_p2[8:0];

assign trunc_ln233_fu_3677_p1 = Eku_1_fu_3672_p2[24:0];

assign trunc_ln234_fu_2915_p1 = Ema_1_fu_2909_p2[22:0];

assign trunc_ln235_fu_3710_p1 = Ese_1_fu_3705_p2[61:0];

assign xor_ln104_1_fu_989_p2 = (Asa_1_fu_356 ^ Aga_1_fu_416);

assign xor_ln104_2_fu_995_p2 = (xor_ln104_fu_983_p2 ^ Aba_1_fu_436);

assign xor_ln104_fu_983_p2 = (Ama_1_fu_376 ^ Aka_1_fu_396);

assign xor_ln105_1_fu_1013_p2 = (Ase_1_fu_352 ^ Age_1_fu_412);

assign xor_ln105_2_fu_1019_p2 = (xor_ln105_fu_1007_p2 ^ Abe_1_fu_432);

assign xor_ln105_fu_1007_p2 = (Ame_1_fu_372 ^ Ake_1_fu_392);

assign xor_ln106_1_fu_1043_p2 = (Asi_1_fu_348 ^ Agi_1_fu_408);

assign xor_ln106_2_fu_1037_p2 = (xor_ln106_fu_1031_p2 ^ Abi_1_fu_428);

assign xor_ln106_fu_1031_p2 = (Ami_1_fu_368 ^ Aki_1_fu_388);

assign xor_ln107_1_fu_1061_p2 = (Aso_1_fu_344 ^ Ago_1_fu_404);

assign xor_ln107_2_fu_1067_p2 = (xor_ln107_1_fu_1061_p2 ^ Abo_1_fu_420);

assign xor_ln107_fu_1055_p2 = (Amo_1_fu_364 ^ Ako_1_fu_384);

assign xor_ln108_1_fu_1085_p2 = (Asu_1_fu_340 ^ Agu_1_fu_400);

assign xor_ln108_2_fu_1091_p2 = (xor_ln108_fu_1079_p2 ^ xor_ln108_1_fu_1085_p2);

assign xor_ln108_fu_1079_p2 = (Amu_1_fu_360 ^ Aku_1_fu_380);

assign xor_ln122_1_fu_1419_p2 = (tmp_fu_1351_p27 ^ Aba_4_fu_1233_p2);

assign xor_ln122_fu_1407_p2 = (64'd18446744073709551615 ^ BCe_1_fu_1259_p3);

assign xor_ln123_fu_1431_p2 = (64'd18446744073709551615 ^ BCi_1_fu_1287_p3);

assign xor_ln124_fu_1449_p2 = (64'd18446744073709551615 ^ BCo_1_fu_1315_p3);

assign xor_ln125_fu_1467_p2 = (64'd18446744073709551615 ^ BCu_1_fu_1343_p3);

assign xor_ln126_fu_1485_p2 = (64'd18446744073709551615 ^ Aba_4_fu_1233_p2);

assign xor_ln133_fu_1643_p2 = (64'd18446744073709551615 ^ BCe_2_fu_1551_p3);

assign xor_ln134_fu_1661_p2 = (64'd18446744073709551615 ^ BCi_2_fu_1579_p3);

assign xor_ln135_fu_1679_p2 = (64'd18446744073709551615 ^ BCo_2_fu_1607_p3);

assign xor_ln136_fu_1697_p2 = (64'd18446744073709551615 ^ BCu_2_fu_1635_p3);

assign xor_ln137_fu_1715_p2 = (64'd18446744073709551615 ^ BCa_2_fu_1523_p3);

assign xor_ln144_fu_1871_p2 = (64'd18446744073709551615 ^ BCe_3_fu_1779_p3);

assign xor_ln145_fu_1889_p2 = (64'd18446744073709551615 ^ BCi_3_fu_1807_p3);

assign xor_ln146_fu_1907_p2 = (64'd18446744073709551615 ^ BCo_3_fu_1835_p3);

assign xor_ln147_fu_1925_p2 = (64'd18446744073709551615 ^ BCu_3_fu_1863_p3);

assign xor_ln148_fu_1943_p2 = (64'd18446744073709551615 ^ BCa_3_fu_1751_p3);

assign xor_ln155_fu_2101_p2 = (64'd18446744073709551615 ^ BCe_4_fu_2009_p3);

assign xor_ln156_fu_2119_p2 = (64'd18446744073709551615 ^ BCi_4_fu_2037_p3);

assign xor_ln157_fu_2137_p2 = (64'd18446744073709551615 ^ BCo_4_fu_2065_p3);

assign xor_ln158_fu_2155_p2 = (64'd18446744073709551615 ^ BCu_4_fu_2093_p3);

assign xor_ln159_fu_2173_p2 = (64'd18446744073709551615 ^ BCa_4_fu_1981_p3);

assign xor_ln166_fu_2331_p2 = (64'd18446744073709551615 ^ BCe_5_fu_2239_p3);

assign xor_ln167_fu_2349_p2 = (64'd18446744073709551615 ^ BCi_5_fu_2267_p3);

assign xor_ln168_fu_2367_p2 = (64'd18446744073709551615 ^ BCo_5_fu_2295_p3);

assign xor_ln169_fu_2385_p2 = (64'd18446744073709551615 ^ BCu_5_fu_2323_p3);

assign xor_ln170_fu_2403_p2 = (64'd18446744073709551615 ^ BCa_5_fu_2211_p3);

assign xor_ln174_1_fu_2427_p2 = (Ega_fu_1655_p2 ^ Eba_fu_1425_p2);

assign xor_ln174_2_fu_2433_p2 = (xor_ln174_1_fu_2427_p2 ^ Ema_fu_2113_p2);

assign xor_ln174_fu_2421_p2 = (Esa_fu_2343_p2 ^ Eka_fu_1883_p2);

assign xor_ln175_1_fu_2451_p2 = (Eme_fu_2131_p2 ^ Eke_fu_1901_p2);

assign xor_ln175_2_fu_2457_p2 = (xor_ln175_1_fu_2451_p2 ^ Ege_fu_1673_p2);

assign xor_ln175_fu_2445_p2 = (Ese_fu_2361_p2 ^ Ebe_fu_1443_p2);

assign xor_ln176_1_fu_2475_p2 = (Egi_fu_1691_p2 ^ Ebi_fu_1461_p2);

assign xor_ln176_2_fu_2481_p2 = (xor_ln176_1_fu_2475_p2 ^ Esi_fu_2379_p2);

assign xor_ln176_fu_2469_p2 = (Emi_fu_2149_p2 ^ Eki_fu_1919_p2);

assign xor_ln177_1_fu_2499_p2 = (Eso_fu_2397_p2 ^ Emo_fu_2167_p2);

assign xor_ln177_2_fu_2505_p2 = (xor_ln177_1_fu_2499_p2 ^ Eko_fu_1937_p2);

assign xor_ln177_fu_2493_p2 = (Ego_fu_1709_p2 ^ Ebo_fu_1479_p2);

assign xor_ln178_1_fu_2523_p2 = (Esu_fu_2415_p2 ^ Ebu_fu_1497_p2);

assign xor_ln178_2_fu_2529_p2 = (xor_ln178_1_fu_2523_p2 ^ Emu_fu_2185_p2);

assign xor_ln178_fu_2517_p2 = (Eku_fu_1955_p2 ^ Egu_fu_1727_p2);

assign xor_ln192_1_fu_3095_p2 = (tmp_3_fu_3028_p27 ^ and_ln192_fu_3089_p2);

assign xor_ln192_fu_3083_p2 = (64'd18446744073709551615 ^ BCe_7_fu_2981_p3);

assign xor_ln193_fu_3106_p2 = (64'd18446744073709551615 ^ BCi_7_fu_2989_p3);

assign xor_ln194_fu_3124_p2 = (64'd18446744073709551615 ^ BCo_7_fu_2995_p3);

assign xor_ln195_fu_3142_p2 = (64'd18446744073709551615 ^ BCu_7_fu_3020_p3);

assign xor_ln196_fu_3159_p2 = (64'd18446744073709551615 ^ Eba_2_reg_4342);

assign xor_ln203_fu_3248_p2 = (64'd18446744073709551615 ^ BCe_8_fu_3201_p3);

assign xor_ln204_fu_3266_p2 = (64'd18446744073709551615 ^ BCi_8_fu_3209_p3);

assign xor_ln205_fu_3284_p2 = (64'd18446744073709551615 ^ BCo_8_fu_3234_p3);

assign xor_ln206_fu_3302_p2 = (64'd18446744073709551615 ^ BCu_8_fu_3242_p3);

assign xor_ln207_fu_3320_p2 = (64'd18446744073709551615 ^ BCa_8_fu_3176_p3);

assign xor_ln214_fu_3408_p2 = (64'd18446744073709551615 ^ BCe_9_fu_3363_p3);

assign xor_ln215_fu_3426_p2 = (64'd18446744073709551615 ^ BCi_9_fu_3369_p3);

assign xor_ln216_fu_3444_p2 = (64'd18446744073709551615 ^ BCo_9_fu_3394_p3);

assign xor_ln217_fu_3462_p2 = (64'd18446744073709551615 ^ BCu_9_fu_3402_p3);

assign xor_ln218_fu_3480_p2 = (64'd18446744073709551615 ^ BCa_9_fu_3355_p3);

assign xor_ln225_fu_3570_p2 = (64'd18446744073709551615 ^ BCe_10_fu_3525_p3);

assign xor_ln226_fu_3588_p2 = (64'd18446744073709551615 ^ BCi_10_fu_3550_p3);

assign xor_ln227_fu_3606_p2 = (64'd18446744073709551615 ^ BCo_10_fu_3558_p3);

assign xor_ln228_fu_3624_p2 = (64'd18446744073709551615 ^ BCu_10_fu_3564_p3);

assign xor_ln229_fu_3642_p2 = (64'd18446744073709551615 ^ BCa_10_fu_3517_p3);

assign xor_ln236_fu_3732_p2 = (64'd18446744073709551615 ^ BCe_11_fu_3666_p3);

assign xor_ln237_fu_3750_p2 = (64'd18446744073709551615 ^ BCi_11_fu_3691_p3);

assign xor_ln238_fu_3768_p2 = (64'd18446744073709551615 ^ BCo_11_fu_3699_p3);

assign xor_ln239_fu_3786_p2 = (64'd18446744073709551615 ^ BCu_11_fu_3724_p3);

assign xor_ln240_fu_3804_p2 = (64'd18446744073709551615 ^ BCa_11_fu_3660_p3);

endmodule //sha3_256_hls_KeccakF1600_StatePermute_HLS_Pipeline_state_permute
