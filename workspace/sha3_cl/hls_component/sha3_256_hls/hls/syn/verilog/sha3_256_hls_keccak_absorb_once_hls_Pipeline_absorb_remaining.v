// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sha3_256_hls_keccak_absorb_once_hls_Pipeline_absorb_remaining (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sub_ln262,
        pos_0_lcssa_sel,
        in_r_address0,
        in_r_ce0,
        in_r_q0,
        s_0_address0,
        s_0_ce0,
        s_0_we0,
        s_0_d0,
        s_0_q0,
        s_1_address0,
        s_1_ce0,
        s_1_we0,
        s_1_d0,
        s_1_q0,
        s_2_address0,
        s_2_ce0,
        s_2_we0,
        s_2_d0,
        s_2_q0,
        s_3_address0,
        s_3_ce0,
        s_3_we0,
        s_3_d0,
        s_3_q0,
        s_4_address0,
        s_4_ce0,
        s_4_we0,
        s_4_d0,
        s_4_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] sub_ln262;
input  [10:0] pos_0_lcssa_sel;
output  [10:0] in_r_address0;
output   in_r_ce0;
input  [7:0] in_r_q0;
output  [2:0] s_0_address0;
output   s_0_ce0;
output   s_0_we0;
output  [63:0] s_0_d0;
input  [63:0] s_0_q0;
output  [2:0] s_1_address0;
output   s_1_ce0;
output   s_1_we0;
output  [63:0] s_1_d0;
input  [63:0] s_1_q0;
output  [2:0] s_2_address0;
output   s_2_ce0;
output   s_2_we0;
output  [63:0] s_2_d0;
input  [63:0] s_2_q0;
output  [2:0] s_3_address0;
output   s_3_ce0;
output   s_3_we0;
output  [63:0] s_3_d0;
input  [63:0] s_3_q0;
output  [2:0] s_4_address0;
output   s_4_ce0;
output   s_4_we0;
output  [63:0] s_4_d0;
input  [63:0] s_4_q0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [0:0] icmp_ln292_fu_176_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln292_reg_327;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln292_reg_327_pp0_iter1_reg;
reg   [0:0] icmp_ln292_reg_327_pp0_iter2_reg;
reg   [0:0] icmp_ln292_reg_327_pp0_iter3_reg;
reg   [0:0] icmp_ln292_reg_327_pp0_iter4_reg;
reg   [0:0] icmp_ln292_reg_327_pp0_iter5_reg;
reg   [0:0] icmp_ln292_reg_327_pp0_iter6_reg;
reg   [0:0] icmp_ln292_reg_327_pp0_iter7_reg;
reg   [0:0] icmp_ln292_reg_327_pp0_iter8_reg;
reg   [0:0] icmp_ln292_reg_327_pp0_iter9_reg;
reg   [0:0] icmp_ln292_reg_327_pp0_iter10_reg;
reg   [0:0] icmp_ln292_reg_327_pp0_iter11_reg;
reg   [0:0] icmp_ln292_reg_327_pp0_iter12_reg;
reg   [0:0] icmp_ln292_reg_327_pp0_iter13_reg;
reg   [0:0] icmp_ln292_reg_327_pp0_iter14_reg;
reg   [0:0] icmp_ln292_reg_327_pp0_iter15_reg;
wire   [10:0] add_ln294_fu_191_p2;
reg   [10:0] add_ln294_reg_331;
reg   [10:0] add_ln294_reg_331_pp0_iter1_reg;
reg   [10:0] add_ln294_reg_331_pp0_iter2_reg;
reg   [10:0] add_ln294_reg_331_pp0_iter3_reg;
reg   [10:0] add_ln294_reg_331_pp0_iter4_reg;
reg   [10:0] add_ln294_reg_331_pp0_iter5_reg;
reg   [10:0] add_ln294_reg_331_pp0_iter6_reg;
reg   [10:0] add_ln294_reg_331_pp0_iter7_reg;
reg   [10:0] add_ln294_reg_331_pp0_iter8_reg;
reg   [10:0] add_ln294_reg_331_pp0_iter9_reg;
reg   [10:0] add_ln294_reg_331_pp0_iter10_reg;
reg   [10:0] add_ln294_reg_331_pp0_iter11_reg;
reg   [10:0] add_ln294_reg_331_pp0_iter12_reg;
reg   [10:0] add_ln294_reg_331_pp0_iter13_reg;
reg   [10:0] add_ln294_reg_331_pp0_iter14_reg;
wire   [2:0] trunc_ln294_fu_196_p1;
reg   [2:0] trunc_ln294_reg_336;
reg   [2:0] trunc_ln294_reg_336_pp0_iter1_reg;
reg   [2:0] trunc_ln294_reg_336_pp0_iter2_reg;
reg   [2:0] trunc_ln294_reg_336_pp0_iter3_reg;
reg   [2:0] trunc_ln294_reg_336_pp0_iter4_reg;
reg   [2:0] trunc_ln294_reg_336_pp0_iter5_reg;
reg   [2:0] trunc_ln294_reg_336_pp0_iter6_reg;
reg   [2:0] trunc_ln294_reg_336_pp0_iter7_reg;
reg   [2:0] trunc_ln294_reg_336_pp0_iter8_reg;
reg   [2:0] trunc_ln294_reg_336_pp0_iter9_reg;
reg   [2:0] trunc_ln294_reg_336_pp0_iter10_reg;
reg   [2:0] trunc_ln294_reg_336_pp0_iter11_reg;
reg   [2:0] trunc_ln294_reg_336_pp0_iter12_reg;
reg   [2:0] trunc_ln294_reg_336_pp0_iter13_reg;
reg   [2:0] trunc_ln294_reg_336_pp0_iter14_reg;
reg   [2:0] trunc_ln294_reg_336_pp0_iter15_reg;
reg   [2:0] trunc_ln294_reg_336_pp0_iter16_reg;
reg   [28:0] trunc_ln294_2_reg_341;
reg   [2:0] s_0_addr_reg_352;
reg   [2:0] s_0_addr_reg_352_pp0_iter2_reg;
reg   [2:0] s_0_addr_reg_352_pp0_iter3_reg;
reg   [2:0] s_0_addr_reg_352_pp0_iter4_reg;
reg   [2:0] s_0_addr_reg_352_pp0_iter5_reg;
reg   [2:0] s_0_addr_reg_352_pp0_iter6_reg;
reg   [2:0] s_0_addr_reg_352_pp0_iter7_reg;
reg   [2:0] s_0_addr_reg_352_pp0_iter8_reg;
reg   [2:0] s_0_addr_reg_352_pp0_iter9_reg;
reg   [2:0] s_0_addr_reg_352_pp0_iter10_reg;
reg   [2:0] s_0_addr_reg_352_pp0_iter11_reg;
reg   [2:0] s_0_addr_reg_352_pp0_iter12_reg;
reg   [2:0] s_0_addr_reg_352_pp0_iter13_reg;
reg   [2:0] s_0_addr_reg_352_pp0_iter14_reg;
reg   [2:0] s_0_addr_reg_352_pp0_iter15_reg;
reg   [2:0] s_0_addr_reg_352_pp0_iter16_reg;
reg   [2:0] s_1_addr_reg_357;
reg   [2:0] s_1_addr_reg_357_pp0_iter2_reg;
reg   [2:0] s_1_addr_reg_357_pp0_iter3_reg;
reg   [2:0] s_1_addr_reg_357_pp0_iter4_reg;
reg   [2:0] s_1_addr_reg_357_pp0_iter5_reg;
reg   [2:0] s_1_addr_reg_357_pp0_iter6_reg;
reg   [2:0] s_1_addr_reg_357_pp0_iter7_reg;
reg   [2:0] s_1_addr_reg_357_pp0_iter8_reg;
reg   [2:0] s_1_addr_reg_357_pp0_iter9_reg;
reg   [2:0] s_1_addr_reg_357_pp0_iter10_reg;
reg   [2:0] s_1_addr_reg_357_pp0_iter11_reg;
reg   [2:0] s_1_addr_reg_357_pp0_iter12_reg;
reg   [2:0] s_1_addr_reg_357_pp0_iter13_reg;
reg   [2:0] s_1_addr_reg_357_pp0_iter14_reg;
reg   [2:0] s_1_addr_reg_357_pp0_iter15_reg;
reg   [2:0] s_1_addr_reg_357_pp0_iter16_reg;
reg   [2:0] s_2_addr_reg_362;
reg   [2:0] s_2_addr_reg_362_pp0_iter2_reg;
reg   [2:0] s_2_addr_reg_362_pp0_iter3_reg;
reg   [2:0] s_2_addr_reg_362_pp0_iter4_reg;
reg   [2:0] s_2_addr_reg_362_pp0_iter5_reg;
reg   [2:0] s_2_addr_reg_362_pp0_iter6_reg;
reg   [2:0] s_2_addr_reg_362_pp0_iter7_reg;
reg   [2:0] s_2_addr_reg_362_pp0_iter8_reg;
reg   [2:0] s_2_addr_reg_362_pp0_iter9_reg;
reg   [2:0] s_2_addr_reg_362_pp0_iter10_reg;
reg   [2:0] s_2_addr_reg_362_pp0_iter11_reg;
reg   [2:0] s_2_addr_reg_362_pp0_iter12_reg;
reg   [2:0] s_2_addr_reg_362_pp0_iter13_reg;
reg   [2:0] s_2_addr_reg_362_pp0_iter14_reg;
reg   [2:0] s_2_addr_reg_362_pp0_iter15_reg;
reg   [2:0] s_2_addr_reg_362_pp0_iter16_reg;
reg   [2:0] s_3_addr_reg_367;
reg   [2:0] s_3_addr_reg_367_pp0_iter2_reg;
reg   [2:0] s_3_addr_reg_367_pp0_iter3_reg;
reg   [2:0] s_3_addr_reg_367_pp0_iter4_reg;
reg   [2:0] s_3_addr_reg_367_pp0_iter5_reg;
reg   [2:0] s_3_addr_reg_367_pp0_iter6_reg;
reg   [2:0] s_3_addr_reg_367_pp0_iter7_reg;
reg   [2:0] s_3_addr_reg_367_pp0_iter8_reg;
reg   [2:0] s_3_addr_reg_367_pp0_iter9_reg;
reg   [2:0] s_3_addr_reg_367_pp0_iter10_reg;
reg   [2:0] s_3_addr_reg_367_pp0_iter11_reg;
reg   [2:0] s_3_addr_reg_367_pp0_iter12_reg;
reg   [2:0] s_3_addr_reg_367_pp0_iter13_reg;
reg   [2:0] s_3_addr_reg_367_pp0_iter14_reg;
reg   [2:0] s_3_addr_reg_367_pp0_iter15_reg;
reg   [2:0] s_3_addr_reg_367_pp0_iter16_reg;
reg   [2:0] s_4_addr_reg_372;
reg   [2:0] s_4_addr_reg_372_pp0_iter2_reg;
reg   [2:0] s_4_addr_reg_372_pp0_iter3_reg;
reg   [2:0] s_4_addr_reg_372_pp0_iter4_reg;
reg   [2:0] s_4_addr_reg_372_pp0_iter5_reg;
reg   [2:0] s_4_addr_reg_372_pp0_iter6_reg;
reg   [2:0] s_4_addr_reg_372_pp0_iter7_reg;
reg   [2:0] s_4_addr_reg_372_pp0_iter8_reg;
reg   [2:0] s_4_addr_reg_372_pp0_iter9_reg;
reg   [2:0] s_4_addr_reg_372_pp0_iter10_reg;
reg   [2:0] s_4_addr_reg_372_pp0_iter11_reg;
reg   [2:0] s_4_addr_reg_372_pp0_iter12_reg;
reg   [2:0] s_4_addr_reg_372_pp0_iter13_reg;
reg   [2:0] s_4_addr_reg_372_pp0_iter14_reg;
reg   [2:0] s_4_addr_reg_372_pp0_iter15_reg;
reg   [2:0] s_4_addr_reg_372_pp0_iter16_reg;
reg   [7:0] in_r_load_reg_382;
wire   [2:0] grp_fu_210_p2;
reg   [2:0] urem_ln294_reg_387;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln294_2_fu_235_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln294_3_fu_244_p1;
reg   [63:0] i_fu_74;
wire   [63:0] add_ln292_fu_181_p2;
wire    ap_loop_init;
reg    in_r_ce0_local;
reg    s_0_ce0_local;
reg   [2:0] s_0_address0_local;
reg    s_0_we0_local;
wire   [2:0] trunc_ln294_1_fu_268_p1;
wire   [63:0] xor_ln294_fu_299_p2;
wire    ap_block_pp0_stage0;
reg    s_1_ce0_local;
reg   [2:0] s_1_address0_local;
reg    s_1_we0_local;
reg    s_2_ce0_local;
reg   [2:0] s_2_address0_local;
reg    s_2_we0_local;
reg    s_3_ce0_local;
reg   [2:0] s_3_address0_local;
reg    s_3_we0_local;
reg    s_4_ce0_local;
reg   [2:0] s_4_address0_local;
reg    s_4_we0_local;
wire   [28:0] grp_fu_163_p0;
wire   [30:0] grp_fu_163_p1;
wire   [10:0] trunc_ln292_fu_187_p1;
wire   [28:0] grp_fu_210_p0;
wire   [3:0] grp_fu_210_p1;
wire   [58:0] grp_fu_163_p2;
wire   [26:0] tmp_fu_225_p4;
wire   [5:0] shl_ln2_fu_251_p3;
wire   [63:0] zext_ln294_fu_248_p1;
wire   [63:0] zext_ln294_1_fu_258_p1;
wire   [63:0] tmp_2_fu_271_p11;
wire   [2:0] tmp_2_fu_271_p12;
wire   [63:0] tmp_2_fu_271_p13;
wire   [63:0] shl_ln294_fu_262_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter16_stage0;
reg    ap_idle_pp0_0to15;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to17;
reg    ap_done_pending_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [58:0] grp_fu_163_p00;
wire   [2:0] tmp_2_fu_271_p1;
wire   [2:0] tmp_2_fu_271_p3;
wire   [2:0] tmp_2_fu_271_p5;
wire   [2:0] tmp_2_fu_271_p7;
wire  signed [2:0] tmp_2_fu_271_p9;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 i_fu_74 = 64'd0;
#0 ap_done_reg = 1'b0;
end

sha3_256_hls_mul_29ns_31ns_59_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 59 ))
mul_29ns_31ns_59_2_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_163_p0),
    .din1(grp_fu_163_p1),
    .ce(1'b1),
    .dout(grp_fu_163_p2)
);

sha3_256_hls_urem_29ns_4ns_3_33_1 #(
    .ID( 1 ),
    .NUM_STAGE( 33 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_29ns_4ns_3_33_1_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_210_p0),
    .din1(grp_fu_210_p1),
    .ce(1'b1),
    .dout(grp_fu_210_p2)
);

(* dissolve_hierarchy = "yes" *) sha3_256_hls_sparsemux_11_3_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 64 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 64 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 64 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 64 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
sparsemux_11_3_64_1_1_U76(
    .din0(s_0_q0),
    .din1(s_1_q0),
    .din2(s_2_q0),
    .din3(s_3_q0),
    .din4(s_4_q0),
    .def(tmp_2_fu_271_p11),
    .sel(tmp_2_fu_271_p12),
    .dout(tmp_2_fu_271_p13)
);

sha3_256_hls_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter17 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to15 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter16_stage0))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to15 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter16_stage0))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to15 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter16_stage0))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to15 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter16_stage0))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to15 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter16_stage0))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to15 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter16_stage0))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to15 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter16_stage0))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to15 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter16_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to15 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter16_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to15 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter16_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to15 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter16_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to15 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter16_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to15 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter16_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to15 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter16_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to15 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter16_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to15 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter16_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_74 <= 64'd0;
    end else if (((icmp_ln292_fu_176_p2 == 1'd0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_fu_74 <= add_ln292_fu_181_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln294_reg_331 <= add_ln294_fu_191_p2;
        add_ln294_reg_331_pp0_iter10_reg <= add_ln294_reg_331_pp0_iter9_reg;
        add_ln294_reg_331_pp0_iter11_reg <= add_ln294_reg_331_pp0_iter10_reg;
        add_ln294_reg_331_pp0_iter12_reg <= add_ln294_reg_331_pp0_iter11_reg;
        add_ln294_reg_331_pp0_iter13_reg <= add_ln294_reg_331_pp0_iter12_reg;
        add_ln294_reg_331_pp0_iter14_reg <= add_ln294_reg_331_pp0_iter13_reg;
        add_ln294_reg_331_pp0_iter1_reg <= add_ln294_reg_331;
        add_ln294_reg_331_pp0_iter2_reg <= add_ln294_reg_331_pp0_iter1_reg;
        add_ln294_reg_331_pp0_iter3_reg <= add_ln294_reg_331_pp0_iter2_reg;
        add_ln294_reg_331_pp0_iter4_reg <= add_ln294_reg_331_pp0_iter3_reg;
        add_ln294_reg_331_pp0_iter5_reg <= add_ln294_reg_331_pp0_iter4_reg;
        add_ln294_reg_331_pp0_iter6_reg <= add_ln294_reg_331_pp0_iter5_reg;
        add_ln294_reg_331_pp0_iter7_reg <= add_ln294_reg_331_pp0_iter6_reg;
        add_ln294_reg_331_pp0_iter8_reg <= add_ln294_reg_331_pp0_iter7_reg;
        add_ln294_reg_331_pp0_iter9_reg <= add_ln294_reg_331_pp0_iter8_reg;
        icmp_ln292_reg_327 <= icmp_ln292_fu_176_p2;
        icmp_ln292_reg_327_pp0_iter10_reg <= icmp_ln292_reg_327_pp0_iter9_reg;
        icmp_ln292_reg_327_pp0_iter11_reg <= icmp_ln292_reg_327_pp0_iter10_reg;
        icmp_ln292_reg_327_pp0_iter12_reg <= icmp_ln292_reg_327_pp0_iter11_reg;
        icmp_ln292_reg_327_pp0_iter13_reg <= icmp_ln292_reg_327_pp0_iter12_reg;
        icmp_ln292_reg_327_pp0_iter14_reg <= icmp_ln292_reg_327_pp0_iter13_reg;
        icmp_ln292_reg_327_pp0_iter15_reg <= icmp_ln292_reg_327_pp0_iter14_reg;
        icmp_ln292_reg_327_pp0_iter1_reg <= icmp_ln292_reg_327;
        icmp_ln292_reg_327_pp0_iter2_reg <= icmp_ln292_reg_327_pp0_iter1_reg;
        icmp_ln292_reg_327_pp0_iter3_reg <= icmp_ln292_reg_327_pp0_iter2_reg;
        icmp_ln292_reg_327_pp0_iter4_reg <= icmp_ln292_reg_327_pp0_iter3_reg;
        icmp_ln292_reg_327_pp0_iter5_reg <= icmp_ln292_reg_327_pp0_iter4_reg;
        icmp_ln292_reg_327_pp0_iter6_reg <= icmp_ln292_reg_327_pp0_iter5_reg;
        icmp_ln292_reg_327_pp0_iter7_reg <= icmp_ln292_reg_327_pp0_iter6_reg;
        icmp_ln292_reg_327_pp0_iter8_reg <= icmp_ln292_reg_327_pp0_iter7_reg;
        icmp_ln292_reg_327_pp0_iter9_reg <= icmp_ln292_reg_327_pp0_iter8_reg;
        s_0_addr_reg_352 <= zext_ln294_2_fu_235_p1;
        s_0_addr_reg_352_pp0_iter10_reg <= s_0_addr_reg_352_pp0_iter9_reg;
        s_0_addr_reg_352_pp0_iter11_reg <= s_0_addr_reg_352_pp0_iter10_reg;
        s_0_addr_reg_352_pp0_iter12_reg <= s_0_addr_reg_352_pp0_iter11_reg;
        s_0_addr_reg_352_pp0_iter13_reg <= s_0_addr_reg_352_pp0_iter12_reg;
        s_0_addr_reg_352_pp0_iter14_reg <= s_0_addr_reg_352_pp0_iter13_reg;
        s_0_addr_reg_352_pp0_iter15_reg <= s_0_addr_reg_352_pp0_iter14_reg;
        s_0_addr_reg_352_pp0_iter16_reg <= s_0_addr_reg_352_pp0_iter15_reg;
        s_0_addr_reg_352_pp0_iter2_reg <= s_0_addr_reg_352;
        s_0_addr_reg_352_pp0_iter3_reg <= s_0_addr_reg_352_pp0_iter2_reg;
        s_0_addr_reg_352_pp0_iter4_reg <= s_0_addr_reg_352_pp0_iter3_reg;
        s_0_addr_reg_352_pp0_iter5_reg <= s_0_addr_reg_352_pp0_iter4_reg;
        s_0_addr_reg_352_pp0_iter6_reg <= s_0_addr_reg_352_pp0_iter5_reg;
        s_0_addr_reg_352_pp0_iter7_reg <= s_0_addr_reg_352_pp0_iter6_reg;
        s_0_addr_reg_352_pp0_iter8_reg <= s_0_addr_reg_352_pp0_iter7_reg;
        s_0_addr_reg_352_pp0_iter9_reg <= s_0_addr_reg_352_pp0_iter8_reg;
        s_1_addr_reg_357 <= zext_ln294_2_fu_235_p1;
        s_1_addr_reg_357_pp0_iter10_reg <= s_1_addr_reg_357_pp0_iter9_reg;
        s_1_addr_reg_357_pp0_iter11_reg <= s_1_addr_reg_357_pp0_iter10_reg;
        s_1_addr_reg_357_pp0_iter12_reg <= s_1_addr_reg_357_pp0_iter11_reg;
        s_1_addr_reg_357_pp0_iter13_reg <= s_1_addr_reg_357_pp0_iter12_reg;
        s_1_addr_reg_357_pp0_iter14_reg <= s_1_addr_reg_357_pp0_iter13_reg;
        s_1_addr_reg_357_pp0_iter15_reg <= s_1_addr_reg_357_pp0_iter14_reg;
        s_1_addr_reg_357_pp0_iter16_reg <= s_1_addr_reg_357_pp0_iter15_reg;
        s_1_addr_reg_357_pp0_iter2_reg <= s_1_addr_reg_357;
        s_1_addr_reg_357_pp0_iter3_reg <= s_1_addr_reg_357_pp0_iter2_reg;
        s_1_addr_reg_357_pp0_iter4_reg <= s_1_addr_reg_357_pp0_iter3_reg;
        s_1_addr_reg_357_pp0_iter5_reg <= s_1_addr_reg_357_pp0_iter4_reg;
        s_1_addr_reg_357_pp0_iter6_reg <= s_1_addr_reg_357_pp0_iter5_reg;
        s_1_addr_reg_357_pp0_iter7_reg <= s_1_addr_reg_357_pp0_iter6_reg;
        s_1_addr_reg_357_pp0_iter8_reg <= s_1_addr_reg_357_pp0_iter7_reg;
        s_1_addr_reg_357_pp0_iter9_reg <= s_1_addr_reg_357_pp0_iter8_reg;
        s_2_addr_reg_362 <= zext_ln294_2_fu_235_p1;
        s_2_addr_reg_362_pp0_iter10_reg <= s_2_addr_reg_362_pp0_iter9_reg;
        s_2_addr_reg_362_pp0_iter11_reg <= s_2_addr_reg_362_pp0_iter10_reg;
        s_2_addr_reg_362_pp0_iter12_reg <= s_2_addr_reg_362_pp0_iter11_reg;
        s_2_addr_reg_362_pp0_iter13_reg <= s_2_addr_reg_362_pp0_iter12_reg;
        s_2_addr_reg_362_pp0_iter14_reg <= s_2_addr_reg_362_pp0_iter13_reg;
        s_2_addr_reg_362_pp0_iter15_reg <= s_2_addr_reg_362_pp0_iter14_reg;
        s_2_addr_reg_362_pp0_iter16_reg <= s_2_addr_reg_362_pp0_iter15_reg;
        s_2_addr_reg_362_pp0_iter2_reg <= s_2_addr_reg_362;
        s_2_addr_reg_362_pp0_iter3_reg <= s_2_addr_reg_362_pp0_iter2_reg;
        s_2_addr_reg_362_pp0_iter4_reg <= s_2_addr_reg_362_pp0_iter3_reg;
        s_2_addr_reg_362_pp0_iter5_reg <= s_2_addr_reg_362_pp0_iter4_reg;
        s_2_addr_reg_362_pp0_iter6_reg <= s_2_addr_reg_362_pp0_iter5_reg;
        s_2_addr_reg_362_pp0_iter7_reg <= s_2_addr_reg_362_pp0_iter6_reg;
        s_2_addr_reg_362_pp0_iter8_reg <= s_2_addr_reg_362_pp0_iter7_reg;
        s_2_addr_reg_362_pp0_iter9_reg <= s_2_addr_reg_362_pp0_iter8_reg;
        s_3_addr_reg_367 <= zext_ln294_2_fu_235_p1;
        s_3_addr_reg_367_pp0_iter10_reg <= s_3_addr_reg_367_pp0_iter9_reg;
        s_3_addr_reg_367_pp0_iter11_reg <= s_3_addr_reg_367_pp0_iter10_reg;
        s_3_addr_reg_367_pp0_iter12_reg <= s_3_addr_reg_367_pp0_iter11_reg;
        s_3_addr_reg_367_pp0_iter13_reg <= s_3_addr_reg_367_pp0_iter12_reg;
        s_3_addr_reg_367_pp0_iter14_reg <= s_3_addr_reg_367_pp0_iter13_reg;
        s_3_addr_reg_367_pp0_iter15_reg <= s_3_addr_reg_367_pp0_iter14_reg;
        s_3_addr_reg_367_pp0_iter16_reg <= s_3_addr_reg_367_pp0_iter15_reg;
        s_3_addr_reg_367_pp0_iter2_reg <= s_3_addr_reg_367;
        s_3_addr_reg_367_pp0_iter3_reg <= s_3_addr_reg_367_pp0_iter2_reg;
        s_3_addr_reg_367_pp0_iter4_reg <= s_3_addr_reg_367_pp0_iter3_reg;
        s_3_addr_reg_367_pp0_iter5_reg <= s_3_addr_reg_367_pp0_iter4_reg;
        s_3_addr_reg_367_pp0_iter6_reg <= s_3_addr_reg_367_pp0_iter5_reg;
        s_3_addr_reg_367_pp0_iter7_reg <= s_3_addr_reg_367_pp0_iter6_reg;
        s_3_addr_reg_367_pp0_iter8_reg <= s_3_addr_reg_367_pp0_iter7_reg;
        s_3_addr_reg_367_pp0_iter9_reg <= s_3_addr_reg_367_pp0_iter8_reg;
        s_4_addr_reg_372 <= zext_ln294_2_fu_235_p1;
        s_4_addr_reg_372_pp0_iter10_reg <= s_4_addr_reg_372_pp0_iter9_reg;
        s_4_addr_reg_372_pp0_iter11_reg <= s_4_addr_reg_372_pp0_iter10_reg;
        s_4_addr_reg_372_pp0_iter12_reg <= s_4_addr_reg_372_pp0_iter11_reg;
        s_4_addr_reg_372_pp0_iter13_reg <= s_4_addr_reg_372_pp0_iter12_reg;
        s_4_addr_reg_372_pp0_iter14_reg <= s_4_addr_reg_372_pp0_iter13_reg;
        s_4_addr_reg_372_pp0_iter15_reg <= s_4_addr_reg_372_pp0_iter14_reg;
        s_4_addr_reg_372_pp0_iter16_reg <= s_4_addr_reg_372_pp0_iter15_reg;
        s_4_addr_reg_372_pp0_iter2_reg <= s_4_addr_reg_372;
        s_4_addr_reg_372_pp0_iter3_reg <= s_4_addr_reg_372_pp0_iter2_reg;
        s_4_addr_reg_372_pp0_iter4_reg <= s_4_addr_reg_372_pp0_iter3_reg;
        s_4_addr_reg_372_pp0_iter5_reg <= s_4_addr_reg_372_pp0_iter4_reg;
        s_4_addr_reg_372_pp0_iter6_reg <= s_4_addr_reg_372_pp0_iter5_reg;
        s_4_addr_reg_372_pp0_iter7_reg <= s_4_addr_reg_372_pp0_iter6_reg;
        s_4_addr_reg_372_pp0_iter8_reg <= s_4_addr_reg_372_pp0_iter7_reg;
        s_4_addr_reg_372_pp0_iter9_reg <= s_4_addr_reg_372_pp0_iter8_reg;
        trunc_ln294_2_reg_341 <= {{i_fu_74[31:3]}};
        trunc_ln294_reg_336 <= trunc_ln294_fu_196_p1;
        trunc_ln294_reg_336_pp0_iter10_reg <= trunc_ln294_reg_336_pp0_iter9_reg;
        trunc_ln294_reg_336_pp0_iter11_reg <= trunc_ln294_reg_336_pp0_iter10_reg;
        trunc_ln294_reg_336_pp0_iter12_reg <= trunc_ln294_reg_336_pp0_iter11_reg;
        trunc_ln294_reg_336_pp0_iter13_reg <= trunc_ln294_reg_336_pp0_iter12_reg;
        trunc_ln294_reg_336_pp0_iter14_reg <= trunc_ln294_reg_336_pp0_iter13_reg;
        trunc_ln294_reg_336_pp0_iter15_reg <= trunc_ln294_reg_336_pp0_iter14_reg;
        trunc_ln294_reg_336_pp0_iter16_reg <= trunc_ln294_reg_336_pp0_iter15_reg;
        trunc_ln294_reg_336_pp0_iter1_reg <= trunc_ln294_reg_336;
        trunc_ln294_reg_336_pp0_iter2_reg <= trunc_ln294_reg_336_pp0_iter1_reg;
        trunc_ln294_reg_336_pp0_iter3_reg <= trunc_ln294_reg_336_pp0_iter2_reg;
        trunc_ln294_reg_336_pp0_iter4_reg <= trunc_ln294_reg_336_pp0_iter3_reg;
        trunc_ln294_reg_336_pp0_iter5_reg <= trunc_ln294_reg_336_pp0_iter4_reg;
        trunc_ln294_reg_336_pp0_iter6_reg <= trunc_ln294_reg_336_pp0_iter5_reg;
        trunc_ln294_reg_336_pp0_iter7_reg <= trunc_ln294_reg_336_pp0_iter6_reg;
        trunc_ln294_reg_336_pp0_iter8_reg <= trunc_ln294_reg_336_pp0_iter7_reg;
        trunc_ln294_reg_336_pp0_iter9_reg <= trunc_ln294_reg_336_pp0_iter8_reg;
        urem_ln294_reg_387 <= grp_fu_210_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_load_reg_382 <= in_r_q0;
    end
end

always @ (*) begin
    if (((icmp_ln292_fu_176_p2 == 1'd1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln292_reg_327_pp0_iter15_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter16_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter16_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter14_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter13_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter12_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to15 = 1'b1;
    end else begin
        ap_idle_pp0_0to15 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to17 = 1'b1;
    end else begin
        ap_idle_pp0_1to17 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_r_ce0_local = 1'b1;
    end else begin
        in_r_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_0_address0_local = s_0_addr_reg_352_pp0_iter16_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        s_0_address0_local = s_0_addr_reg_352_pp0_iter15_reg;
    end else begin
        s_0_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        s_0_ce0_local = 1'b1;
    end else begin
        s_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1) & (trunc_ln294_1_fu_268_p1 == 3'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_0_we0_local = 1'b1;
    end else begin
        s_0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_1_address0_local = s_1_addr_reg_357_pp0_iter16_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        s_1_address0_local = s_1_addr_reg_357_pp0_iter15_reg;
    end else begin
        s_1_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        s_1_ce0_local = 1'b1;
    end else begin
        s_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1) & (trunc_ln294_1_fu_268_p1 == 3'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_1_we0_local = 1'b1;
    end else begin
        s_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_2_address0_local = s_2_addr_reg_362_pp0_iter16_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        s_2_address0_local = s_2_addr_reg_362_pp0_iter15_reg;
    end else begin
        s_2_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        s_2_ce0_local = 1'b1;
    end else begin
        s_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1) & (trunc_ln294_1_fu_268_p1 == 3'd2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_2_we0_local = 1'b1;
    end else begin
        s_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_3_address0_local = s_3_addr_reg_367_pp0_iter16_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        s_3_address0_local = s_3_addr_reg_367_pp0_iter15_reg;
    end else begin
        s_3_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        s_3_ce0_local = 1'b1;
    end else begin
        s_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1) & (trunc_ln294_1_fu_268_p1 == 3'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_3_we0_local = 1'b1;
    end else begin
        s_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_4_address0_local = s_4_addr_reg_372_pp0_iter16_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        s_4_address0_local = s_4_addr_reg_372_pp0_iter15_reg;
    end else begin
        s_4_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        s_4_ce0_local = 1'b1;
    end else begin
        s_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln294_1_fu_268_p1 == 3'd3) & ~(trunc_ln294_1_fu_268_p1 == 3'd2) & ~(trunc_ln294_1_fu_268_p1 == 3'd1) & ~(trunc_ln294_1_fu_268_p1 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_4_we0_local = 1'b1;
    end else begin
        s_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to15 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter16_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to17 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln292_fu_181_p2 = (i_fu_74 + 64'd1);

assign add_ln294_fu_191_p2 = (trunc_ln292_fu_187_p1 + pos_0_lcssa_sel);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_ready = ap_ready_sig;

assign grp_fu_163_p0 = grp_fu_163_p00;

assign grp_fu_163_p00 = trunc_ln294_2_reg_341;

assign grp_fu_163_p1 = 59'd858993460;

assign grp_fu_210_p0 = {{i_fu_74[31:3]}};

assign grp_fu_210_p1 = 29'd5;

assign icmp_ln292_fu_176_p2 = ((i_fu_74 == sub_ln262) ? 1'b1 : 1'b0);

assign in_r_address0 = zext_ln294_3_fu_244_p1;

assign in_r_ce0 = in_r_ce0_local;

assign s_0_address0 = s_0_address0_local;

assign s_0_ce0 = s_0_ce0_local;

assign s_0_d0 = xor_ln294_fu_299_p2;

assign s_0_we0 = s_0_we0_local;

assign s_1_address0 = s_1_address0_local;

assign s_1_ce0 = s_1_ce0_local;

assign s_1_d0 = xor_ln294_fu_299_p2;

assign s_1_we0 = s_1_we0_local;

assign s_2_address0 = s_2_address0_local;

assign s_2_ce0 = s_2_ce0_local;

assign s_2_d0 = xor_ln294_fu_299_p2;

assign s_2_we0 = s_2_we0_local;

assign s_3_address0 = s_3_address0_local;

assign s_3_ce0 = s_3_ce0_local;

assign s_3_d0 = xor_ln294_fu_299_p2;

assign s_3_we0 = s_3_we0_local;

assign s_4_address0 = s_4_address0_local;

assign s_4_ce0 = s_4_ce0_local;

assign s_4_d0 = xor_ln294_fu_299_p2;

assign s_4_we0 = s_4_we0_local;

assign shl_ln294_fu_262_p2 = zext_ln294_fu_248_p1 << zext_ln294_1_fu_258_p1;

assign shl_ln2_fu_251_p3 = {{trunc_ln294_reg_336_pp0_iter16_reg}, {3'd0}};

assign tmp_2_fu_271_p11 = 'bx;

assign tmp_2_fu_271_p12 = urem_ln294_reg_387[2:0];

assign tmp_fu_225_p4 = {{grp_fu_163_p2[58:32]}};

assign trunc_ln292_fu_187_p1 = i_fu_74[10:0];

assign trunc_ln294_1_fu_268_p1 = urem_ln294_reg_387[2:0];

assign trunc_ln294_fu_196_p1 = i_fu_74[2:0];

assign xor_ln294_fu_299_p2 = (tmp_2_fu_271_p13 ^ shl_ln294_fu_262_p2);

assign zext_ln294_1_fu_258_p1 = shl_ln2_fu_251_p3;

assign zext_ln294_2_fu_235_p1 = tmp_fu_225_p4;

assign zext_ln294_3_fu_244_p1 = add_ln294_reg_331_pp0_iter14_reg;

assign zext_ln294_fu_248_p1 = in_r_load_reg_382;

endmodule //sha3_256_hls_keccak_absorb_once_hls_Pipeline_absorb_remaining
