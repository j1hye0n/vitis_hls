-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sha3_256_hls is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    h_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_0_ap_vld : OUT STD_LOGIC;
    h_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_1_ap_vld : OUT STD_LOGIC;
    h_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_2_ap_vld : OUT STD_LOGIC;
    h_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_3_ap_vld : OUT STD_LOGIC;
    h_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_4_ap_vld : OUT STD_LOGIC;
    h_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_5_ap_vld : OUT STD_LOGIC;
    h_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_6_ap_vld : OUT STD_LOGIC;
    h_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_7_ap_vld : OUT STD_LOGIC;
    h_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_8_ap_vld : OUT STD_LOGIC;
    h_9 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_9_ap_vld : OUT STD_LOGIC;
    h_10 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_10_ap_vld : OUT STD_LOGIC;
    h_11 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_11_ap_vld : OUT STD_LOGIC;
    h_12 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_12_ap_vld : OUT STD_LOGIC;
    h_13 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_13_ap_vld : OUT STD_LOGIC;
    h_14 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_14_ap_vld : OUT STD_LOGIC;
    h_15 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_15_ap_vld : OUT STD_LOGIC;
    h_16 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_16_ap_vld : OUT STD_LOGIC;
    h_17 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_17_ap_vld : OUT STD_LOGIC;
    h_18 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_18_ap_vld : OUT STD_LOGIC;
    h_19 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_19_ap_vld : OUT STD_LOGIC;
    h_20 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_20_ap_vld : OUT STD_LOGIC;
    h_21 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_21_ap_vld : OUT STD_LOGIC;
    h_22 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_22_ap_vld : OUT STD_LOGIC;
    h_23 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_23_ap_vld : OUT STD_LOGIC;
    h_24 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_24_ap_vld : OUT STD_LOGIC;
    h_25 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_25_ap_vld : OUT STD_LOGIC;
    h_26 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_26_ap_vld : OUT STD_LOGIC;
    h_27 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_27_ap_vld : OUT STD_LOGIC;
    h_28 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_28_ap_vld : OUT STD_LOGIC;
    h_29 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_29_ap_vld : OUT STD_LOGIC;
    h_30 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_30_ap_vld : OUT STD_LOGIC;
    h_31 : OUT STD_LOGIC_VECTOR (7 downto 0);
    h_31_ap_vld : OUT STD_LOGIC;
    in_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    in_r_ce0 : OUT STD_LOGIC;
    in_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    in_r_ce1 : OUT STD_LOGIC;
    in_r_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    inlen : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of sha3_256_hls is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "sha3_256_hls_sha3_256_hls,hls_ip_2024_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xa7z010-clg400-1I,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.579900,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=16978,HLS_SYN_LUT=41670,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal inlen_read_reg_283 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal s_load_reg_308 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal s_1_load_reg_313 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_load_reg_318 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_load_reg_323 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal s_ce0 : STD_LOGIC;
    signal s_we0 : STD_LOGIC;
    signal s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal s_ce1 : STD_LOGIC;
    signal s_we1 : STD_LOGIC;
    signal s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal s_1_ce0 : STD_LOGIC;
    signal s_1_we0 : STD_LOGIC;
    signal s_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal s_1_ce1 : STD_LOGIC;
    signal s_1_we1 : STD_LOGIC;
    signal s_1_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal s_2_ce0 : STD_LOGIC;
    signal s_2_we0 : STD_LOGIC;
    signal s_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal s_2_ce1 : STD_LOGIC;
    signal s_2_we1 : STD_LOGIC;
    signal s_2_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal s_3_ce0 : STD_LOGIC;
    signal s_3_we0 : STD_LOGIC;
    signal s_3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal s_3_ce1 : STD_LOGIC;
    signal s_3_we1 : STD_LOGIC;
    signal s_3_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal s_4_ce0 : STD_LOGIC;
    signal s_4_we0 : STD_LOGIC;
    signal s_4_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal s_4_ce1 : STD_LOGIC;
    signal s_4_we1 : STD_LOGIC;
    signal s_4_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_ap_start : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_ap_done : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_ap_idle : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_ap_ready : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_0_ce0 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_0_we0 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_0_ce1 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_0_we1 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_0_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_1_ce0 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_1_we0 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_1_ce1 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_1_we1 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_1_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_2_ce0 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_2_we0 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_2_ce1 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_2_we1 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_2_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_3_ce0 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_3_we0 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_3_ce1 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_3_we1 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_3_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_4_ce0 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_4_we0 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_4_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_s_4_ce1 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_4_we1 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_s_4_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_in_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_in_r_ce0 : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_in_r_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_keccak_absorb_once_hls_fu_180_in_r_ce1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_ap_start : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_ap_done : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_ap_idle : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_ap_ready : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_ce0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_we0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_ce1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_we1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_ce0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_we0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_ce1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_we1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_ce0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_we0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_ce1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_we1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_ce0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_we0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_ce1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_we1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_ce0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_we0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_ce1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_we1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_start : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_done : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_idle : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_ready : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_31 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_31_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_30 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_30_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_29 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_29_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_28 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_28_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_27 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_27_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_26 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_26_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_25 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_25_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_24 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_24_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_23 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_23_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_22 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_22_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_21 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_21_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_20 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_20_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_19 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_19_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_18 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_18_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_17 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_17_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_16 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_16_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_15 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_15_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_14 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_14_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_13 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_13_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_12 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_12_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_11 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_11_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_10 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_10_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_9 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_9_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_8 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_8_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_7_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_6_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_5_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_4_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_3_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_2_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_1_ap_vld : STD_LOGIC;
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_0_ap_vld : STD_LOGIC;
    signal grp_keccak_absorb_once_hls_fu_180_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_KeccakF1600_StatePermute_HLS_fu_198_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_start_reg : STD_LOGIC := '0';
    signal h_31_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal h_30_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_29_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_28_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_27_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_26_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_25_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_24_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_23_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_22_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_21_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_20_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_19_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_18_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_16_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_0_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal s_ce0_local : STD_LOGIC;
    signal s_1_ce0_local : STD_LOGIC;
    signal s_2_ce0_local : STD_LOGIC;
    signal s_3_ce0_local : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sha3_256_hls_keccak_absorb_once_hls IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        s_0_ce0 : OUT STD_LOGIC;
        s_0_we0 : OUT STD_LOGIC;
        s_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        s_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        s_0_ce1 : OUT STD_LOGIC;
        s_0_we1 : OUT STD_LOGIC;
        s_0_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_0_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        s_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        s_1_ce0 : OUT STD_LOGIC;
        s_1_we0 : OUT STD_LOGIC;
        s_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        s_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        s_1_ce1 : OUT STD_LOGIC;
        s_1_we1 : OUT STD_LOGIC;
        s_1_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        s_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        s_2_ce0 : OUT STD_LOGIC;
        s_2_we0 : OUT STD_LOGIC;
        s_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        s_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        s_2_ce1 : OUT STD_LOGIC;
        s_2_we1 : OUT STD_LOGIC;
        s_2_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        s_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        s_3_ce0 : OUT STD_LOGIC;
        s_3_we0 : OUT STD_LOGIC;
        s_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        s_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        s_3_ce1 : OUT STD_LOGIC;
        s_3_we1 : OUT STD_LOGIC;
        s_3_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_3_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        s_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        s_4_ce0 : OUT STD_LOGIC;
        s_4_we0 : OUT STD_LOGIC;
        s_4_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        s_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        s_4_ce1 : OUT STD_LOGIC;
        s_4_we1 : OUT STD_LOGIC;
        s_4_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_4_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        in_r_ce0 : OUT STD_LOGIC;
        in_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        in_r_ce1 : OUT STD_LOGIC;
        in_r_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        inlen : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sha3_256_hls_KeccakF1600_StatePermute_HLS IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        state_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        state_0_ce0 : OUT STD_LOGIC;
        state_0_we0 : OUT STD_LOGIC;
        state_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        state_0_ce1 : OUT STD_LOGIC;
        state_0_we1 : OUT STD_LOGIC;
        state_0_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_0_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        state_1_ce0 : OUT STD_LOGIC;
        state_1_we0 : OUT STD_LOGIC;
        state_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        state_1_ce1 : OUT STD_LOGIC;
        state_1_we1 : OUT STD_LOGIC;
        state_1_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        state_2_ce0 : OUT STD_LOGIC;
        state_2_we0 : OUT STD_LOGIC;
        state_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        state_2_ce1 : OUT STD_LOGIC;
        state_2_we1 : OUT STD_LOGIC;
        state_2_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        state_3_ce0 : OUT STD_LOGIC;
        state_3_we0 : OUT STD_LOGIC;
        state_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        state_3_ce1 : OUT STD_LOGIC;
        state_3_we1 : OUT STD_LOGIC;
        state_3_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_3_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        state_4_ce0 : OUT STD_LOGIC;
        state_4_we0 : OUT STD_LOGIC;
        state_4_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        state_4_ce1 : OUT STD_LOGIC;
        state_4_we1 : OUT STD_LOGIC;
        state_4_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_4_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sha3_256_hls_sha3_256_hls_Pipeline_extract_output IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        h_31 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_31_ap_vld : OUT STD_LOGIC;
        h_30 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_30_ap_vld : OUT STD_LOGIC;
        h_29 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_29_ap_vld : OUT STD_LOGIC;
        h_28 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_28_ap_vld : OUT STD_LOGIC;
        h_27 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_27_ap_vld : OUT STD_LOGIC;
        h_26 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_26_ap_vld : OUT STD_LOGIC;
        h_25 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_25_ap_vld : OUT STD_LOGIC;
        h_24 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_24_ap_vld : OUT STD_LOGIC;
        h_23 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_23_ap_vld : OUT STD_LOGIC;
        h_22 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_22_ap_vld : OUT STD_LOGIC;
        h_21 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_21_ap_vld : OUT STD_LOGIC;
        h_20 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_20_ap_vld : OUT STD_LOGIC;
        h_19 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_19_ap_vld : OUT STD_LOGIC;
        h_18 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_18_ap_vld : OUT STD_LOGIC;
        h_17 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_17_ap_vld : OUT STD_LOGIC;
        h_16 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_16_ap_vld : OUT STD_LOGIC;
        h_15 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_15_ap_vld : OUT STD_LOGIC;
        h_14 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_14_ap_vld : OUT STD_LOGIC;
        h_13 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_13_ap_vld : OUT STD_LOGIC;
        h_12 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_12_ap_vld : OUT STD_LOGIC;
        h_11 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_11_ap_vld : OUT STD_LOGIC;
        h_10 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_10_ap_vld : OUT STD_LOGIC;
        h_9 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_9_ap_vld : OUT STD_LOGIC;
        h_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_8_ap_vld : OUT STD_LOGIC;
        h_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_7_ap_vld : OUT STD_LOGIC;
        h_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_6_ap_vld : OUT STD_LOGIC;
        h_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_5_ap_vld : OUT STD_LOGIC;
        h_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_4_ap_vld : OUT STD_LOGIC;
        h_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_3_ap_vld : OUT STD_LOGIC;
        h_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_2_ap_vld : OUT STD_LOGIC;
        h_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_1_ap_vld : OUT STD_LOGIC;
        h_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        h_0_ap_vld : OUT STD_LOGIC;
        s_load : IN STD_LOGIC_VECTOR (63 downto 0);
        s_1_load : IN STD_LOGIC_VECTOR (63 downto 0);
        s_2_load : IN STD_LOGIC_VECTOR (63 downto 0);
        s_3_load : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sha3_256_hls_s_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    s_U : component sha3_256_hls_s_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => s_address0,
        ce0 => s_ce0,
        we0 => s_we0,
        d0 => s_d0,
        q0 => s_q0,
        address1 => s_address1,
        ce1 => s_ce1,
        we1 => s_we1,
        d1 => s_d1,
        q1 => s_q1);

    s_1_U : component sha3_256_hls_s_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => s_1_address0,
        ce0 => s_1_ce0,
        we0 => s_1_we0,
        d0 => s_1_d0,
        q0 => s_1_q0,
        address1 => s_1_address1,
        ce1 => s_1_ce1,
        we1 => s_1_we1,
        d1 => s_1_d1,
        q1 => s_1_q1);

    s_2_U : component sha3_256_hls_s_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => s_2_address0,
        ce0 => s_2_ce0,
        we0 => s_2_we0,
        d0 => s_2_d0,
        q0 => s_2_q0,
        address1 => s_2_address1,
        ce1 => s_2_ce1,
        we1 => s_2_we1,
        d1 => s_2_d1,
        q1 => s_2_q1);

    s_3_U : component sha3_256_hls_s_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => s_3_address0,
        ce0 => s_3_ce0,
        we0 => s_3_we0,
        d0 => s_3_d0,
        q0 => s_3_q0,
        address1 => s_3_address1,
        ce1 => s_3_ce1,
        we1 => s_3_we1,
        d1 => s_3_d1,
        q1 => s_3_q1);

    s_4_U : component sha3_256_hls_s_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => s_4_address0,
        ce0 => s_4_ce0,
        we0 => s_4_we0,
        d0 => s_4_d0,
        q0 => s_4_q0,
        address1 => s_4_address1,
        ce1 => s_4_ce1,
        we1 => s_4_we1,
        d1 => s_4_d1,
        q1 => s_4_q1);

    grp_keccak_absorb_once_hls_fu_180 : component sha3_256_hls_keccak_absorb_once_hls
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_keccak_absorb_once_hls_fu_180_ap_start,
        ap_done => grp_keccak_absorb_once_hls_fu_180_ap_done,
        ap_idle => grp_keccak_absorb_once_hls_fu_180_ap_idle,
        ap_ready => grp_keccak_absorb_once_hls_fu_180_ap_ready,
        s_0_address0 => grp_keccak_absorb_once_hls_fu_180_s_0_address0,
        s_0_ce0 => grp_keccak_absorb_once_hls_fu_180_s_0_ce0,
        s_0_we0 => grp_keccak_absorb_once_hls_fu_180_s_0_we0,
        s_0_d0 => grp_keccak_absorb_once_hls_fu_180_s_0_d0,
        s_0_q0 => s_q0,
        s_0_address1 => grp_keccak_absorb_once_hls_fu_180_s_0_address1,
        s_0_ce1 => grp_keccak_absorb_once_hls_fu_180_s_0_ce1,
        s_0_we1 => grp_keccak_absorb_once_hls_fu_180_s_0_we1,
        s_0_d1 => grp_keccak_absorb_once_hls_fu_180_s_0_d1,
        s_0_q1 => s_q1,
        s_1_address0 => grp_keccak_absorb_once_hls_fu_180_s_1_address0,
        s_1_ce0 => grp_keccak_absorb_once_hls_fu_180_s_1_ce0,
        s_1_we0 => grp_keccak_absorb_once_hls_fu_180_s_1_we0,
        s_1_d0 => grp_keccak_absorb_once_hls_fu_180_s_1_d0,
        s_1_q0 => s_1_q0,
        s_1_address1 => grp_keccak_absorb_once_hls_fu_180_s_1_address1,
        s_1_ce1 => grp_keccak_absorb_once_hls_fu_180_s_1_ce1,
        s_1_we1 => grp_keccak_absorb_once_hls_fu_180_s_1_we1,
        s_1_d1 => grp_keccak_absorb_once_hls_fu_180_s_1_d1,
        s_1_q1 => s_1_q1,
        s_2_address0 => grp_keccak_absorb_once_hls_fu_180_s_2_address0,
        s_2_ce0 => grp_keccak_absorb_once_hls_fu_180_s_2_ce0,
        s_2_we0 => grp_keccak_absorb_once_hls_fu_180_s_2_we0,
        s_2_d0 => grp_keccak_absorb_once_hls_fu_180_s_2_d0,
        s_2_q0 => s_2_q0,
        s_2_address1 => grp_keccak_absorb_once_hls_fu_180_s_2_address1,
        s_2_ce1 => grp_keccak_absorb_once_hls_fu_180_s_2_ce1,
        s_2_we1 => grp_keccak_absorb_once_hls_fu_180_s_2_we1,
        s_2_d1 => grp_keccak_absorb_once_hls_fu_180_s_2_d1,
        s_2_q1 => s_2_q1,
        s_3_address0 => grp_keccak_absorb_once_hls_fu_180_s_3_address0,
        s_3_ce0 => grp_keccak_absorb_once_hls_fu_180_s_3_ce0,
        s_3_we0 => grp_keccak_absorb_once_hls_fu_180_s_3_we0,
        s_3_d0 => grp_keccak_absorb_once_hls_fu_180_s_3_d0,
        s_3_q0 => s_3_q0,
        s_3_address1 => grp_keccak_absorb_once_hls_fu_180_s_3_address1,
        s_3_ce1 => grp_keccak_absorb_once_hls_fu_180_s_3_ce1,
        s_3_we1 => grp_keccak_absorb_once_hls_fu_180_s_3_we1,
        s_3_d1 => grp_keccak_absorb_once_hls_fu_180_s_3_d1,
        s_3_q1 => s_3_q1,
        s_4_address0 => grp_keccak_absorb_once_hls_fu_180_s_4_address0,
        s_4_ce0 => grp_keccak_absorb_once_hls_fu_180_s_4_ce0,
        s_4_we0 => grp_keccak_absorb_once_hls_fu_180_s_4_we0,
        s_4_d0 => grp_keccak_absorb_once_hls_fu_180_s_4_d0,
        s_4_q0 => s_4_q0,
        s_4_address1 => grp_keccak_absorb_once_hls_fu_180_s_4_address1,
        s_4_ce1 => grp_keccak_absorb_once_hls_fu_180_s_4_ce1,
        s_4_we1 => grp_keccak_absorb_once_hls_fu_180_s_4_we1,
        s_4_d1 => grp_keccak_absorb_once_hls_fu_180_s_4_d1,
        s_4_q1 => s_4_q1,
        in_r_address0 => grp_keccak_absorb_once_hls_fu_180_in_r_address0,
        in_r_ce0 => grp_keccak_absorb_once_hls_fu_180_in_r_ce0,
        in_r_q0 => in_r_q0,
        in_r_address1 => grp_keccak_absorb_once_hls_fu_180_in_r_address1,
        in_r_ce1 => grp_keccak_absorb_once_hls_fu_180_in_r_ce1,
        in_r_q1 => in_r_q1,
        inlen => inlen_read_reg_283);

    grp_KeccakF1600_StatePermute_HLS_fu_198 : component sha3_256_hls_KeccakF1600_StatePermute_HLS
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakF1600_StatePermute_HLS_fu_198_ap_start,
        ap_done => grp_KeccakF1600_StatePermute_HLS_fu_198_ap_done,
        ap_idle => grp_KeccakF1600_StatePermute_HLS_fu_198_ap_idle,
        ap_ready => grp_KeccakF1600_StatePermute_HLS_fu_198_ap_ready,
        state_0_address0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_address0,
        state_0_ce0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_ce0,
        state_0_we0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_we0,
        state_0_d0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_d0,
        state_0_q0 => s_q0,
        state_0_address1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_address1,
        state_0_ce1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_ce1,
        state_0_we1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_we1,
        state_0_d1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_d1,
        state_0_q1 => s_q1,
        state_1_address0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_address0,
        state_1_ce0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_ce0,
        state_1_we0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_we0,
        state_1_d0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_d0,
        state_1_q0 => s_1_q0,
        state_1_address1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_address1,
        state_1_ce1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_ce1,
        state_1_we1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_we1,
        state_1_d1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_d1,
        state_1_q1 => s_1_q1,
        state_2_address0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_address0,
        state_2_ce0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_ce0,
        state_2_we0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_we0,
        state_2_d0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_d0,
        state_2_q0 => s_2_q0,
        state_2_address1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_address1,
        state_2_ce1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_ce1,
        state_2_we1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_we1,
        state_2_d1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_d1,
        state_2_q1 => s_2_q1,
        state_3_address0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_address0,
        state_3_ce0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_ce0,
        state_3_we0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_we0,
        state_3_d0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_d0,
        state_3_q0 => s_3_q0,
        state_3_address1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_address1,
        state_3_ce1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_ce1,
        state_3_we1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_we1,
        state_3_d1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_d1,
        state_3_q1 => s_3_q1,
        state_4_address0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_address0,
        state_4_ce0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_ce0,
        state_4_we0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_we0,
        state_4_d0 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_d0,
        state_4_q0 => s_4_q0,
        state_4_address1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_address1,
        state_4_ce1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_ce1,
        state_4_we1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_we1,
        state_4_d1 => grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_d1,
        state_4_q1 => s_4_q1);

    grp_sha3_256_hls_Pipeline_extract_output_fu_207 : component sha3_256_hls_sha3_256_hls_Pipeline_extract_output
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_start,
        ap_done => grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_done,
        ap_idle => grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_idle,
        ap_ready => grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_ready,
        h_31 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_31,
        h_31_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_31_ap_vld,
        h_30 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_30,
        h_30_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_30_ap_vld,
        h_29 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_29,
        h_29_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_29_ap_vld,
        h_28 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_28,
        h_28_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_28_ap_vld,
        h_27 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_27,
        h_27_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_27_ap_vld,
        h_26 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_26,
        h_26_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_26_ap_vld,
        h_25 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_25,
        h_25_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_25_ap_vld,
        h_24 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_24,
        h_24_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_24_ap_vld,
        h_23 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_23,
        h_23_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_23_ap_vld,
        h_22 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_22,
        h_22_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_22_ap_vld,
        h_21 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_21,
        h_21_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_21_ap_vld,
        h_20 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_20,
        h_20_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_20_ap_vld,
        h_19 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_19,
        h_19_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_19_ap_vld,
        h_18 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_18,
        h_18_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_18_ap_vld,
        h_17 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_17,
        h_17_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_17_ap_vld,
        h_16 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_16,
        h_16_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_16_ap_vld,
        h_15 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_15,
        h_15_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_15_ap_vld,
        h_14 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_14,
        h_14_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_14_ap_vld,
        h_13 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_13,
        h_13_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_13_ap_vld,
        h_12 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_12,
        h_12_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_12_ap_vld,
        h_11 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_11,
        h_11_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_11_ap_vld,
        h_10 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_10,
        h_10_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_10_ap_vld,
        h_9 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_9,
        h_9_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_9_ap_vld,
        h_8 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_8,
        h_8_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_8_ap_vld,
        h_7 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_7,
        h_7_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_7_ap_vld,
        h_6 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_6,
        h_6_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_6_ap_vld,
        h_5 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_5,
        h_5_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_5_ap_vld,
        h_4 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_4,
        h_4_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_4_ap_vld,
        h_3 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_3,
        h_3_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_3_ap_vld,
        h_2 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_2,
        h_2_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_2_ap_vld,
        h_1 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_1,
        h_1_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_1_ap_vld,
        h_0 => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_0,
        h_0_ap_vld => grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_0_ap_vld,
        s_load => s_load_reg_308,
        s_1_load => s_1_load_reg_313,
        s_2_load => s_2_load_reg_318,
        s_3_load => s_3_load_reg_323);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_KeccakF1600_StatePermute_HLS_fu_198_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakF1600_StatePermute_HLS_fu_198_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_KeccakF1600_StatePermute_HLS_fu_198_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakF1600_StatePermute_HLS_fu_198_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakF1600_StatePermute_HLS_fu_198_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_keccak_absorb_once_hls_fu_180_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_keccak_absorb_once_hls_fu_180_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_keccak_absorb_once_hls_fu_180_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_keccak_absorb_once_hls_fu_180_ap_ready = ap_const_logic_1)) then 
                    grp_keccak_absorb_once_hls_fu_180_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_ready = ap_const_logic_1)) then 
                    grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_0_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_0_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_10_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_10_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_11_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_11_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_11;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_12_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_12_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_13_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_13_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_13;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_14_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_14_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_14;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_15_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_15_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_15;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_16_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_16_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_16;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_17_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_17_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_17;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_18_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_18_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_18;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_19_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_19_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_19;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_1_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_1_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_20_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_20_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_20;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_21_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_21_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_21;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_22_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_22_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_22;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_23_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_23_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_23;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_24_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_24_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_24;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_25_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_25_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_25;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_26_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_26_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_26;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_27_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_27_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_27;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_28_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_28_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_28;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_29_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_29_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_29;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_2_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_2_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_30_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_30_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_30;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_31_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_31_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_31;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_3_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_3_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_4_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_4_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_5_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_5_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_6_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_6_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_7_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_7_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_8_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_8_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_9_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                h_9_reg <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                inlen_read_reg_283 <= inlen;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                s_1_load_reg_313 <= s_1_q0;
                s_2_load_reg_318 <= s_2_q0;
                s_3_load_reg_323 <= s_3_q0;
                s_load_reg_308 <= s_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_keccak_absorb_once_hls_fu_180_ap_done, grp_KeccakF1600_StatePermute_HLS_fu_198_ap_done, grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_keccak_absorb_once_hls_fu_180_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_KeccakF1600_StatePermute_HLS_fu_198_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_ap_done)
    begin
        if ((grp_keccak_absorb_once_hls_fu_180_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_KeccakF1600_StatePermute_HLS_fu_198_ap_done)
    begin
        if ((grp_KeccakF1600_StatePermute_HLS_fu_198_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_done)
    begin
        if ((grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_done, ap_CS_fsm_state7)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_done, ap_CS_fsm_state7)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_KeccakF1600_StatePermute_HLS_fu_198_ap_start <= grp_KeccakF1600_StatePermute_HLS_fu_198_ap_start_reg;
    grp_keccak_absorb_once_hls_fu_180_ap_start <= grp_keccak_absorb_once_hls_fu_180_ap_start_reg;
    grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_start <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_ap_start_reg;

    h_0_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_0, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_0_ap_vld, ap_CS_fsm_state7, h_0_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_0_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_0 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_0;
        else 
            h_0 <= h_0_reg;
        end if; 
    end process;

    h_0_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_0_ap_vld;

    h_1_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_1, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_1_ap_vld, ap_CS_fsm_state7, h_1_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_1_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_1 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_1;
        else 
            h_1 <= h_1_reg;
        end if; 
    end process;


    h_10_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_10, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_10_ap_vld, ap_CS_fsm_state7, h_10_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_10_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_10 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_10;
        else 
            h_10 <= h_10_reg;
        end if; 
    end process;

    h_10_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_10_ap_vld;

    h_11_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_11, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_11_ap_vld, ap_CS_fsm_state7, h_11_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_11_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_11 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_11;
        else 
            h_11 <= h_11_reg;
        end if; 
    end process;

    h_11_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_11_ap_vld;

    h_12_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_12, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_12_ap_vld, ap_CS_fsm_state7, h_12_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_12_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_12 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_12;
        else 
            h_12 <= h_12_reg;
        end if; 
    end process;

    h_12_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_12_ap_vld;

    h_13_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_13, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_13_ap_vld, ap_CS_fsm_state7, h_13_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_13_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_13 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_13;
        else 
            h_13 <= h_13_reg;
        end if; 
    end process;

    h_13_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_13_ap_vld;

    h_14_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_14, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_14_ap_vld, ap_CS_fsm_state7, h_14_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_14_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_14 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_14;
        else 
            h_14 <= h_14_reg;
        end if; 
    end process;

    h_14_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_14_ap_vld;

    h_15_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_15, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_15_ap_vld, ap_CS_fsm_state7, h_15_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_15_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_15 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_15;
        else 
            h_15 <= h_15_reg;
        end if; 
    end process;

    h_15_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_15_ap_vld;

    h_16_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_16, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_16_ap_vld, ap_CS_fsm_state7, h_16_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_16_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_16 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_16;
        else 
            h_16 <= h_16_reg;
        end if; 
    end process;

    h_16_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_16_ap_vld;

    h_17_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_17, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_17_ap_vld, ap_CS_fsm_state7, h_17_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_17_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_17 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_17;
        else 
            h_17 <= h_17_reg;
        end if; 
    end process;

    h_17_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_17_ap_vld;

    h_18_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_18, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_18_ap_vld, ap_CS_fsm_state7, h_18_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_18_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_18 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_18;
        else 
            h_18 <= h_18_reg;
        end if; 
    end process;

    h_18_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_18_ap_vld;

    h_19_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_19, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_19_ap_vld, ap_CS_fsm_state7, h_19_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_19_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_19 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_19;
        else 
            h_19 <= h_19_reg;
        end if; 
    end process;

    h_19_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_19_ap_vld;
    h_1_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_1_ap_vld;

    h_2_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_2, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_2_ap_vld, ap_CS_fsm_state7, h_2_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_2_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_2 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_2;
        else 
            h_2 <= h_2_reg;
        end if; 
    end process;


    h_20_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_20, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_20_ap_vld, ap_CS_fsm_state7, h_20_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_20_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_20 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_20;
        else 
            h_20 <= h_20_reg;
        end if; 
    end process;

    h_20_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_20_ap_vld;

    h_21_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_21, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_21_ap_vld, ap_CS_fsm_state7, h_21_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_21_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_21 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_21;
        else 
            h_21 <= h_21_reg;
        end if; 
    end process;

    h_21_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_21_ap_vld;

    h_22_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_22, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_22_ap_vld, ap_CS_fsm_state7, h_22_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_22_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_22 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_22;
        else 
            h_22 <= h_22_reg;
        end if; 
    end process;

    h_22_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_22_ap_vld;

    h_23_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_23, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_23_ap_vld, ap_CS_fsm_state7, h_23_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_23_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_23 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_23;
        else 
            h_23 <= h_23_reg;
        end if; 
    end process;

    h_23_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_23_ap_vld;

    h_24_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_24, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_24_ap_vld, ap_CS_fsm_state7, h_24_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_24_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_24 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_24;
        else 
            h_24 <= h_24_reg;
        end if; 
    end process;

    h_24_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_24_ap_vld;

    h_25_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_25, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_25_ap_vld, ap_CS_fsm_state7, h_25_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_25_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_25 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_25;
        else 
            h_25 <= h_25_reg;
        end if; 
    end process;

    h_25_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_25_ap_vld;

    h_26_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_26, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_26_ap_vld, ap_CS_fsm_state7, h_26_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_26_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_26 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_26;
        else 
            h_26 <= h_26_reg;
        end if; 
    end process;

    h_26_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_26_ap_vld;

    h_27_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_27, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_27_ap_vld, ap_CS_fsm_state7, h_27_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_27_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_27 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_27;
        else 
            h_27 <= h_27_reg;
        end if; 
    end process;

    h_27_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_27_ap_vld;

    h_28_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_28, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_28_ap_vld, ap_CS_fsm_state7, h_28_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_28_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_28 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_28;
        else 
            h_28 <= h_28_reg;
        end if; 
    end process;

    h_28_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_28_ap_vld;

    h_29_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_29, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_29_ap_vld, ap_CS_fsm_state7, h_29_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_29_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_29 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_29;
        else 
            h_29 <= h_29_reg;
        end if; 
    end process;

    h_29_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_29_ap_vld;
    h_2_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_2_ap_vld;

    h_3_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_3, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_3_ap_vld, ap_CS_fsm_state7, h_3_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_3_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_3 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_3;
        else 
            h_3 <= h_3_reg;
        end if; 
    end process;


    h_30_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_30, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_30_ap_vld, ap_CS_fsm_state7, h_30_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_30_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_30 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_30;
        else 
            h_30 <= h_30_reg;
        end if; 
    end process;

    h_30_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_30_ap_vld;

    h_31_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_31, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_31_ap_vld, h_31_reg, ap_CS_fsm_state7)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_31_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_31 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_31;
        else 
            h_31 <= h_31_reg;
        end if; 
    end process;

    h_31_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_31_ap_vld;
    h_3_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_3_ap_vld;

    h_4_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_4, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_4_ap_vld, ap_CS_fsm_state7, h_4_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_4_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_4 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_4;
        else 
            h_4 <= h_4_reg;
        end if; 
    end process;

    h_4_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_4_ap_vld;

    h_5_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_5, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_5_ap_vld, ap_CS_fsm_state7, h_5_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_5_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_5 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_5;
        else 
            h_5 <= h_5_reg;
        end if; 
    end process;

    h_5_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_5_ap_vld;

    h_6_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_6, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_6_ap_vld, ap_CS_fsm_state7, h_6_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_6_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_6 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_6;
        else 
            h_6 <= h_6_reg;
        end if; 
    end process;

    h_6_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_6_ap_vld;

    h_7_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_7, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_7_ap_vld, ap_CS_fsm_state7, h_7_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_7_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_7 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_7;
        else 
            h_7 <= h_7_reg;
        end if; 
    end process;

    h_7_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_7_ap_vld;

    h_8_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_8, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_8_ap_vld, ap_CS_fsm_state7, h_8_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_8_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_8 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_8;
        else 
            h_8 <= h_8_reg;
        end if; 
    end process;

    h_8_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_8_ap_vld;

    h_9_assign_proc : process(grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_9, grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_9_ap_vld, ap_CS_fsm_state7, h_9_reg)
    begin
        if (((grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_9_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            h_9 <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_9;
        else 
            h_9 <= h_9_reg;
        end if; 
    end process;

    h_9_ap_vld <= grp_sha3_256_hls_Pipeline_extract_output_fu_207_h_9_ap_vld;
    in_r_address0 <= grp_keccak_absorb_once_hls_fu_180_in_r_address0;
    in_r_address1 <= grp_keccak_absorb_once_hls_fu_180_in_r_address1;
    in_r_ce0 <= grp_keccak_absorb_once_hls_fu_180_in_r_ce0;
    in_r_ce1 <= grp_keccak_absorb_once_hls_fu_180_in_r_ce1;

    s_1_address0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_1_address0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_1_address0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_1_address0 <= grp_keccak_absorb_once_hls_fu_180_s_1_address0;
        else 
            s_1_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        end if; 
    end process;


    s_1_address1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_1_address1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_address1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_1_address1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_1_address1 <= grp_keccak_absorb_once_hls_fu_180_s_1_address1;
        else 
            s_1_address1 <= "XXX";
        end if; 
    end process;


    s_1_ce0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_1_ce0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, s_1_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_1_ce0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_1_ce0 <= grp_keccak_absorb_once_hls_fu_180_s_1_ce0;
        else 
            s_1_ce0 <= s_1_ce0_local;
        end if; 
    end process;


    s_1_ce0_local_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            s_1_ce0_local <= ap_const_logic_1;
        else 
            s_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    s_1_ce1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_1_ce1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_ce1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_1_ce1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_1_ce1 <= grp_keccak_absorb_once_hls_fu_180_s_1_ce1;
        else 
            s_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    s_1_d0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_1_d0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_1_d0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_1_d0 <= grp_keccak_absorb_once_hls_fu_180_s_1_d0;
        else 
            s_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    s_1_d1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_1_d1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_d1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_1_d1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_1_d1 <= grp_keccak_absorb_once_hls_fu_180_s_1_d1;
        else 
            s_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    s_1_we0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_1_we0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_1_we0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_1_we0 <= grp_keccak_absorb_once_hls_fu_180_s_1_we0;
        else 
            s_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    s_1_we1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_1_we1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_we1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_1_we1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_1_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_1_we1 <= grp_keccak_absorb_once_hls_fu_180_s_1_we1;
        else 
            s_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    s_2_address0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_2_address0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_2_address0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_2_address0 <= grp_keccak_absorb_once_hls_fu_180_s_2_address0;
        else 
            s_2_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        end if; 
    end process;


    s_2_address1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_2_address1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_address1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_2_address1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_2_address1 <= grp_keccak_absorb_once_hls_fu_180_s_2_address1;
        else 
            s_2_address1 <= "XXX";
        end if; 
    end process;


    s_2_ce0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_2_ce0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, s_2_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_2_ce0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_2_ce0 <= grp_keccak_absorb_once_hls_fu_180_s_2_ce0;
        else 
            s_2_ce0 <= s_2_ce0_local;
        end if; 
    end process;


    s_2_ce0_local_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            s_2_ce0_local <= ap_const_logic_1;
        else 
            s_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    s_2_ce1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_2_ce1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_ce1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_2_ce1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_2_ce1 <= grp_keccak_absorb_once_hls_fu_180_s_2_ce1;
        else 
            s_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    s_2_d0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_2_d0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_2_d0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_2_d0 <= grp_keccak_absorb_once_hls_fu_180_s_2_d0;
        else 
            s_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    s_2_d1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_2_d1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_d1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_2_d1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_2_d1 <= grp_keccak_absorb_once_hls_fu_180_s_2_d1;
        else 
            s_2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    s_2_we0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_2_we0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_2_we0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_2_we0 <= grp_keccak_absorb_once_hls_fu_180_s_2_we0;
        else 
            s_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    s_2_we1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_2_we1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_we1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_2_we1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_2_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_2_we1 <= grp_keccak_absorb_once_hls_fu_180_s_2_we1;
        else 
            s_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    s_3_address0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_3_address0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_3_address0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_3_address0 <= grp_keccak_absorb_once_hls_fu_180_s_3_address0;
        else 
            s_3_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        end if; 
    end process;


    s_3_address1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_3_address1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_address1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_3_address1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_3_address1 <= grp_keccak_absorb_once_hls_fu_180_s_3_address1;
        else 
            s_3_address1 <= "XXX";
        end if; 
    end process;


    s_3_ce0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_3_ce0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, s_3_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_3_ce0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_3_ce0 <= grp_keccak_absorb_once_hls_fu_180_s_3_ce0;
        else 
            s_3_ce0 <= s_3_ce0_local;
        end if; 
    end process;


    s_3_ce0_local_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            s_3_ce0_local <= ap_const_logic_1;
        else 
            s_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    s_3_ce1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_3_ce1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_ce1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_3_ce1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_3_ce1 <= grp_keccak_absorb_once_hls_fu_180_s_3_ce1;
        else 
            s_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    s_3_d0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_3_d0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_3_d0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_3_d0 <= grp_keccak_absorb_once_hls_fu_180_s_3_d0;
        else 
            s_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    s_3_d1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_3_d1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_d1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_3_d1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_3_d1 <= grp_keccak_absorb_once_hls_fu_180_s_3_d1;
        else 
            s_3_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    s_3_we0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_3_we0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_3_we0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_3_we0 <= grp_keccak_absorb_once_hls_fu_180_s_3_we0;
        else 
            s_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    s_3_we1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_3_we1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_we1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_3_we1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_3_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_3_we1 <= grp_keccak_absorb_once_hls_fu_180_s_3_we1;
        else 
            s_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    s_4_address0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_4_address0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_4_address0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_4_address0 <= grp_keccak_absorb_once_hls_fu_180_s_4_address0;
        else 
            s_4_address0 <= "XXX";
        end if; 
    end process;


    s_4_address1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_4_address1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_address1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_4_address1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_4_address1 <= grp_keccak_absorb_once_hls_fu_180_s_4_address1;
        else 
            s_4_address1 <= "XXX";
        end if; 
    end process;


    s_4_ce0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_4_ce0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_4_ce0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_4_ce0 <= grp_keccak_absorb_once_hls_fu_180_s_4_ce0;
        else 
            s_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    s_4_ce1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_4_ce1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_ce1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_4_ce1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_4_ce1 <= grp_keccak_absorb_once_hls_fu_180_s_4_ce1;
        else 
            s_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    s_4_d0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_4_d0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_4_d0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_4_d0 <= grp_keccak_absorb_once_hls_fu_180_s_4_d0;
        else 
            s_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    s_4_d1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_4_d1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_d1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_4_d1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_4_d1 <= grp_keccak_absorb_once_hls_fu_180_s_4_d1;
        else 
            s_4_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    s_4_we0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_4_we0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_4_we0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_4_we0 <= grp_keccak_absorb_once_hls_fu_180_s_4_we0;
        else 
            s_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    s_4_we1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_4_we1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_we1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_4_we1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_4_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_4_we1 <= grp_keccak_absorb_once_hls_fu_180_s_4_we1;
        else 
            s_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    s_address0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_0_address0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_address0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_address0 <= grp_keccak_absorb_once_hls_fu_180_s_0_address0;
        else 
            s_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        end if; 
    end process;


    s_address1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_0_address1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_address1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_address1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_address1 <= grp_keccak_absorb_once_hls_fu_180_s_0_address1;
        else 
            s_address1 <= "XXX";
        end if; 
    end process;


    s_ce0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_0_ce0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, s_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_ce0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_ce0 <= grp_keccak_absorb_once_hls_fu_180_s_0_ce0;
        else 
            s_ce0 <= s_ce0_local;
        end if; 
    end process;


    s_ce0_local_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            s_ce0_local <= ap_const_logic_1;
        else 
            s_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    s_ce1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_0_ce1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_ce1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_ce1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_ce1 <= grp_keccak_absorb_once_hls_fu_180_s_0_ce1;
        else 
            s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    s_d0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_0_d0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_d0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_d0 <= grp_keccak_absorb_once_hls_fu_180_s_0_d0;
        else 
            s_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    s_d1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_0_d1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_d1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_d1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_d1 <= grp_keccak_absorb_once_hls_fu_180_s_0_d1;
        else 
            s_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    s_we0_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_0_we0, grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_we0 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_we0 <= grp_keccak_absorb_once_hls_fu_180_s_0_we0;
        else 
            s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    s_we1_assign_proc : process(grp_keccak_absorb_once_hls_fu_180_s_0_we1, grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_we1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_we1 <= grp_KeccakF1600_StatePermute_HLS_fu_198_state_0_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_we1 <= grp_keccak_absorb_once_hls_fu_180_s_0_we1;
        else 
            s_we1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
