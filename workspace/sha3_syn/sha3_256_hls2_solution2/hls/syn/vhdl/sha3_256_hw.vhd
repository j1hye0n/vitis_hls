-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sha3_256_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    h_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    h_ce0 : OUT STD_LOGIC;
    h_we0 : OUT STD_LOGIC;
    h_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    in_r : IN STD_LOGIC_VECTOR (7 downto 0);
    inlen : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of sha3_256_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "sha3_256_hw_sha3_256_hw,hls_ip_2024_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.917000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=0,HLS_SYN_FF=4278,HLS_SYN_LUT=19066,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv65_1E1E1E1E2 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000111100001111000011110000111100010";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv34_0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_88 : STD_LOGIC_VECTOR (7 downto 0) := "10001000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_FFFFFF78 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111101111000";
    constant ap_const_lv59_6 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_3F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_1_reg_195 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_2_reg_206 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_reg_217 : STD_LOGIC_VECTOR (63 downto 0);
    signal inlen_read_reg_596 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_1_fu_253_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_reg_601 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_reg_606 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln_reg_616 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sub_ln467_1_fu_318_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal sub_ln467_1_reg_621 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal conv_i_i_fu_324_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_i_i_reg_626 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln467_fu_331_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln467_reg_632 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln479_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln480_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln480_reg_653 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln480_reg_653_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln480_fu_356_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln26_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_reg_662 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln480_fu_382_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln480_reg_667 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln27_fu_395_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln27_reg_672 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln26_fu_399_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln26_reg_677 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln26_1_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_1_reg_682 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_1_reg_682_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal s_addr_reg_686 : STD_LOGIC_VECTOR (4 downto 0);
    signal s_addr_reg_686_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal r_1_fu_434_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_1_reg_692 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal xor_ln482_fu_440_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln482_reg_697 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln490_fu_474_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln490_reg_705 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal s_addr_1_reg_710 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln492_fu_498_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln492_reg_716 : STD_LOGIC_VECTOR (2 downto 0);
    signal s_addr_2_reg_721 : STD_LOGIC_VECTOR (4 downto 0);
    signal xor_ln490_fu_531_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln490_reg_727 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal xor_ln492_fu_558_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln492_reg_732 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal bit_sel_reg_743 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal trunc_ln493_fu_572_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln493_reg_748 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_condition_pp0_exit_iter1_state8 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal s_ce0 : STD_LOGIC;
    signal s_we0 : STD_LOGIC;
    signal s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal s_ce1 : STD_LOGIC;
    signal s_we1 : STD_LOGIC;
    signal s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_start : STD_LOGIC;
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_done : STD_LOGIC;
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_idle : STD_LOGIC;
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_ready : STD_LOGIC;
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_s_ce0 : STD_LOGIC;
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_s_we0 : STD_LOGIC;
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_234_ap_start : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_234_ap_done : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_234_ap_idle : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_234_ap_ready : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_234_state_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_234_state_ce0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_234_state_we0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_234_state_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_234_state_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_234_state_ce1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_234_state_we1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_234_state_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_start : STD_LOGIC;
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_done : STD_LOGIC;
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_idle : STD_LOGIC;
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_ready : STD_LOGIC;
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_s_ce0 : STD_LOGIC;
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_h_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_h_ce0 : STD_LOGIC;
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_h_we0 : STD_LOGIC;
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_h_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_i_1_phi_fu_199_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_i_2_phi_fu_210_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_r_phi_fu_221_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_start_reg : STD_LOGIC := '0';
    signal s_we0_out : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_234_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal s_we1_out : STD_LOGIC;
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal zext_ln480_fu_390_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln490_1_fu_488_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln488_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln492_1_fu_510_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_122 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal j_4_fu_446_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_130 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal i_4_fu_468_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_ce1_local : STD_LOGIC;
    signal s_address1_local : STD_LOGIC_VECTOR (4 downto 0);
    signal s_we0_local : STD_LOGIC;
    signal s_ce0_local : STD_LOGIC;
    signal s_address0_local : STD_LOGIC_VECTOR (4 downto 0);
    signal s_we1_local : STD_LOGIC;
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal s_d1_local : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal xor_ln_fu_581_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_248_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_248_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_248_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal select_ln479_fu_282_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_fu_288_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln467_fu_296_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_1_fu_306_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sub_ln467_fu_300_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln467_1_fu_314_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln467_fu_328_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln480_1_fu_376_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln481_fu_368_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln_fu_418_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln27_fu_425_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln27_fu_429_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln481_1_fu_411_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln488_fu_459_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln_fu_478_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln1_fu_501_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln1_fu_515_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln490_fu_522_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln490_fu_526_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln2_fu_537_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln492_fu_544_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal shl_ln492_fu_548_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal zext_ln492_2_fu_554_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln493_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_248_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_248_p00 : STD_LOGIC_VECTOR (64 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component sha3_256_hw_sha3_256_hw_Pipeline_VITIS_LOOP_472_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        s_ce0 : OUT STD_LOGIC;
        s_we0 : OUT STD_LOGIC;
        s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sha3_256_hw_KeccakF1600_StatePermute IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        state_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_ce0 : OUT STD_LOGIC;
        state_we0 : OUT STD_LOGIC;
        state_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        state_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        state_ce1 : OUT STD_LOGIC;
        state_we1 : OUT STD_LOGIC;
        state_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        state_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sha3_256_hw_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        s_ce0 : OUT STD_LOGIC;
        s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        h_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        h_ce0 : OUT STD_LOGIC;
        h_we0 : OUT STD_LOGIC;
        h_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sha3_256_hw_mul_32ns_34ns_65_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (33 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (64 downto 0) );
    end component;


    component sha3_256_hw_s_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    s_U : component sha3_256_hw_s_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => s_address0,
        ce0 => s_ce0,
        we0 => s_we0,
        d0 => s_d0,
        q0 => s_q0,
        address1 => s_address1,
        ce1 => s_ce1,
        we1 => s_we1,
        d1 => s_d1,
        q1 => s_q1);

    grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228 : component sha3_256_hw_sha3_256_hw_Pipeline_VITIS_LOOP_472_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_start,
        ap_done => grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_done,
        ap_idle => grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_idle,
        ap_ready => grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_ready,
        s_address0 => grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_s_address0,
        s_ce0 => grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_s_ce0,
        s_we0 => grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_s_we0,
        s_d0 => grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_s_d0);

    grp_KeccakF1600_StatePermute_fu_234 : component sha3_256_hw_KeccakF1600_StatePermute
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakF1600_StatePermute_fu_234_ap_start,
        ap_done => grp_KeccakF1600_StatePermute_fu_234_ap_done,
        ap_idle => grp_KeccakF1600_StatePermute_fu_234_ap_idle,
        ap_ready => grp_KeccakF1600_StatePermute_fu_234_ap_ready,
        state_address0 => grp_KeccakF1600_StatePermute_fu_234_state_address0,
        state_ce0 => grp_KeccakF1600_StatePermute_fu_234_state_ce0,
        state_we0 => grp_KeccakF1600_StatePermute_fu_234_state_we0,
        state_d0 => grp_KeccakF1600_StatePermute_fu_234_state_d0,
        state_q0 => s_q0,
        state_address1 => grp_KeccakF1600_StatePermute_fu_234_state_address1,
        state_ce1 => grp_KeccakF1600_StatePermute_fu_234_state_ce1,
        state_we1 => grp_KeccakF1600_StatePermute_fu_234_state_we1,
        state_d1 => grp_KeccakF1600_StatePermute_fu_234_state_d1,
        state_q1 => s_q1);

    grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241 : component sha3_256_hw_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_start,
        ap_done => grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_done,
        ap_idle => grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_idle,
        ap_ready => grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_ready,
        s_address0 => grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_s_address0,
        s_ce0 => grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_s_ce0,
        s_q0 => s_q0,
        h_address0 => grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_h_address0,
        h_ce0 => grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_h_ce0,
        h_we0 => grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_h_we0,
        h_d0 => grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_h_d0);

    mul_32ns_34ns_65_2_1_U6 : component sha3_256_hw_mul_32ns_34ns_65_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_248_p0,
        din1 => grp_fu_248_p1,
        ce => grp_fu_248_ce,
        dout => grp_fu_248_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln479_fu_339_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if (((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
                        ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state8) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((icmp_ln479_fu_339_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakF1600_StatePermute_fu_234_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakF1600_StatePermute_fu_234_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    grp_KeccakF1600_StatePermute_fu_234_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakF1600_StatePermute_fu_234_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakF1600_StatePermute_fu_234_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_ready = ap_const_logic_1)) then 
                    grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                    grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_ready = ap_const_logic_1)) then 
                    grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_reg_195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln480_reg_653 = ap_const_lv1_0))) then 
                i_1_reg_195 <= select_ln480_reg_667;
            elsif (((icmp_ln479_fu_339_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_1_reg_195 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_2_reg_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln480_reg_653 = ap_const_lv1_0))) then 
                i_2_reg_206 <= add_ln26_reg_677;
            elsif (((icmp_ln479_fu_339_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_2_reg_206 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln479_fu_339_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_fu_130 <= ap_const_lv32_0;
            elsif (((icmp_ln488_fu_463_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                i_fu_130 <= i_4_fu_468_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln480_fu_350_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_184 <= add_ln480_fu_356_p2;
            elsif (((icmp_ln479_fu_339_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                indvar_flatten_reg_184 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    j_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_fu_122 <= j_1_fu_253_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                j_fu_122 <= j_4_fu_446_p2;
            end if; 
        end if;
    end process;

    r_reg_217_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln480_reg_653_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                r_reg_217 <= r_1_reg_692;
            elsif (((icmp_ln479_fu_339_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                r_reg_217 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln26_reg_677 <= add_ln26_fu_399_p2;
                select_ln480_reg_667 <= select_ln480_fu_382_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln467_reg_632 <= add_ln467_fu_331_p2;
                    conv_i_i_reg_626(7 downto 0) <= conv_i_i_fu_324_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                bit_sel_reg_743 <= s_q0(63 downto 63);
                trunc_ln493_reg_748 <= trunc_ln493_fu_572_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                empty_reg_606 <= empty_fu_257_p2;
                inlen_read_reg_596 <= inlen;
                j_1_reg_601 <= j_1_fu_253_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln26_1_reg_682 <= icmp_ln26_1_fu_405_p2;
                icmp_ln26_1_reg_682_pp0_iter1_reg <= icmp_ln26_1_reg_682;
                icmp_ln26_reg_662 <= icmp_ln26_fu_362_p2;
                icmp_ln480_reg_653 <= icmp_ln480_fu_350_p2;
                icmp_ln480_reg_653_pp0_iter1_reg <= icmp_ln480_reg_653;
                s_addr_reg_686 <= zext_ln480_fu_390_p1(5 - 1 downto 0);
                s_addr_reg_686_pp0_iter1_reg <= s_addr_reg_686;
                trunc_ln27_reg_672 <= trunc_ln27_fu_395_p1;
                xor_ln482_reg_697 <= xor_ln482_fu_440_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_1_reg_692 <= r_1_fu_434_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                s_addr_1_reg_710 <= zext_ln490_1_fu_488_p1(5 - 1 downto 0);
                s_addr_2_reg_721 <= zext_ln492_1_fu_510_p1(5 - 1 downto 0);
                trunc_ln490_reg_705 <= trunc_ln490_fu_474_p1;
                trunc_ln492_reg_716 <= trunc_ln492_fu_498_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    sub_ln467_1_reg_621(33 downto 3) <= sub_ln467_1_fu_318_p2(33 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                trunc_ln_reg_616 <= grp_fu_248_p2(64 downto 40);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                xor_ln490_reg_727 <= xor_ln490_fu_531_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                xor_ln492_reg_732 <= xor_ln492_fu_558_p2;
            end if;
        end if;
    end process;
    sub_ln467_1_reg_621(2 downto 0) <= "000";
    conv_i_i_reg_626(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln479_fu_339_p2, ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state12, ap_block_pp0_stage0_subdone, ap_condition_pp0_exit_iter1_state8, grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_done, grp_KeccakF1600_StatePermute_fu_234_ap_done, grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_done, ap_CS_fsm_state11, ap_CS_fsm_state21, ap_CS_fsm_state23, icmp_ln488_fu_463_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln479_fu_339_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state8) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state8) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((grp_KeccakF1600_StatePermute_fu_234_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((icmp_ln488_fu_463_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((grp_KeccakF1600_StatePermute_fu_234_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln26_fu_399_p2 <= std_logic_vector(unsigned(select_ln481_fu_368_p3) + unsigned(ap_const_lv4_1));
    add_ln467_fu_331_p2 <= std_logic_vector(signed(sext_ln467_fu_328_p1) + signed(inlen_read_reg_596));
    add_ln480_1_fu_376_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_1_phi_fu_199_p4) + unsigned(ap_const_lv5_1));
    add_ln480_fu_356_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_184) + unsigned(ap_const_lv8_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(7);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state12 <= ap_CS_fsm(9);
    ap_CS_fsm_state13 <= ap_CS_fsm(10);
    ap_CS_fsm_state14 <= ap_CS_fsm(11);
    ap_CS_fsm_state15 <= ap_CS_fsm(12);
    ap_CS_fsm_state16 <= ap_CS_fsm(13);
    ap_CS_fsm_state17 <= ap_CS_fsm(14);
    ap_CS_fsm_state18 <= ap_CS_fsm(15);
    ap_CS_fsm_state19 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(17);
    ap_CS_fsm_state21 <= ap_CS_fsm(18);
    ap_CS_fsm_state22 <= ap_CS_fsm(19);
    ap_CS_fsm_state23 <= ap_CS_fsm(20);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_KeccakF1600_StatePermute_fu_234_ap_done)
    begin
        if ((grp_KeccakF1600_StatePermute_fu_234_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;

    ap_ST_fsm_state21_blk_assign_proc : process(grp_KeccakF1600_StatePermute_fu_234_ap_done)
    begin
        if ((grp_KeccakF1600_StatePermute_fu_234_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state22_blk <= ap_const_logic_0;

    ap_ST_fsm_state23_blk_assign_proc : process(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_done)
    begin
        if ((grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state23_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state23_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_done)
    begin
        if ((grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter1_state8_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp0_flush_enable_assign_proc : process(icmp_ln480_fu_350_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln480_fu_350_p2 = ap_const_lv1_1))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_done, ap_CS_fsm_state23)
    begin
        if (((grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_1_phi_fu_199_p4_assign_proc : process(i_1_reg_195, icmp_ln480_reg_653, ap_CS_fsm_pp0_stage0, select_ln480_reg_667, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln480_reg_653 = ap_const_lv1_0))) then 
            ap_phi_mux_i_1_phi_fu_199_p4 <= select_ln480_reg_667;
        else 
            ap_phi_mux_i_1_phi_fu_199_p4 <= i_1_reg_195;
        end if; 
    end process;


    ap_phi_mux_i_2_phi_fu_210_p4_assign_proc : process(i_2_reg_206, icmp_ln480_reg_653, ap_CS_fsm_pp0_stage0, add_ln26_reg_677, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln480_reg_653 = ap_const_lv1_0))) then 
            ap_phi_mux_i_2_phi_fu_210_p4 <= add_ln26_reg_677;
        else 
            ap_phi_mux_i_2_phi_fu_210_p4 <= i_2_reg_206;
        end if; 
    end process;


    ap_phi_mux_r_phi_fu_221_p4_assign_proc : process(r_reg_217, icmp_ln480_reg_653_pp0_iter1_reg, r_1_reg_692, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln480_reg_653_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_r_phi_fu_221_p4 <= r_1_reg_692;
        else 
            ap_phi_mux_r_phi_fu_221_p4 <= r_reg_217;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_done, ap_CS_fsm_state23)
    begin
        if (((grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    conv_i_i_fu_324_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(in_r),64));
    empty_fu_257_p2 <= "1" when (unsigned(j_1_fu_253_p1) < unsigned(ap_const_lv32_87)) else "0";
    grp_KeccakF1600_StatePermute_fu_234_ap_start <= grp_KeccakF1600_StatePermute_fu_234_ap_start_reg;

    grp_fu_248_ce_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            grp_fu_248_ce <= ap_const_logic_1;
        else 
            grp_fu_248_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_248_p0 <= grp_fu_248_p00(32 - 1 downto 0);
    grp_fu_248_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_reg_601),65));
    grp_fu_248_p1 <= ap_const_lv65_1E1E1E1E2(34 - 1 downto 0);
    grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_start <= grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_ap_start_reg;
    grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_start <= grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_ap_start_reg;
    h_address0 <= grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_h_address0;
    h_ce0 <= grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_h_ce0;
    h_d0 <= grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_h_d0;
    h_we0 <= grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_h_we0;
    i_4_fu_468_p2 <= std_logic_vector(unsigned(i_fu_130) + unsigned(ap_const_lv32_1));
    icmp_ln26_1_fu_405_p2 <= "1" when (add_ln26_fu_399_p2 = ap_const_lv4_8) else "0";
    icmp_ln26_fu_362_p2 <= "1" when (ap_phi_mux_i_2_phi_fu_210_p4 = ap_const_lv4_8) else "0";
    icmp_ln479_fu_339_p2 <= "1" when (unsigned(j_fu_122) > unsigned(ap_const_lv32_87)) else "0";
    icmp_ln480_fu_350_p2 <= "1" when (indvar_flatten_reg_184 = ap_const_lv8_88) else "0";
    icmp_ln488_fu_463_p2 <= "1" when (unsigned(add_ln467_reg_632) > unsigned(zext_ln488_fu_459_p1)) else "0";
    j_1_fu_253_p1 <= inlen(32 - 1 downto 0);
    j_4_fu_446_p2 <= std_logic_vector(unsigned(j_fu_122) + unsigned(ap_const_lv32_FFFFFF78));
    lshr_ln1_fu_501_p4 <= add_ln467_reg_632(7 downto 3);
    lshr_ln_fu_478_p4 <= i_fu_130(7 downto 3);
    r_1_fu_434_p2 <= (shl_ln27_fu_429_p2 or select_ln481_1_fu_411_p3);

    s_address0_assign_proc : process(ap_CS_fsm_state2, grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_s_address0, grp_KeccakF1600_StatePermute_fu_234_state_address0, grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_s_address0, ap_CS_fsm_state11, ap_CS_fsm_state21, ap_CS_fsm_state23, s_address0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            s_address0 <= grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_s_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            s_address0 <= grp_KeccakF1600_StatePermute_fu_234_state_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_address0 <= grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_s_address0;
        else 
            s_address0 <= s_address0_local;
        end if; 
    end process;


    s_address0_local_assign_proc : process(s_addr_reg_686_pp0_iter1_reg, ap_CS_fsm_state12, ap_CS_fsm_state17, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, zext_ln490_1_fu_488_p1, icmp_ln488_fu_463_p2, zext_ln492_1_fu_510_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            s_address0_local <= ap_const_lv64_10(5 - 1 downto 0);
        elsif (((icmp_ln488_fu_463_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            s_address0_local <= zext_ln492_1_fu_510_p1(5 - 1 downto 0);
        elsif (((icmp_ln488_fu_463_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            s_address0_local <= zext_ln490_1_fu_488_p1(5 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            s_address0_local <= s_addr_reg_686_pp0_iter1_reg;
        else 
            s_address0_local <= "XXXXX";
        end if; 
    end process;


    s_address1_assign_proc : process(grp_KeccakF1600_StatePermute_fu_234_state_address1, ap_CS_fsm_state11, ap_CS_fsm_state21, s_address1_local)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            s_address1 <= grp_KeccakF1600_StatePermute_fu_234_state_address1;
        else 
            s_address1 <= s_address1_local;
        end if; 
    end process;


    s_address1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, s_addr_1_reg_710, s_addr_2_reg_721, ap_block_pp0_stage0, zext_ln480_fu_390_p1, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            s_address1_local <= ap_const_lv64_10(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            s_address1_local <= s_addr_2_reg_721;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            s_address1_local <= s_addr_1_reg_710;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            s_address1_local <= zext_ln480_fu_390_p1(5 - 1 downto 0);
        else 
            s_address1_local <= "XXXXX";
        end if; 
    end process;


    s_ce0_assign_proc : process(ap_CS_fsm_state2, grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_s_ce0, grp_KeccakF1600_StatePermute_fu_234_state_ce0, grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_s_ce0, ap_CS_fsm_state11, ap_CS_fsm_state21, ap_CS_fsm_state23, s_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            s_ce0 <= grp_sha3_256_hw_Pipeline_VITIS_LOOP_761_1_VITIS_LOOP_43_1_fu_241_s_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            s_ce0 <= grp_KeccakF1600_StatePermute_fu_234_state_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_ce0 <= grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_s_ce0;
        else 
            s_ce0 <= s_ce0_local;
        end if; 
    end process;


    s_ce0_local_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_state12, ap_CS_fsm_state17, ap_enable_reg_pp0_iter2, icmp_ln488_fu_463_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((icmp_ln488_fu_463_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((icmp_ln488_fu_463_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            s_ce0_local <= ap_const_logic_1;
        else 
            s_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    s_ce1_assign_proc : process(grp_KeccakF1600_StatePermute_fu_234_state_ce1, ap_CS_fsm_state11, ap_CS_fsm_state21, s_ce1_local)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            s_ce1 <= grp_KeccakF1600_StatePermute_fu_234_state_ce1;
        else 
            s_ce1 <= s_ce1_local;
        end if; 
    end process;


    s_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            s_ce1_local <= ap_const_logic_1;
        else 
            s_ce1_local <= ap_const_logic_0;
        end if; 
    end process;


    s_d0_assign_proc : process(ap_CS_fsm_state2, xor_ln482_reg_697, grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_s_d0, grp_KeccakF1600_StatePermute_fu_234_state_d0, ap_CS_fsm_state11, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            s_d0 <= grp_KeccakF1600_StatePermute_fu_234_state_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_d0 <= grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_s_d0;
        else 
            s_d0 <= xor_ln482_reg_697;
        end if; 
    end process;


    s_d1_assign_proc : process(grp_KeccakF1600_StatePermute_fu_234_state_d1, ap_CS_fsm_state11, ap_CS_fsm_state21, s_d1_local)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            s_d1 <= grp_KeccakF1600_StatePermute_fu_234_state_d1;
        else 
            s_d1 <= s_d1_local;
        end if; 
    end process;


    s_d1_local_assign_proc : process(xor_ln490_reg_727, xor_ln492_reg_732, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state19, xor_ln_fu_581_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            s_d1_local <= xor_ln_fu_581_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            s_d1_local <= xor_ln492_reg_732;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            s_d1_local <= xor_ln490_reg_727;
        else 
            s_d1_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    s_we0_assign_proc : process(ap_CS_fsm_state2, grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_s_we0, grp_KeccakF1600_StatePermute_fu_234_state_we0, s_we0_out, ap_CS_fsm_state11, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            s_we0 <= grp_KeccakF1600_StatePermute_fu_234_state_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_we0 <= grp_sha3_256_hw_Pipeline_VITIS_LOOP_472_1_fu_228_s_we0;
        else 
            s_we0 <= (s_we0_out or ap_const_logic_0);
        end if; 
    end process;


    s_we0_local_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln26_1_reg_682_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln26_1_reg_682_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            s_we0_local <= ap_const_logic_1;
        else 
            s_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    s_we0_out <= s_we0_local;

    s_we1_assign_proc : process(grp_KeccakF1600_StatePermute_fu_234_state_we1, ap_CS_fsm_state11, s_we1_out, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            s_we1 <= grp_KeccakF1600_StatePermute_fu_234_state_we1;
        else 
            s_we1 <= (s_we1_out or ap_const_logic_0);
        end if; 
    end process;


    s_we1_local_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            s_we1_local <= ap_const_logic_1;
        else 
            s_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    s_we1_out <= s_we1_local;
    select_ln479_fu_282_p3 <= 
        ap_const_lv25_0 when (empty_reg_606(0) = '1') else 
        trunc_ln_reg_616;
    select_ln480_fu_382_p3 <= 
        add_ln480_1_fu_376_p2 when (icmp_ln26_fu_362_p2(0) = '1') else 
        ap_phi_mux_i_1_phi_fu_199_p4;
    select_ln481_1_fu_411_p3 <= 
        ap_const_lv64_0 when (icmp_ln26_reg_662(0) = '1') else 
        ap_phi_mux_r_phi_fu_221_p4;
    select_ln481_fu_368_p3 <= 
        ap_const_lv4_0 when (icmp_ln26_fu_362_p2(0) = '1') else 
        ap_phi_mux_i_2_phi_fu_210_p4;
        sext_ln467_fu_328_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln467_1_reg_621),64));

    shl_ln1_fu_515_p3 <= (trunc_ln490_reg_705 & ap_const_lv3_0);
    shl_ln27_fu_429_p2 <= std_logic_vector(shift_left(unsigned(conv_i_i_reg_626),to_integer(unsigned('0' & zext_ln27_fu_425_p1(31-1 downto 0)))));
    shl_ln2_fu_537_p3 <= (trunc_ln492_reg_716 & ap_const_lv3_0);
    shl_ln490_fu_526_p2 <= std_logic_vector(shift_left(unsigned(conv_i_i_reg_626),to_integer(unsigned('0' & zext_ln490_fu_522_p1(31-1 downto 0)))));
    shl_ln492_fu_548_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv59_6),to_integer(unsigned('0' & zext_ln492_fu_544_p1(31-1 downto 0)))));
    shl_ln_fu_418_p3 <= (trunc_ln27_reg_672 & ap_const_lv3_0);
    sub_ln467_1_fu_318_p2 <= std_logic_vector(unsigned(sub_ln467_fu_300_p2) - unsigned(zext_ln467_1_fu_314_p1));
    sub_ln467_fu_300_p2 <= std_logic_vector(unsigned(ap_const_lv34_0) - unsigned(zext_ln467_fu_296_p1));
    tmp_1_fu_306_p3 <= (select_ln479_fu_282_p3 & ap_const_lv3_0);
    tmp_fu_288_p3 <= (select_ln479_fu_282_p3 & ap_const_lv7_0);
    trunc_ln27_fu_395_p1 <= select_ln481_fu_368_p3(3 - 1 downto 0);
    trunc_ln490_fu_474_p1 <= i_fu_130(3 - 1 downto 0);
    trunc_ln492_fu_498_p1 <= add_ln467_reg_632(3 - 1 downto 0);
    trunc_ln493_fu_572_p1 <= s_q0(63 - 1 downto 0);
    xor_ln482_fu_440_p2 <= (s_q1 xor r_1_fu_434_p2);
    xor_ln490_fu_531_p2 <= (shl_ln490_fu_526_p2 xor s_q0);
    xor_ln492_fu_558_p2 <= (zext_ln492_2_fu_554_p1 xor s_q0);
    xor_ln493_fu_576_p2 <= (bit_sel_reg_743 xor ap_const_lv1_1);
    xor_ln_fu_581_p3 <= (xor_ln493_fu_576_p2 & trunc_ln493_reg_748);
    zext_ln27_fu_425_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_418_p3),64));
    zext_ln467_1_fu_314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_306_p3),34));
    zext_ln467_fu_296_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_288_p3),34));
    zext_ln480_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln480_fu_382_p3),64));
    zext_ln488_fu_459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_130),64));
    zext_ln490_1_fu_488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_478_p4),64));
    zext_ln490_fu_522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_515_p3),64));
    zext_ln492_1_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1_fu_501_p4),64));
    zext_ln492_2_fu_554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln492_fu_548_p2),64));
    zext_ln492_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_537_p3),59));
end behav;
